[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            linkcss             : true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            stylesheet          : \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            icons               : \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            experimental        : true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            sectlinks           : true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            idprefix            : \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            idseparator         : \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-root\u0027         : \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-name\u0027         : \u0027StudyBuddy\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-githuburl\u0027    : \u0027https://github.com/AY1920S2-CS2103T-W16-3/main\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-seedu\u0027        : true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 153
    }
  },
  {
    "path": "src/main/java/seedu/address/AppParameters.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the parsed command-line parameters given to the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParameters {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path configPath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the application command-line parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AppParameters parse(Application.Parameters parameters) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d new AppParameters();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String configPathParameter \u003d namedParameters.get(\"config\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            configPathParameter \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return appParameters;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path getConfigPath() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setConfigPath(Path configPath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.configPath \u003d configPath;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath.hashCode();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof AppParameters)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters otherAppParameters \u003d (AppParameters) other;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 13,
      "-": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * This is a workaround for the following error when MainApp is made the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * entry point of the application:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * The reason is that MainApp extends Application. In that case, the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * LauncherHelper will check for the javafx.graphics module to be present"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * to be the entry point of the application, we avoid this issue."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(MainApp.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.AddressBookStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StudyBuddy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(\"Starting StudyBuddy \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Study Buddy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        ReadOnlyAddressBook initialData;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            addressBookOptional \u003d storage.readAddressBook();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!addressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default config properties\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default user prefs\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "wyt-sonia": 15,
      "-": 166
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Config.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Config values used by the app"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Config {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Config values customizable through config file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Level logLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public Level getLogLevel() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return logLevel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLogLevel(Level logLevel) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logLevel \u003d logLevel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFilePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefsFilePath(Path userPrefsFilePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsFilePath \u003d userPrefsFilePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(logLevel, userPrefsFilePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Config)) { //this handles null as well."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Config o \u003d (Config) other;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(logLevel, o.logLevel)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Current log level : \" + logLevel);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 5,
      "-": 58
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 740;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 5,
      "-": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/LogsCenter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_FILE \u003d \"addressbook.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes with a custom log level (specified in the {@code config} object)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logging levels for existing loggers will only be updated if the logger with the same name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * is requested again from the LogsCenter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void init(Config config) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 111
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Version.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a version with major, minor and patch number"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Version implements Comparable\u003cVersion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int major;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int minor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int patch;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean isEarlyAccess;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public Version(int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.major \u003d major;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minor \u003d minor;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.patch \u003d patch;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isEarlyAccess \u003d isEarlyAccess;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a version number string in the format V1.2.3."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param versionString version number string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a Version object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Version fromString(String versionString) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!versionMatcher.find()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Version(Integer.parseInt(versionMatcher.group(1)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(2)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(3)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            versionMatcher.group(4) \u003d\u003d null ? false : true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMajor() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return major;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMinor() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return minor;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getPatch() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return patch;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEarlyAccess() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEarlyAccess;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public int compareTo(Version other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (major !\u003d other.major) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return major - other.major;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if (minor !\u003d other.minor) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            return minor - other.minor;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if (patch !\u003d other.patch) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return patch - other.patch;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isEarlyAccess) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            hash \u003d \"1\" + hash;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Integer.parseInt(hash);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof Version)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        final Version other \u003d (Version) obj;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return compareTo(other) \u003d\u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 27,
      "-": 87
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/index/Index.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a zero-based or one-based index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * base the other component is using for its index. However, after receiving the {@code Index}, that component can"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * convert it back to an int if the index will not be passed to a different component again."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Index {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Index can only be created by calling {@link Index#fromZeroBased(int)} or"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Index#fromOneBased(int)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Index(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        if (zeroBasedIndex \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zeroBasedIndex \u003d zeroBasedIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a zero-based index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromZeroBased(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(zeroBasedIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a one-based index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromOneBased(int oneBasedIndex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(oneBasedIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getZeroBased() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getOneBased() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Index // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 9,
      "-": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/CollectionUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Utility methods related to Collections"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #requireAllNonNull(Collection)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Object... items) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Stream.of(items).forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Throws NullPointerException if {@code items} or any element of {@code items} is null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        items.forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code items} contain any elements that are non-null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isAnyNonNull(Object... items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/FileUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Writes and reads files"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String CHARSET \u003d \"UTF-8\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isFileExists(Path file) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(URI)}},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise returns false."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param path A string representing the file path. Cannot be null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPath(String path) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Paths.get(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidPathException ipe) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createIfMissing(Path file) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFileExists(file)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            createFile(file);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Files.exists(file)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        createParentDirsOfFile(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createFile(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates parent directories of file if it has a parent directory"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createParentDirsOfFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Path parentDir \u003d file.getParent();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (parentDir !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(parentDir);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Assumes file exists"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String readFromFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String(Files.readAllBytes(file), CHARSET);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes given string to a file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will create the file if it does not exist yet."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void writeToFile(Path file, String content) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.write(file, content.getBytes(CHARSET));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 82
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/JsonUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationContext;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.module.SimpleModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Converts a Java object instance to JSON and vice versa"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        .registerModule(new SimpleModule(\"SimpleModule\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .addSerializer(Level.class, new ToStringSerializer())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * If any values are missing from the file, default values will be used, as long as the file is a valid json file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath                   cannot be null."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Json file \" + filePath + \" not found\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        T jsonFile;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.of(jsonFile);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the Json object to the specified file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param jsonFile cannot be null"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath cannot be null"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was an error during writing to the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(jsonFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        serializeObjectToJsonFile(filePath, jsonFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given string representation of a JSON data to instance of a class"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The instance of T with the specified values in the JSON string"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.readValue(json, instanceClass);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given instance of a class into its JSON data string representation"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instance The T object to be converted into the JSON string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e      The generic type to create an instance of"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return JSON data representation of the given class instance, in string"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Contains methods that retrieve logging level from serialized string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        protected LevelDeserializer(Class\u003c?\u003e vc) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            super(vc);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        protected Level _deserialize(String value, DeserializationContext ctxt) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            return getLoggingLevel(value);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         * Gets the logging level that matches loggingLevelString"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns null if there are no matches"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        private Level getLoggingLevel(String loggingLevelString) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.parse(loggingLevelString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public Class\u003cLevel\u003e handledType() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.class;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 142
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/StringUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Helper functions for handling strings."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code sentence} contains the {@code word}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ignores case, but a full word match is required."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003eexamples:\u003cpre\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     *       \u003c/pre\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param sentence cannot be null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param word     cannot be null, cannot be empty, must be a single word"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean containsWordIgnoreCase(String sentence, String word) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(sentence);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(word);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        String preppedWord \u003d word.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String preppedSentence \u003d sentence;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(wordsInPreppedSentence)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .anyMatch(preppedWord::equalsIgnoreCase);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed message of the t, including the stack trace."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDetails(Throwable t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        t.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return t.getMessage() + \"\\n\" + sw.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code s} represents a non-zero unsigned integer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will return false for any other non-null string input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code s} is null."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isNonZeroUnsignedInteger(String s) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException   If an error occurs during parsing."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the AddressBook."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#getAddressBook()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of persons"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks that are due soon"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of archived tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 6,
      "wyt-sonia": 13,
      "-": 49,
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.AddressBookParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser addressBookParser;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBookParser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult commandResult \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Command command \u003d addressBookParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (java.text.ParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // keep track of task list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Task.updateCurrentTaskList(new ArrayList\u003cTask\u003e(getAddressBook().getTaskList()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBook();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredPersonList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return model.getFilteredTaskList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return model.getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBookFilePath();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 11,
      "wyt-sonia": 11,
      "-": 88,
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ClearTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Clears the address book."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Study Buddy has been cleared!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setAddressBook(new AddressBook());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "-": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 3,
      "-": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Help information should be shown to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The application should exit.1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, exit);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "wyt-sonia": 10,
      "-": 64
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Edits the details of an existing task in the address book."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String EDIT_TASK_SUCCESS \u003d \"Task has been edited successfully\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskField taskField;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String newTaskName \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TaskType newTaskType \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private LocalDateTime[] newDateTimes \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Creates an edit task command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param targetIndex index of target task to be edited"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskField the task field to be edited"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskCommand(Index targetIndex, TaskField taskField) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(targetIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(taskField);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskField \u003d taskField;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewTaskName(String newTaskName) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newTaskName \u003d newTaskName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewTaskType(TaskType newTaskType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newTaskType \u003d newTaskType;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewDateTime(LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newDateTimes \u003d newDateTimes;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task taskToEdit \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskName(taskToEdit, newTaskName);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskType(taskToEdit, newTaskType);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskDateTime(taskToEdit, newDateTimes);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(EDIT_TASK_SUCCESS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Finds and lists all tasks in the tasks list whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Keyword matching is case-insensitive."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(\"Here is the list of matching tasks\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof FindTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Represent a ListTaskCommand that can List all persons in the task list to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RefreshCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Archives an entry in the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class RefreshCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Refreshes the tasks and update their status\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUE_SOON_TASK_SUCCESS \u003d \"Tasks\u0027 status are updated and \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"tasks due soon are displayed\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public RefreshCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task task \u003d lastShownList.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            boolean isStatusExpired \u003d task.isStatusExpired();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            /*if (isStatusExpired) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Task temp \u003d task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                model.deleteTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                temp.freshStatus();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                model.addTask(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (task.isDueSoon()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (model.getFilteredDueSoonTaskList().contains(task)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.addDueSoonTask(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (model.getFilteredDueSoonTaskList().contains(task)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.deleteDueSoonTask(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.sortDueSoonTasks();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DUE_SOON_TASK_SUCCESS));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof RefreshCommand); // state check"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 50,
      "wyt-sonia": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/SortTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommand that can handle the sorting of tasks according to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * user choice."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \": Sort the tasks by keyword chosen by user. \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Parameters: Sort Keyword (1 (deadline / task start date), 2 (task name) and 3 creation datetime)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Sort Task: %1$s\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String sortKeyword;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommand(String sortKeyword) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.sortKeyword \u003d sortKeyword;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e temp \u003d model.getAddressBook().getTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        model.sortTasks(sortKeyword);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS, sortKeyword));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof SortTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 sortKeyword.equals(((SortTaskCommand) other).sortKeyword)); // state check"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 48
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/add/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Parameters: TaskName, TaskType, TaskDateTime\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This Task already exists. Are you sure you want to proceed?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an AddTaskCommand to add the specified {@code Task}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (model.hasTask(toAdd)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (!toAdd.isDuplicate()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                toAdd.setDuplicate(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_DUPLICATE_TASK, toAdd));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        model.addTask(toAdd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof AddTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 7,
      "aegis-bot": 3,
      "wyt-sonia": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/add/CreateModCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A command to create modules."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create mod\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new mod. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Parameters: Name \u0026 Code\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Mod added: %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This module already exists in the address book\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Module mod;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModCommand(Module mod) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.mod \u003d mod;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (model.hasMod(mod)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.addMod(mod);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, mod));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof CreateModCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 mod.equals(((CreateModCommand) other).mod));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/delete/DeleteDuplicateTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Deletes all repeated tasks from the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete duplicates\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \": Deletes any duplicate tasks in the displayed task list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS \u003d \"Deleted duplicate tasks\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteDuplicateTaskCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task task1 \u003d lastShownList.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (int j \u003d 0; j \u003c lastShownList.size(); j++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (i \u003d\u003d j) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    Task task2 \u003d lastShownList.get(j);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    if (task1.getTaskType() !\u003d task2.getTaskType()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        if (!task1.getTaskName().equals(task2.getTaskName())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            if (!task1.getTimeString().equals(task2.getTimeString())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                continue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                Task taskToDelete \u003d lastShownList.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                model.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof DeleteDuplicateTaskCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 69,
      "aegis-bot": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/delete/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Deletes a task identified using it\u0027s displayed index from the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \": Deletes the task identified by the index number used in the displayed task list.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof DeleteTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 53,
      "aegis-bot": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/edit/ArchiveTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Archives an entry in the address book."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"archive\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Archives the selected entry\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_ARCHIVE_TASK_SUCCESS \u003d \"Archived Task: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        model.deleteTask(taskToArchive);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        model.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            || (other instanceof ArchiveTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((ArchiveTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "aegis-bot": 3,
      "gx-huang": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/edit/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Completes a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"Complete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \": Complete the task based on the displayed list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_COMPLETE_TASK_SUCCESS \u003d \"Task Completed: [task name]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task taskToComplete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.completeTask(taskToComplete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.deleteTask(taskToComplete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.archiveTask(taskToComplete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_COMPLETE_TASK_SUCCESS, taskToComplete));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an error which occurs during execution of a {@link seedu.address.logic.commands.Command}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a person to the address book."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Parameters: TaskName, TaskType, TaskDateTime\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This Task already exists in the address book\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Person toAdd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an AddCommand to add the specified {@code Person}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Person person) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        toAdd \u003d person;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        if (model.hasPerson(toAdd)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        model.addPerson(toAdd);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof AddCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "wyt-sonia": 4,
      "-": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Deletes a person identified using it\u0027s displayed index from the address book."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        + \": Deletes the person identified by the index number used in the displayed person list.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public DeleteCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        model.deletePerson(personToDelete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof DeleteCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " * Edits the details of an existing person in the address book."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"by the index number used in the displayed person list. \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[\" + PREFIX_PHONE + \"PHONE] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[\" + PREFIX_EMAIL + \"EMAIL] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        + PREFIX_PHONE + \"91234567 \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        + PREFIX_EMAIL + \"johndoe@example.com\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EditPersonDescriptor editPersonDescriptor;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index                of the person in the filtered person list to edit"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editPersonDescriptor details to edit the person with"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(editPersonDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates and returns a {@code Person} with the details of {@code personToEdit}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * edited with {@code editPersonDescriptor}."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert personToEdit !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof EditCommand)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand e \u003d (EditCommand) other;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Stores the details to edit the person with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * corresponding field value of the person."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EditPersonDescriptor {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        private Phone phone;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        private Email email;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        private Address address;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public EditPersonDescriptor() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        public EditPersonDescriptor(EditPersonDescriptor toCopy) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            setName(toCopy.name);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            setPhone(toCopy.phone);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            setEmail(toCopy.email);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            setAddress(toCopy.address);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            setTags(toCopy.tags);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cPhone\u003e getPhone() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(phone);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setPhone(Phone phone) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.phone \u003d phone;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cEmail\u003e getEmail() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(email);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setEmail(Email email) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.email \u003d email;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cAddress\u003e getAddress() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(address);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setAddress(Address address) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.address \u003d address;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "         * if modification is attempted."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         * Sets {@code tags} to this object\u0027s {@code tags}."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!(other instanceof EditPersonDescriptor)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            return getName().equals(e.getName())"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 getPhone().equals(e.getPhone())"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 getEmail().equals(e.getEmail())"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 getAddress().equals(e.getAddress())"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "wyt-sonia": 34,
      "-": 192
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "-": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Finds and lists all persons in address book whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final NameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public FindCommand(NameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof FindCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "-": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Format full help instructions for every command for display."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "-": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/oldcommands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.commands.oldcommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a ListCommand that can List all persons in the address book to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 3,
      "wyt-sonia": 1,
      "-": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddCommand"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an AddCommand object for execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new Person(name, phone, email, address, tagList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return new AddCommand(person);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 9,
      "-": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddTaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Incrementally parses input arguments and creates a new Task object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class AddTaskParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddCommand"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * and returns an AddCommand object for execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Person person \u003d new Person(name, phone, email, address, tagList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new AddCommand(person);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 1,
      "wyt-sonia": 58
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.ClearTasksCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ExitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.FindCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.HelpCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ListCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case ClearTasksCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new ClearTasksCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case ArchiveTaskCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new ArchiveCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 3,
      "aegis-bot": 8,
      "-": 66,
      "gx-huang": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArchiveCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Parses input arguments and creates a new ArchiveCommand object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveCommandParser implements Parser\u003cArchiveTaskCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the ArchiveCommand"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * and returns a FindCommand object for execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new ArchiveTaskCommand(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 2,
      "gx-huang": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArgumentMultimap.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores mapping of prefixes to their respective arguments."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Each key may be associated with multiple argument values."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Values for a given key are stored in a list, and the insertion ordering is maintained."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * can be inserted multiple times for the same prefix."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentMultimap {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prefixes mapped to their respective arguments"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Associates the specified argument value with {@code prefix} key in this map."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefix   Prefix key with which the specified argument value is to be associated"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argValue Argument value to be associated with the specified prefix key"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void put(Prefix prefix, String argValue) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e argValues \u003d getAllValues(prefix);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        argValues.add(argValue);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        argMultimap.put(prefix, argValues);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the last value of {@code prefix}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cString\u003e getValue(Prefix prefix) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e values \u003d getAllValues(prefix);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns all values of {@code prefix}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * If the prefix does not exist or has no values, this will return an empty list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getAllValues(Prefix prefix) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!argMultimap.containsKey(prefix)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(argMultimap.get(prefix));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPreamble() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return getValue(new Prefix(\"\")).orElse(\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentTokenizer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * respective argument values. Only the given prefixes will be recognized in the arguments string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixes   Prefixes to tokenize the arguments string with"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return extractArguments(argsString, positions);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finds all zero-based prefix positions in the given arguments string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixes   Prefixes to find in the arguments string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return List of zero-based prefix positions in the given arguments string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(prefixes)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@see findAllPrefixPositions}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        while (prefixPosition !\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            positions.add(extendedPrefix);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return positions;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the index of the first occurrence of {@code prefix} in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString} starting from index {@code fromIndex}. An occurrence"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * such occurrence can be found."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * occurrences of \"p/\" with whitespace before it. However, if"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code fromIndex} \u003d 0, this method returns 5."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefixIndex \u003d\u003d -1 ? -1"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            : prefixIndex + 1; // +1 as offset for whitespace"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString}."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        // Sort by start position"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // Insert a PrefixPosition to represent the preamble"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.add(0, preambleMarker);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add a dummy PrefixPosition to represent the end of the string"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.add(endPositionMarker);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        // Map prefixes to their argument values (if any)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            // Extract and store prefixes and their arguments"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            argMultimap.put(argPrefix, argValue);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return argMultimap;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * The end position of the value is determined by {@code nextPrefixPosition}."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String extractArgumentValue(String argsString,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                                               PrefixPosition currentPrefixPosition,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                                               PrefixPosition nextPrefixPosition) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix prefix \u003d currentPrefixPosition.getPrefix();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a prefix\u0027s position in an arguments string."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class PrefixPosition {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Prefix prefix;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        private int startPosition;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition(Prefix prefix, int startPosition) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            this.startPosition \u003d startPosition;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        int getStartPosition() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            return startPosition;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix getPrefix() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            return prefix;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 146
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/DeleteCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the DeleteCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns a DeleteCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public DeleteCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 1,
      "-": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/DeleteTasksParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTasksParser implements Parser\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the DeleteCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * and returns a DeleteCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 29,
      "aegis-bot": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/EditCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParser implements Parser\u003cEditCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the EditCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an EditCommand object for execution."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!editPersonDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return new EditCommand(index, editPersonDescriptor);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * If {@code tags} contain only one element which is an empty string, it will be parsed into a"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code Set\u003cTag\u003e} containing zero tags."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assert tags !\u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.of(ParserUtil.parseTags(tagSet));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 2,
      "wyt-sonia": 1,
      "-": 80
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/FindCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandParser implements Parser\u003cFindCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the FindCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns a FindCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public FindCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 1,
      "-": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Parser\u003cT extends Command\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} into a command and returns it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String name} into a {@code Name}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Name parseName(String name) throws ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Name(trimmedName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String phone} into a {@code Phone}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code phone} is invalid."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Phone parsePhone(String phone) throws ParseException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(phone);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedPhone \u003d phone.trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Phone.isValidPhone(trimmedPhone)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Phone(trimmedPhone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String address} into an {@code Address}."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code address} is invalid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Address parseAddress(String address) throws ParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(address);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedAddress \u003d address.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Address.isValidAddress(trimmedAddress)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Address(trimmedAddress);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String email} into an {@code Email}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code email} is invalid."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Email parseEmail(String email) throws ParseException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(email);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedEmail \u003d email.trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Email.isValidEmail(trimmedEmail)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Email(trimmedEmail);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String tag} into a {@code Tag}."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tag);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedTag \u003d tag.trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Tag.isValidTagName(trimmedTag)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(trimmedTag);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tags);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String tagName : tags) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 124
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Prefix.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * A prefix that marks the beginning of an argument in an arguments string."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Prefix {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String prefix;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public Prefix(String prefix) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPrefix() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefix;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefix \u003d\u003d null ? 0 : prefix.hashCode();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof Prefix)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix otherPrefix \u003d (Prefix) obj;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPrefix.getPrefix().equals(getPrefix());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return getPrefix();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/StudyBuddyParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class StudyBuddyParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Command parseCommand(String option) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/TimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses valid dateTime string to LocalDateTime variable."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDateTime parseDateTime(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime inputTime \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            inputTime \u003d LocalDateTime.parse(userInput.trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new InteractiveCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return inputTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts LocalDateTime variable to a String as HH:mm dd/MM/yyyy format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateTimeString(LocalDateTime dateTime) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String min \u003d dateTime.getMinute() \u003c 10 ? \"0\" + dateTime.getMinute()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getMinute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hour \u003d dateTime.getHour() \u003c 10 ? \"0\" + dateTime.getHour()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getHour();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String day \u003d dateTime.getDayOfMonth() \u003c 10 ? \"0\" + dateTime.getDayOfMonth()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String month \u003d dateTime.getMonthValue() \u003c 10 ? \"0\" + dateTime.getMonthValue()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getMonthValue();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return hour + \":\" + min"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \" \" + day + \"/\" + month + \"/\" + dateTime.getYear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts LocalDateTime variable to a String as dd/MM/yyyy format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateString(LocalDate date) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String day \u003d date.getDayOfMonth() \u003c 10 ? \"0\" + date.getDayOfMonth()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + date.getDayOfMonth();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String month \u003d date.getMonthValue() \u003c 10 ? \"0\" + date.getMonthValue()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + date.getMonthValue();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return day + \"/\" + month + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/AddTaskCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommandParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseName(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d userInput.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseDescription(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDateTime[] parseDateTime(String userInput, TaskType taskType) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] result \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result[0] \u003d TimeParser.parseDateTime(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // filter out the input with correct format but invalid date time"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result[0].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // filter out the invalid input with wrong \"start-end\" format"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tempInputDateTimes \u003d userInput.trim().split(\"-\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result[0] \u003d TimeParser.parseDateTime(tempInputDateTimes[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result[1] \u003d TimeParser.parseDateTime(tempInputDateTimes[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result[0].isBefore(LocalDateTime.now()) || result[1].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result[1].isBefore(result[0])) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"eventEndBeforeStartError\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseModule(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType parseType(String userInput, int size) throws AddTaskCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e size) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddTaskCommandException(\"invalidIndexRange\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseWeight(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseTimeCost(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 129
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/EditTaskCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Parser for the edit command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommandParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String parseName(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result \u003d userInput.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static LocalDateTime[] parseDateTime(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime[] result \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        result \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!userInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // filter out the invalid input with wrong \"start-end\" format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tempInputDateTimes \u003d userInput.trim().split(\"-\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result[0] \u003d TimeParser.parseDateTime(tempInputDateTimes[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result[1] \u003d TimeParser.parseDateTime(tempInputDateTimes[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (result[0].isBefore(LocalDateTime.now()) || result[1].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (result[1].isBefore(result[0])) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"eventEndBeforeStartError\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static TaskType parseType(String userInput, int size) throws AddTaskCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e size) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new AddTaskCommandException(\"invalidIndexRange\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 74
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/AddTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/ArchiveTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/CompleteTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/DeleteDuplicateTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteDuplicateTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/DeleteTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/DueSoonRefreshCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonRefreshCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonRefreshCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/EditTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/ExitTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/InteractiveCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InteractiveCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractiveCommandException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"emptyInputError\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The input is empty, please check again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidIndexRangeError\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidOptionRangeError\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The option index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongIndexFormatError\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongOptionFormatError\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of option index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"dataTimeFormatError\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time format, please follow the format below:\\n  \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"Event: HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"e.g. 12:00 01/01/2020-14:00 01/01/2020\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"Rest : HH:mm dd/MM/yyyy   e.g. 12:00 01/01/2020\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"pastDateTime\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, please enter a time in the future.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"eventEndBeforeStartError\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, the end date you entered is before the start date, please check.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorType() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/interactivecommandparser/exceptions/SortTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommandException that will be throw when there is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * index format and range error."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/model/AddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.ModuleList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.UniquePersonList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Wraps all data at the address-book level"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Duplicates are not allowed (by .isSamePerson comparison)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBook implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UniquePersonList persons;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final UniqueTaskList archivedTasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList dueSoonTasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final UniqueTaskList tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ModuleList moduleList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        persons \u003d new UniquePersonList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public AddressBook() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook(ReadOnlyAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the contents of the person list with {@code persons}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code persons} must not contain duplicate persons."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        this.persons.setPersons(persons);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of the task list with {@code tasks}."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks.setTasks(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the given task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(editedTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.setTask(target, editedTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.sortTasks(keyword);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.sortTasks(\"deadline / task start date\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return tasks.contains(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Removes {@code key} from this {@code AddressBook}."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void removeTask(Task key) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.remove(key);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (this.getDueSoonList().contains(key)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            removeDueSoonTask(key);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        sortDueSoonTasks();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code AddressBook}."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void removeDueSoonTask(Task key) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.remove(key);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setArchivedTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.archivedTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setDueSoonTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.dueSoonTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        setPersons(newData.getPersonList());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        setArchivedTasks(newData.getArchivedList());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setDueSoonTasks(newData.getDueSoonList());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTasks(newData.getTaskList());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setModuleList(newData.getModuleList());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    //// person-level operations"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.contains(person);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a person to the address book."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must not already exist in the address book."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person p) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.add(p);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Adds an archived person to the address book."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param p must not already exist in the address book."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void addArchivedTask(Task p) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(p);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a due soon task to the dueSoonTasks list."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p must not already exist in the address book."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task p) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (p.isDueSoon()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.add(p);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a module to the ModuleList."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            moduleList.add(module);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException ex) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"AddModule Failed, from addressBook.addModule()\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the task list."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (t.isDueSoon()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            addDueSoonTask(t);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.completeTask(target);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskName(target, newTaskName);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskDateTime(target, newDateTimes);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the given person {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the address book."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(editedPerson);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes {@code key} from this {@code AddressBook}."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code key} must exist in the address book."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removePerson(Person key) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.remove(key);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.asUnmodifiableObservableList().size() + \" persons\";"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archivedTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return tasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleList.getInternalList();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.moduleList.setModuleList(modules);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasModule(Module module) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleList.contains(module);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.hashCode();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof AddressBook // instanceof handles nulls"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 persons.equals(((AddressBook) other).persons));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 25,
      "souwmyaa": 45,
      "aegis-bot": 72,
      "wyt-sonia": 7,
      "-": 114,
      "gx-huang": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code Predicate} that always evaluate to true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    void setAddressBookFilePath(Path addressBookFilePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the AddressBook"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces address book data with the data in {@code addressBook}."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    void setAddressBook(ReadOnlyAddressBook addressBook);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean hasPerson(Person person);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    boolean hasTask(Task task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the given person."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must exist in the address book."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    void deletePerson(Person target);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * completes the given task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must exist in the address book."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void completeTask(Task target);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task name"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskName(Task target, String newTaskName);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task type"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskType(Task target, TaskType newTaskType);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task date time"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskDateTime(Task target, LocalDateTime[] newDateTimes);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the given task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void deleteTask(Task task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the given person."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code person} must not already exist in the address book."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    void addPerson(Person person);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Archives the given person."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param task must not already exist in the address book."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    void archiveTask(Task task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the given task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task must not already exist in the address book."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addDueSoonTask(Task task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds the given task."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code task} must not already exist in the task list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void addTask(Task task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void sortDueSoonTasks();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the given person {@code target} with {@code editedPerson}."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the address book."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    void setPerson(Person target, Person editedPerson);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTask(Task target, Task editedTask);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    boolean hasMod(Module mod);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void addMod(Module mod);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered person list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered task list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the filter of the filtered person list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the filter of the filtered task list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void sortTasks(String keyword);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 29,
      "souwmyaa": 20,
      "aegis-bot": 9,
      "wyt-sonia": 46,
      "-": 79,
      "gx-huang": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBook addressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cPerson\u003e filteredPersons;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final FilteredList\u003cModule\u003e filteredModules;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredArchiveTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredDueSoonTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireAllNonNull(addressBook.getTaskList(), userPrefs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBook \u003d new AddressBook(addressBook);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        filteredModules \u003d new FilteredList\u003c\u003e(this.addressBook.getModuleList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        filteredArchiveTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getArchivedList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredDueSoonTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getDueSoonList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new AddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getAddressBookFilePath();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(addressBookFilePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return addressBook;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setAddressBook(ReadOnlyAddressBook addressBook) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.addressBook.resetData(addressBook);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook.hasPerson(person);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return addressBook.hasTask(task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.removePerson(target);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        addressBook.completeTask(target);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String taskName) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addressBook.setTaskName(target, taskName);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addressBook.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newTaskDateTime) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addressBook.setTaskDateTime(target, newTaskDateTime);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        addressBook.removeTask(target);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        addressBook.removeDueSoonTask(target);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        addressBook.sortTasks(keyword);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        addressBook.sortDueSoonTasks();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person person) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(person);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        addressBook.addArchivedTask(task);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        addressBook.addDueSoonTask(task);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        addressBook.addTask(task);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return addressBook.hasModule(mod);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * STILL NEEDS MORE REFINEMENT DUE TO ABSENCE OF UpdateModuleList."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param mod"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addMod(Module mod) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        System.out.println(\"ModelManager add mod\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        addressBook.addModule(mod);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        System.out.println(\"ModelManager add mod success\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addressBook.setTasks(target, editedTask);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        return filteredPersons;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return filteredArchiveTasks;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return filteredDueSoonTasks;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons.setPredicate(predicate);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        filteredTasks.setPredicate(predicate);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook.equals(other.addressBook)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredTasks.equals(other.filteredTasks)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 filteredDueSoonTasks.equals(other.filteredDueSoonTasks)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredArchiveTasks.equals(other.filteredArchiveTasks);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 25,
      "souwmyaa": 29,
      "aegis-bot": 26,
      "wyt-sonia": 43,
      "-": 140,
      "gx-huang": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the persons list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * This list will not contain any duplicate persons."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getPersonList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getArchivedList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getDueSoonList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ObservableList\u003cModule\u003e getModuleList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This list will not contain any duplicate tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "aegis-bot": 2,
      "wyt-sonia": 7,
      "-": 18,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Semester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "enum SemesterNumber {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SEMESTER_ONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SEMESTER_TWO"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Semester {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private SemesterNumber semesterNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Semester(int year, SemesterNumber semesterNumber) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.semesterNumber \u003d semesterNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setYear(int year) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SemesterNumber getSemesterNumber() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return semesterNumber;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setSemesterNumber(SemesterNumber semesterNumber) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.semesterNumber \u003d semesterNumber;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UserPrefs.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path addressBookFilePath \u003d Paths.get(\"data\", \"taskList.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public UserPrefs() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBookFilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBookFilePath \u003d addressBookFilePath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(guiSettings, addressBookFilePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 80
    }
  },
  {
    "path": "src/main/java/seedu/address/model/module/EmptyModule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Placeholder module for task with no modules allocated"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EmptyModule extends Module {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public EmptyModule() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(\"No Module Allocated\", \"O0000O\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/model/module/Module.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * packages task into various modules that the student have. Each module has list of task, taken from the main TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Identified by ModuleCode instead of ModuleName to minimise errors."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalTaskList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String moduleName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleCode moduleCode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Constructs a Module. Will check for any duplicates in the moduleList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module(String moduleName, String fullModuleCode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Same as previous constructor, but a module without a name."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module(String fullModuleCode) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"from Module(string). ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(\"O0000O\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"from Module(). ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * returns whether a Task is inside the internalList of this module."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toCheck"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean contains(Task toCheck) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toAdd"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws DuplicateTaskException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalTaskList.add(toAdd);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes a task from the module list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toRemove"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws TaskNotFoundException"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (contains(toRemove)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalTaskList.remove(toRemove);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getInternalTaskListFromModule() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Compares moduleCode instead of moduleName."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param other object, possibly a module"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other instanceof Module) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ModuleCode otherModuleCode \u003d ((Module) other).moduleCode;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.moduleCode.equals(otherModuleCode) ? true : false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getModuleName() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleName;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleName(String moduleName) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ModuleCode getModuleCode() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(moduleCode);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"From module.setModuleCode. Module code is invalid!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return getModuleCode().toString();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "aegis-bot": 135
    }
  },
  {
    "path": "src/main/java/seedu/address/model/module/ModuleCode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * ModuleCode. Ensures that the module code keyed in matches the proper format. XX0000."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCode {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String postfix;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleCode(String fullModuleCode) throws ModuleCodeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.prefix \u003d parsePrefix(fullModuleCode);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.number \u003d parseNumber(fullModuleCode);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.postfix \u003d parsePostfix(fullModuleCode);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"ModuleCodeParsing failed\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * method to parse prefix from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String parsePrefix(String input) throws ModuleCodeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            char character \u003d input.charAt(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Integer.parseInt(character + \"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                output +\u003d character;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (output.equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Module prefix not found!!!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return output.toUpperCase();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * method to parse number from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int parseNumber(String input) throws ModuleCodeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String outputAsString \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            char character \u003d input.charAt(i);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Integer.parseInt(\"\" + character);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                outputAsString +\u003d character;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                //ignore"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (outputAsString.equals(\"\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Module number not found!!!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int output \u003d Integer.parseInt(outputAsString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * method to parse postfix from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String parsePostfix(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        char character \u003d input.charAt(input.length() - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Integer.parseInt(\"\" + character);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            output +\u003d character;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return output.toUpperCase();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPrefix() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int getNumber() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPostfix() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return postfix;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (object instanceof ModuleCode) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (this.getPrefix().equals(((ModuleCode) object).prefix)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 (this.getNumber() \u003d\u003d ((ModuleCode) object).number)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 this.getPostfix().equals(((ModuleCode) object).postfix)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix + String.format(\"%04d\", number) + postfix;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "aegis-bot": 125
    }
  },
  {
    "path": "src/main/java/seedu/address/model/module/ModuleList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * List of Modules. Checks for duplicates. Will be stored in Json."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * To be executed every time whenever a module is added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return if there is a duplicate"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean contains(Module module) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        final Module moduleForPredicate \u003d module;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FilteredList\u003cModule\u003e filteredList \u003d internalList.filtered((x) -\u003e x.equals(moduleForPredicate));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return filteredList.isEmpty() ? false : true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getInternalList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * checks for duplicate modules first, then add into the moduleList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module to be added to the ModuleList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Module module) throws ModuleCodeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (this.contains(module)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Duplicate modules\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"adding\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.add(module);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes module from the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Module module) throws ModuleCodeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (this.contains(module)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.remove(module);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Module does not exist\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Retrieves a module with the original module name inside the moduleList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleCode"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module get(String moduleCode) throws ModuleCodeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module moduleToFind \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (this.contains(moduleToFind)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d this.internalList.indexOf(moduleToFind);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.internalList.get(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Module Not Found\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e replacement) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "aegis-bot": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/model/module/exceptions/ModuleCodeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.module.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Exception for module code"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCodeException extends ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleCodeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Address.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person\u0027s address in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Address {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs an {@code Address}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param address A valid address."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Address(String address) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(address);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        value \u003d address;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid email."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidAddress(String test) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Address // instanceof handles nulls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 value.equals(((Address) other).value)); // state check"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Email.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person\u0027s email in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Email {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"and adhere to the following constraints:\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"2. This is followed by a \u0027@\u0027 and then a domain name. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"The domain name must:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    - be at least 2 characters long\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    - start and end with alphanumeric characters\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // alphanumeric and special characters"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs an {@code Email}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param email A valid email address."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public Email(String email) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(email);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        value \u003d email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns if a given string is a valid email."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidEmail(String test) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Email // instanceof handles nulls"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 value.equals(((Email) other).value)); // state check"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Name.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person\u0027s name in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String fullName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name A valid name."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Name(String name) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidName(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return fullName.hashCode();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return fullName;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Person.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person in the address book."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Phone phone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Email email;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Address address;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public Phone getPhone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return phone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public Email getEmail() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public Address getAddress() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * if modification is attempted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a weaker notion of equality between two persons."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSamePerson(Person otherPerson) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (otherPerson \u003d\u003d this) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson !\u003d null"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a stronger notion of equality between two persons."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Person)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        Person otherPerson \u003d (Person) other;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 otherPerson.getPhone().equals(getPhone())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 otherPerson.getEmail().equals(getEmail())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 otherPerson.getAddress().equals(getAddress())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 otherPerson.getTags().equals(getTags());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(\" Phone: \")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(getPhone())"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(\" Email: \")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(getEmail())"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(\" Address: \")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(getAddress())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            .append(\" Tags: \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 116
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Phone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person\u0027s phone number in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Phone {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Phone}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param phone A valid phone number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public Phone(String phone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(phone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        value \u003d phone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid phone number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPhone(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Phone // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 value.equals(((Phone) other).value)); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/UniquePersonList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicatePersonException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.PersonNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * A list of persons that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * as to ensure that the person with exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * @see Person#isSamePerson(Person)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class UniquePersonList implements Iterable\u003cPerson\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final ObservableList\u003cPerson\u003e archivedList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UniquePersonList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the list contains an equivalent person as the given argument."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean contains(Person toCheck) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSamePerson);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a person to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must not already exist in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void add(Person toAdd) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the person {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.set(index, editedPerson);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the equivalent person from the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must exist in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void remove(Person toRemove) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(UniquePersonList replacement) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the contents of this list with {@code persons}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code persons} must not contain duplicate persons."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(persons);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!personsAreUnique(persons)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.setAll(persons);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public Iterator\u003cPerson\u003e iterator() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof UniquePersonList // instanceof handles nulls"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code persons} contains only unique persons."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean personsAreUnique(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int j \u003d i + 1; j \u003c persons.size(); j++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                if (persons.get(i).isSamePerson(persons.get(j))) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 134,
      "gx-huang": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals that the operation is unable to find the specified person."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class PersonNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tag/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Tag in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String tagName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Tag}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tagName A valid tag name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tagName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid tag name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidTagName(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return tagName.hashCode();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Tag // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Format state as text for viewing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027[\u0027 + tagName + \u0027]\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The acceptable data and time format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final int DIVISOR \u003d (1000 * 60);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime finishDateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DateFormat df \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Date dateObj \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private boolean duplicate \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task(Module module, TaskType taskType, String taskName, String taskDescription, double weight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus taskStatus, LocalDateTime[] dateTimes, double estimatedTimeCost,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module; //not covered yet"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription; //not covered yet"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight; //not covered yet"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost; //not covered yet"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void updateCurrentTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTask\u003e getCurrentTasks() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return currentTasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module getModule() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModule(Module module) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (status) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"pending\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"finished\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.FINISHED;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the tasks status accordingly."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void freshStatus() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.taskStatus \u003d TaskStatus.DUE_SOON;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon() \u0026\u0026 this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.OVERDUE;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isAfter(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.PENDING)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the status of the task is expired."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if the status of the task is expired."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isStatusExpired() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean result \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isAfter(now) \u0026\u0026 this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon() \u0026\u0026 this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getFinishDateTime() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return finishDateTime;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setFinishDateTime(LocalDateTime finishDateTime) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d finishDateTime;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean isDuplicate() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return duplicate;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setDuplicate(boolean duplicate) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.duplicate \u003d duplicate;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskType(TaskType taskType) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskDescription(String taskDescription) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setWeight(double weight) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskStatus getTaskStatus() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskStatus \u003d\u003d null) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isStatusExpired()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                freshStatus();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskStatus;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskStatus(TaskStatus taskStatus) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (dateTimes.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]) + \"-\" + TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public LocalDateTime[] getDateTimes() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return dateTimes;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //need to add the outOfRangeExceptionHandler"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setDateTimes(LocalDateTime[] dateTimes) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public double getEstimatedTimeCost() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return estimatedTimeCost;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEstimatedTimeCost(double estimatedTimeCost) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getCreationDateTime() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return creationDateTime;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setCreationDateTime(LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Checks if the task is due soon (next 7 days)."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return true if it is due soon, else false"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean isDueSoon() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateObj \u003d new Date();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        long difference \u003d 0;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        float daysBetween \u003d (difference / DIVISOR);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return daysBetween \u003c\u003d 7 * 24 * 60 \u0026\u0026 daysBetween \u003e\u003d 0;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return Objects.hash(module, taskType, taskName, taskDescription, weight, taskStatus, dateTimes);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * pending change"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * This defines a stronger notion of equality between two persons."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof Task)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task otherTask \u003d (Task) other;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription())"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskStatus().equals(getTaskStatus());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Pending change"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both task of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * This defines a weaker notion of equality between two persons."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean isSameTask(Task otherTask) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (otherTask \u003d\u003d this) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask !\u003d null"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription())"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskStatus().equals(getTaskStatus());"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Compare tasks by deadline/ start date."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Comparison by task name is handled in sort command class."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int result \u003d 0;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d -1;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (!this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d 1;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.taskType.equals(t.taskType)) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskName.compareTo(t.taskName);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskType.compareTo(t.taskType);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 29,
      "aegis-bot": 177,
      "wyt-sonia": 121
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/TaskField.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The fields of a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public enum TaskField {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NAME(\"Task name\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_TYPE(\"Task type\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_DATETIME(\"Task due date and time\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final String label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskField(String label) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static TaskField getTaskFieldFromNumber(int number) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (number) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return TASK_NAME;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return TASK_TYPE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return TASK_DATETIME;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getFieldString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"1. Task name\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"2. Task type\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"3. Task due date and time\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getTaskName(), keyword));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/TaskStatus.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public enum TaskStatus {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    FINISHED,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    DUE_SOON,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    OVERDUE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTaskStatus\u003e getTaskStatusList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTaskStatus\u003e taskStatuses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(PENDING);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(FINISHED);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(DUE_SOON);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(OVERDUE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskStatuses;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static TaskStatus getStatus(String status) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        TaskStatus result \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"pending\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            result \u003d PENDING;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"finished\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            result \u003d FINISHED;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"due soon\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d DUE_SOON;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"overdue\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d OVERDUE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Converts a TaskStatus enum back into a string, primarily for printing purposes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return string, either \"pending\" or \"finished\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String convertToString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"pending\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"finished\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"due soon\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"overdue\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 30,
      "wyt-sonia": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Assignment,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Quiz,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Presentation,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Meeting,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Exam,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Others;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static TaskType[] taskTypes \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assignment,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Quiz,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Presentation,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Meeting,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Exam,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Others"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType[] getTaskTypes() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskTypes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void setTaskTypes(TaskType[] taskTypes) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType.taskTypes \u003d taskTypes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getTypeString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"1. Assignment\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"5. Exam\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"6. Others\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType getType(String status) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType result \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"assignment\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Assignment;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Quiz;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"presentation\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Presentation;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"meeting\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Meeting;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"exam\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Exam;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"others\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Others;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/UniqueTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//import seedu.address.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class UniqueTaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if the list contains an equivalent task as the given argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean contains(Task toCheck) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (contains(toAdd)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, editedTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes the equivalent task from the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(UniqueTaskList replacement) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of this list with {@code tasks}."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireAllNonNull(tasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (!tasksAreUnique(tasks)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof UniqueTaskList // instanceof handles nulls"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if {@code tasks} contains only unique tasks."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                if (tasks.get(i).isSameTask(tasks.get(j))) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Completes a task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.contains(target)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            target.setStatus(\"finished\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String finishDateTimeString \u003d TimeParser.getDateTimeString(LocalDateTime.now());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            target.setFinishDateTime(TimeParser.parseDateTime(finishDateTimeString));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(index, target);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task name."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskName(newTaskName);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task type"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskType(newTaskType);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task date time"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newDateTimes);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setDateTimes(newDateTimes);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"deadline / task start date\")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Task::compareTo);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"task name\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getTaskName));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getCreationDateTime));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 39,
      "souwmyaa": 7,
      "aegis-bot": 138,
      "wyt-sonia": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DuplicateTaskException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public DuplicateTaskException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(\"Operation would result in duplicate tasks\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskStatus;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods for populating {@code AddressBook} with sample data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\", \"CS2103T\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2101\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/04/2020\")};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime creationDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Ass 1\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, creationDateTime),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, creationDateTime),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, creationDateTime),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Meeting 1\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, creationDateTime)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ReadOnlyAddressBook getSampleAddressBook() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook sampleAb \u003d new AddressBook();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sampleAb.addTask(sampleTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sampleTasks.add(sampleTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task.updateCurrentTaskList(sampleTasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 32,
      "-": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/AddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a storage for {@link seedu.address.model.AddressBook}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public interface AddressBookStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns AddressBook data as a {@link ReadOnlyAddressBook}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #getAddressBookFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the given {@link ReadOnlyAddressBook} to the storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param addressBook cannot be null."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #saveAddressBook(ReadOnlyAddressBook)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedModule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Only stores ModuleName \u0026 ModuleCode. Omits internalList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * internalList will only extract from taskList when called for search by module."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * when program terminates, internalList in Module will be wiped to minimise confusion."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class JsonAdaptedModule {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(@JsonProperty(\"moduleName\") String moduleName,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                             @JsonProperty(\"moduleCode\") String moduleCode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(Module module) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d module.getModuleName();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module.getModuleCode().toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module toModelType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new Module(moduleName, moduleCode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Jackson-friendly version of {@link Task}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "class JsonAdaptedTask {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskFinishDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double weight;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double estimatedTimeCost;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskCreationDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Constructs a {@code JsonAdaptedTask} with the given task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"taskType\") String taskType,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDateTime\") String taskDateTime,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"finishDateTime\") String taskFinishDateTime,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDescription\") String taskDescription,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"module\") String module, @JsonProperty(\"weight\") Double weight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"estimatedTimeCost\") Double estimatedTimeCost,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"status\") String status,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskCreationDateTime\") String taskCreationDateTime) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskFinishDateTime \u003d taskFinishDateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskCreationDateTime \u003d taskCreationDateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts a given {@code Task} into this class for Jackson use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(Task source) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String descString \u003d source.getTaskDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDescription \u003d descString.isBlank() ? \"\" : descString;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskName \u003d source.getTaskName();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDateTime \u003d source.getTimeString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskFinishDateTime \u003d source.getFinishDateTime() !\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ? TimeParser.getDateTimeString(source.getFinishDateTime())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        estimatedTimeCost \u003d source.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        status \u003d source.getTaskStatus().toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskType \u003d source.getTaskType().toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        weight \u003d source.getWeight();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode \u003d source.getModule().toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskCreationDateTime \u003d TimeParser.getDateTimeString(source.getCreationDateTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // for datetime"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] timeTerms \u003d taskDateTime.split(\"-\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int count \u003d timeTerms.length;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (timeTerms.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[1] \u003d TimeParser.parseDateTime(timeTerms[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime creationDateTime \u003d TimeParser.parseDateTime(taskCreationDateTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task data \u003d new Task(new Module(moduleCode), TaskType.getType(taskType),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskName, taskDescription, weight,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskStatus.getStatus(status), dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskFinishDateTime.isBlank()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime finishDateTime \u003d TimeParser.parseDateTime(taskFinishDateTime);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.setFinishDateTime(finishDateTime);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 5,
      "wyt-sonia": 106
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonSerializableAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * An Immutable AddressBook that is serializable to JSON format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "@JsonRootName(value \u003d \"addressBook\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonSerializableAddressBook {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_ARCHIVED_TASK \u003d \"Archived contains duplicate task(s).\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MESSAGE_DUPLICATE_MODULES \u003d \"Module List contains duplicate module(s).\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_DUE_SOON_TASK \u003d \"Due soon list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e dueSoonTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code JsonSerializableAddressBook} with the given persons."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.persons.addAll(persons);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.addAll(source.getArchivedList().stream()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.addAll(source.getTaskList().stream()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this address book into the model\u0027s {@code AddressBook} object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (task.isStatusExpired()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.freshStatus();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            addressBook.addTask(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : archivedTasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            addressBook.addArchivedTask(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (JsonAdaptedModule jsonAdaptedModule : modules) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Module module \u003d jsonAdaptedModule.toModelType();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (addressBook.hasModule(module)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULES);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            addressBook.addModule(module);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task.updateCurrentTaskList(new ArrayList\u003c\u003e(addressBook.getTaskList()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 6,
      "aegis-bot": 14,
      "wyt-sonia": 4,
      "-": 52,
      "gx-huang": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonUserPrefsStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 5,
      "-": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/UserPrefsStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a storage for {@link seedu.address.model.UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CalendarBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Calendar. Still under construction."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Will cleanup code."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String FXML \u003d \"Calendar.fxml\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label month;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label year;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private GridPane monthBox;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button prev;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button next;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarBox(Logic logic) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        month.setText(localDate.getMonth().toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        year.setText(String.valueOf(localDate.getYear()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Label label;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //day of week of first day"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        int dayOfWeek \u003d localDate.withDayOfMonth(1).getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (int i \u003d 1, j \u003d 0; i \u003c\u003d localDate.lengthOfMonth(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (dayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            VBox temp \u003d new VBox();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Pane p \u003d new Pane();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            p.setBackground(new Background(new BackgroundFill(Color.WHEAT, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(p, dayOfWeek, j);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            label \u003d new Label(\" \" + i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            temp.getChildren().add(label);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate tempDate \u003d LocalDate.of(localDate.getYear(), localDate.getMonth(), i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            for (Task task : logic.getFilteredTaskList()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (taskDueDate.equals(tempDate)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    temp.getChildren().add(new Label(task.getTaskName()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(temp, dayOfWeek, j);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dayOfWeek++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.ClearTasksInteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.ExitTaskInteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.ui.interactiveprompt.FindTaskInteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.ui.interactiveprompt.HelpInteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.ui.interactiveprompt.InvalidInputInteractivePrompt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.ui.interactiveprompt.ListTaskInteractivePrompt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.ui.interactiveprompt.RefreshTaskInteractivePrompt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.ui.interactiveprompt.SortTaskInteractivePrompt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.add.AddTaskInteractivePrompt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.add.CreateModuleInteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.delete.DeleteDuplicateTaskInteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.delete.DeleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.edit.ArchiveTaskInteractivePrompt;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.ui.interactiveprompt.edit.CompleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.ui.interactiveprompt.edit.EditTaskInteractivePrompt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String[] interactiveCommandTypes \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        {\"add\", \"edit\", \"delete\", \"archive\", \"done\", \"delete duplicates\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \"clear\", \"bye\", \"sort\", \"refresh\", \"help\", \"create mods\", \"find\", \"list\"};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePrompt currentInteractivePrompt;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // allow InteractivePrompt type with different case and space in front or behind"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String userInput \u003d commandTextField.getText().toLowerCase().trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (currentInteractivePrompt \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (userInput) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"add\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"edit\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"archive\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"delete duplicates\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"sort\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new SortTaskInteractivePrompt();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"create mods\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ExitTaskInteractivePrompt();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"refresh\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new ListTaskInteractivePrompt();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"clear\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new InvalidInputInteractivePrompt();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //currentInteractivePrompt could be null. Might need to create an ErrorInteractivePrompt to handle this."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //inserted NullPointerException e at the catch section"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            CommandResult commandResult \u003d currentInteractivePrompt !\u003d null"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                ? commandExecutor.execute(currentInteractivePrompt, commandTextField.getText()) : null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (commandResult !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException | ParseException | NullPointerException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "         * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult execute(InteractivePrompt currentInteractivePrompt, String commandText)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throws CommandException, ParseException;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 16,
      "souwmyaa": 24,
      "aegis-bot": 9,
      "wyt-sonia": 32,
      "-": 71,
      "gx-huang": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/DueSoonDisplay.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A ui for the due soon bar that is displayed in the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonDisplay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonDisplay.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TextArea dueSoonDisplay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonDisplay() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setFeedbackToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/DueSoonListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Panel containing the list of tasks due soon."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonListPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(DueSoonListPanel.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ListView\u003cTask\u003e dueSoonListView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setItems(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code TaskCard}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        protected void updateItem(Task task, boolean empty) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            super.updateItem(task, empty);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (empty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 44,
      "wyt-sonia": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalStateException \u003cul\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                               if this method is called on a thread other than the JavaFX Application"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                               Thread."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if this method is called on the primary stage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/ul\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 99
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskListPanel taskListPanel;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskSummaryPanel taskSummaryPanel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DueSoonListPanel dueSoonListPanel;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox taskListHolder;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskListPanelPlaceholder;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskSummaryHolder;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPanel \u003d new TaskSummaryPanel(logic.getFilteredTaskList(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logic.getFilteredArchivedTaskList());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.getChildren().add(taskSummaryPanel.getRoot());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(false);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(false);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows the task summaries."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void handleShowTaskSummary() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryHolder.isManaged()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            toggleTaskSummaryHolder();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            toggleTaskListHolder();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowAllTasks() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleHolder();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void handleDueSoonTasks() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowArchivedTasks() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleHolder();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskListPanel archiveListPanel \u003d new TaskListPanel(logic.getFilteredArchivedTaskList());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(archiveListPanel.getRoot());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowCalendar() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        toggleHolder();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarBox calendar \u003d new CalendarBox(logic);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(calendar.getRoot());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskListPanel getPersonListPanel() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskListPanel;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel getDueSoonListPanel() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonListPanel;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private CommandResult executeCommand(InteractivePrompt currentInteractivePrompt, String commandText)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws CommandException, ParseException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt.setLogic(logic);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String reply \u003d currentInteractivePrompt.interact(commandText);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        resultDisplay.setFeedbackToUser(reply);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isQuit()) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            handleExit();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isEndOfCommand()) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new CommandResult(\"Set current interactive to null\", false, false);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggle function wrapper."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void toggleHolder() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskSummaryHolder.isManaged()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            toggleTaskSummaryHolder();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            toggleTaskListHolder();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggles the taskSummaryHolder\u0027s visibility."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void toggleTaskSummaryHolder() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskSummaryHolder.isManaged()) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryHolder.setVisible(false);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryHolder.setManaged(false);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryHolder.setManaged(true);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryHolder.setVisible(true);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggles the taskListHolder\u0027s visibility."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void toggleTaskListHolder() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskListHolder.isManaged()) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setVisible(false);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setManaged(false);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setManaged(true);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setVisible(true);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 17,
      "wyt-sonia": 78,
      "-": 177,
      "gx-huang": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/TaskCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskListCard.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //@FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //private Label Module;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label status;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //Module.setText(task.getModule().toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        status.setText(task.getTaskStatus().convertToString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dateTime.setText(\"\\tDeadline/Task Duration: \" + task.getTimeString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime.setText(\"\\tCreation Date \u0026 Time: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Applies different css calss to different task type and status."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTask(Task task) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (task.getTaskStatus()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"pending_status\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"done_status\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"due_soon_status\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"overdue_status\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (task.getTaskType()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!(other instanceof TaskCard)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskCard card \u003d (TaskCard) other;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 task.equals(card.task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 65,
      "wyt-sonia": 58
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/TaskListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskListPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ListView\u003cTask\u003e taskListView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListView.setItems(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code TaskCard}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        protected void updateItem(Task task, boolean empty) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            super.updateItem(task, empty);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (empty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 14,
      "-": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/TaskSummaryPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.LineChart;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.PieChart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskStatus;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Panel containing the summary charts of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskSummaryPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskSummaryPanel.fxml\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e tempTasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e archivedTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e aliveTasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private PieChart taskSummaryPieChart;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private AreaChart taskSummaryAreaChart;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private BarChart taskSummaryBarChart;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LineChart taskSummaryLineChart;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskSummaryPanel(ObservableList\u003cTask\u003e currentTaskList,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            ObservableList\u003cTask\u003e archivedTaskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        archivedTasks \u003d archivedTaskList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        aliveTasks \u003d currentTaskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempTasks.addAll(currentTaskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempTasks.addAll(archivedTaskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpAreaChart();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpPieChart();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpBarChart();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpLineChart();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTaskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempTasks.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempTasks.addAll(currentTaskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempTasks.addAll(archivedTaskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpAreaChart();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpPieChart();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpBarChart();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpLineChart();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aim to visualize the portion of different type, status etc."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpPieChart() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryPieChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryPieChart.getData().clear();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (TaskStatus ts : TaskStatus.getTaskStatusList()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            long count \u003d tempTasks.stream().filter(t -\u003e t.getTaskStatus().equals(ts)).count();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryPieChart.getData().add(new PieChart.Data(ts.convertToString(), count));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPieChart.setTitle(\"Summary of Tasks\u0027 Status\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPieChart.getData().forEach(data -\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.nameProperty().bind("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Bindings.concat("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    data.getName(), \" : \", data.pieValueProperty().longValue()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                )"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            )"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        );"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aim to compare time estimated and actual time used."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpAreaChart() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryAreaChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryAreaChart.getData().clear();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series taskTypeDataSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series taskStatusDataSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskTypeDataSeries.setName(\"Task Type\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatusDataSeries.setName(\"Task Status\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cTaskType, Long\u003e taskTypeAndCounts \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(Task::getTaskType, Collectors.counting()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cTaskStatus, Long\u003e taskStatusAndCounts \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(Task::getTaskStatus, Collectors.counting()));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskTypeAndCounts.forEach((type, count) -\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskTypeDataSeries.getData().add(new XYChart.Data(type.name(), count));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatusAndCounts.forEach((status, count) -\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskStatusDataSeries.getData().add(new XYChart.Data(status.convertToString(), count));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryAreaChart.getData().addAll(taskStatusDataSeries, taskTypeDataSeries);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aim to compare different module."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Pending update to make it show different modules/semesters."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpBarChart() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryBarChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryBarChart.getData().clear();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        HashMap\u003cString, XYChart.Series\u003e moduleDataSeries \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cString, Map\u003cTaskType, Long\u003e\u003e currentTaskTypeAndCountUnderModules \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getModule().getModuleCode().toString(),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Collectors.groupingBy(Task::getTaskType, Collectors.counting())"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTaskTypeAndCountUnderModules.forEach((moduleCode, typeAndCount) -\u003e {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            XYChart.Series series;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!moduleDataSeries.containsKey(moduleCode)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                moduleDataSeries.put(moduleCode, series);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series.setName(moduleCode);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series \u003d moduleDataSeries.get(moduleCode);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            typeAndCount.forEach((type, count) -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series.getData().add(new XYChart.Data(type.name(), count));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cModule, Map\u003cTaskStatus, Long\u003e\u003e taskStatusAndCountUnderModules \u003d taskList.stream()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(Task::getModule,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Collectors.groupingBy(Task::getTaskStatus, Collectors.counting())));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatusAndCountUnderModules.forEach((module, statusAndCount)-\u003e{"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            XYChart.Series series \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            series.setName(module.getModuleName());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            moduleDataSeries.add(series);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            statusAndCount.forEach((status, count) -\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series.getData().add(new XYChart.Data(status.convertToString(), count));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryBarChart.getData().addAll(moduleDataSeries.values());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aims to show the changing of number of creation/ finishing/ due task of each day."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpLineChart() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryLineChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryLineChart.getData().clear();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryLineChart.getYAxis().setLabel(\"No of Tasks\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryLineChart.getXAxis().setLabel(\"Date \u0026 Time\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series creationInfoSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationInfoSeries.setName(\"Task creation count\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cLocalDate, Long\u003e creationInfoList \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getCreationDateTime().toLocalDate(), Collectors.counting()));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationInfoList.forEach((date, count) -\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            creationInfoSeries.getData().add(new XYChart.Data(TimeParser.getDateString(date), count));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series dueInfoSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueInfoSeries.setName(\"Task deadline/start date count\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cLocalDate, Long\u003e dueInfoList \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getDateTimes()[0].toLocalDate(), Collectors.counting()));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueInfoList.forEach((date, count) -\u003e {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dueInfoSeries.getData().add(new XYChart.Data(TimeParser.getDateString(date), count));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series finishInfoSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        finishInfoSeries.setName(\"Task completed count\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cLocalDate, Long\u003e finishInfoList \u003d archivedTasks.stream()"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getCreationDateTime().toLocalDate(), Collectors.counting()));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        finishInfoList.forEach((date, count) -\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            finishInfoSeries.getData().add(new XYChart.Data(TimeParser.getDateString(date), count));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryLineChart.getData().addAll(creationInfoSeries, dueInfoSeries, finishInfoSeries);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 218
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * API of UI component"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Starts the UI (and the App)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    void start(Stage primaryStage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/study_buddy.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/StudyBuddyTheme.css\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "wyt-sonia": 21,
      "-": 65
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiPart.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Resource folder where FXML files are stored."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #UiPart(URL)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL and root object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #UiPart(URL, Object)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the root object of the scene graph of this UiPart."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public T getRoot() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads the object hierarchy from a FXML document."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param location Location of the FXML document."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root     Specifies the root of the object hierarchy."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadFxmlFile(URL location, T root) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(location);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 17,
      "-": 76
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/ClearTasksInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.CLEAR_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.ClearTasksCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Tasks cleared successfully!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully cleared all tasks.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ClearTasksInteractivePrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d CLEAR_TASK;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d \"Please press enter to clear all your tasks.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Else enter quit to go back.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                ClearTasksCommand clearTaskCommand \u003d new ClearTasksCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(clearTaskCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 111
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/ExitTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.EXIT_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.ExitTaskCommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_NO_EXIT_MSG \u003d \"Thank you for staying!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Exit successfully!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms lastTerm;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ArrayList\u003cInteractivePromptTerms\u003e terms;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d EXIT_TASK;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"Are you sure you want to quit?\\n \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Please press enter yes if you would like to close the application.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ExitTaskCommandException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setQuit(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_NO_EXIT_MSG);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 114
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/FindTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.FIND_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.FindTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * A interactive prompt for finding tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here are the list of tasks matching the keyword:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from find task command.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String KEYWORD_PROMPT \u003d \"Please type in a keyword that you want to search for.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String userKeyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d FIND_TASK;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (userInput.equals(\"quit\") || userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleQuitAndBack(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleFind(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Handles the sequence of interactive find commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the input entered by the user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the reply to the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleFind(String userInput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.FIND_KEYWORD;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case FIND_KEYWORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            userKeyword \u003d userInput;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d getConfirmationPrompt(userKeyword);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.FIND_KEYWORD;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String trimmedArgs \u003d userKeyword.trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new ParseException(\"Keyword cannot be empty string\", 0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] userKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                TaskNameContainsKeywordsPredicate pred \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    new TaskNameContainsKeywordsPredicate(Arrays.asList(userKeywords));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                FindTaskCommand findTaskCommand \u003d new FindTaskCommand(pred);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                logic.executeCommand(findTaskCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getConfirmationPrompt(String userKeyword) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"You are searching for the tasks containing \" + userKeyword + \". \\n \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"Please click enter again to view the searched list.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getKeywordPrompt() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getQuitMessage() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return QUIT_COMMAND_MSG;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 93
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/HelpInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.HELP;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The interactive prompt for the help command. Returns the help message immediately"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class HelpInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        \"Here are the list of available commands:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"1. add  2. delete  3. edit  4. bye  5. sort  6. find  7. done  8. delete duplicates  \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"9. sort  10. archive  11. help  12. list\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + System.lineSeparator() + System.lineSeparator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"User Guide: https://ay1920s2-cs2103t-w16-3.github.io/main/UserGuide.html\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public HelpInteractivePrompt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d HELP;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getHelpMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns the help message to the user immediately"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the help keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the help message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/InteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public abstract class InteractivePrompt {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isQuit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isEndOfCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected InteractivePromptType interactivePromptType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected String reply;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected InteractivePromptTerms lastTerm;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected ArrayList\u003cInteractivePromptTerms\u003e terms;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractivePrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isQuit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isEndOfCommand \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public abstract String interact(String userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * ends the interaction"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param reply message to be displayed to the user upon end of interaction"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setEndOfCommand(true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // empty"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // empty"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    };"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isQuit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isQuit;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setQuit(boolean quit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isQuit \u003d quit;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setLogic(Logic logic) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEndOfCommand() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEndOfCommand;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEndOfCommand(boolean endOfCommand) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isEndOfCommand \u003d endOfCommand;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractivePromptType getInteractivePromptType() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return interactivePromptType;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Handles the quit and back commands"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput   the input given by the user. This should be checked to be either quit or back."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param quitMessage the message that is displayed upon quitting"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the reply to user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleQuitAndBack(String userInput, String quitMessage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            endInteract(quitMessage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * checks if the userInput is quit or back"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if the userInput is quit or back, false otherwise"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean isQuitOrBack(String userInput) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return userInput.equals(\"quit\") || userInput.equals(\"back\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 59,
      "aegis-bot": 9,
      "wyt-sonia": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/InteractivePromptTerms.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Terms used in Interactive Prompt to indicate the stage in the sequence of interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public enum InteractivePromptTerms {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    INIT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_NAME,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TASK_INDEX,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_TYPE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DATETIME,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DESCRIPTION,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_MODULE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_WEIGHT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_ESTIMATED_TIME_COST,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_NAME,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_CODE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SORT_KEYWORD,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    READY_TO_EXECUTE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ADD_DUPLICATE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for find"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    FIND_KEYWORD,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for edit"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NUMBER,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_FIELD,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    NEW_VALUE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 2,
      "aegis-bot": 3,
      "wyt-sonia": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/InteractivePromptType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum InteractivePromptType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ADD_TASK,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    EDIT_TASK,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    EXIT_TASK,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    DELETE_TASK,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ARCHIVE_TASK,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DELETE_DUPLICATE_TASK,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    COMPLETE_TASK,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DUE_SOON_TASK,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CREATE_MODULE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    SORT_TASK,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    INVALID_MSG,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    FIND_TASK,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    LIST_TASK,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    CLEAR_TASK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 5,
      "aegis-bot": 2,
      "wyt-sonia": 11,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/InvalidInputInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.INVALID_MSG;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a InvalidInputInteractivePrompt which is designed to handle invalid input from user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Help message will be provided when invalid message caught."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InvalidInputInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String HELP_MSG \u003d \"Please enter valid command option.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Current functions provided: \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"add, edit, delete, archive, done, delete duplicates, sort, create mods,  bye\\n\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Please press enter to reenter a valid command.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InvalidInputInteractivePrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d INVALID_MSG;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d HELP_MSG;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 62
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/ListTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.ListTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * InteractivePrompt to list the tasks. This is useful after a Find command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here is the complete list of tasks:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ListTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.LIST_TASK;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        displayList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * displays the complete list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ListTaskCommand listTaskCommand \u003d new ListTaskCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            logic.executeCommand(listTaskCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // do nothing, this block should not be reached"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/RefreshTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.DUE_SOON_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.RefreshCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.DueSoonRefreshCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class RefreshTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Refreshed tasks\u0027 status and tasks due soon list is updated!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from refresh command.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms lastTerm;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ArrayList\u003cInteractivePromptTerms\u003e terms;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public RefreshTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DUE_SOON_TASK;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The tasks list will be refreshed.\\n \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DueSoonRefreshCommandException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                RefreshCommand dueSoonRefreshCommand \u003d new RefreshCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(dueSoonRefreshCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 100,
      "wyt-sonia": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/SortTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.SORT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.SortTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.SortTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A interactive prompt for sorting task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task sorted successfully!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from sort task command.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String[] sort_option \u003d {\"Deadline / Task Start Date\", \"Task Name\", \"Creation DateTime\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int option;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d SORT_TASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"Please choose the sort keyword: \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"1. Deadline / Task Start Date\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"2. Task Name\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"3. Creation Date \u0026 Time\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.SORT_KEYWORD;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case SORT_KEYWORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                option \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (option \u003e 3 || option \u003c\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new SortTaskCommandException(\"invalidOptionRangeError\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task  will be sorted by \" + sort_option[option - 1] + \". \\n \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \" Please click enter again to check the sorted list.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new DeleteTaskCommandException(\"wrongOptionFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (SortTaskCommandException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                SortTaskCommand sortTaskCommand \u003d new SortTaskCommand(sort_option[option - 1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(sortTaskCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "wyt-sonia": 108
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/add/AddTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.ADD_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.add.AddTaskCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.AddTaskCommandParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.EmptyModule;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A interactive prompt for adding new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task added successfully!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_DUPLICATE_MSG \u003d \"Task will not be added! Key in your next command :)\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from add task command.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d ADD_TASK;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.task \u003d new Task();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (lastTerm !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"Please enter the task name.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_NAME;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             * TEMPORARY PLACEHOLDER TO ENABLE FILE SAVE."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             * REMOVE task.setAttribute once you\u0027ve create methods to handle these...."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             * By default, Task will go to Module code AA0000. To add to a specific module, use other commands."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            task.setModule(new EmptyModule());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            task.setStatus(\"pending\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            task.setTaskDescription(\"No Description Available\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            task.setWeight(0.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setEstimatedTimeCost(0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                userInput \u003d AddTaskCommandParser.parseName(userInput);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The name of task is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"Please choose the task type:\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + TaskType.getTypeString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setTaskName(userInput);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.TASK_TYPE;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.TASK_NAME;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskType taskType \u003d AddTaskCommandParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setTaskType(taskType);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                userInput \u003d taskType.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The type of task is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"Please enter the deadline with format: \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (taskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.reply +\u003d \"HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.reply +\u003d \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.TASK_TYPE;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new AddTaskCommandException(\"wrongIndexFormat\")).getErrorMessage();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LocalDateTime[] dateTimes \u003d AddTaskCommandParser.parseDateTime(userInput, task.getTaskType());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setDateTimes(dateTimes);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    userInput \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    userInput \u003d TimeParser.getDateTimeString(dateTimes[0])"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The date and time is set to: \" + userInput + \"\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"Press enter again to add the task:\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + task.getTaskName() + \" \" + task.getTaskType().toString() + \" \" + task.getTimeString();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setCreationDateTime(LocalDateTime.now());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                AddTaskCommand addTaskCommand \u003d new AddTaskCommand(task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(addTaskCommand);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (task.isDuplicate()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    reply \u003d \"This is a duplicate task. Are you sure you would like to proceed?\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            + \"Please enter yes or no.\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.ADD_DUPLICATE;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case ADD_DUPLICATE:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                AddTaskCommand addDuplicateTaskCommand \u003d new AddTaskCommand(task);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    logic.executeCommand(addDuplicateTaskCommand);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } catch (CommandException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else if (userInput.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_DUPLICATE_MSG);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d (new AddTaskCommandException(\"wrongDuplicateFormat\")).getErrorMessage();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_MODULE under construction"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_WEIGHT under construction"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_DESCRIPTION under construction"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_ESTIMATED_TIME_COST under construction"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 29,
      "aegis-bot": 19,
      "wyt-sonia": 187,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/add/CreateModuleInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.add.CreateModCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.AddTaskCommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * An interactive prompt for creating modules."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModuleInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModuleInteractivePrompt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CREATE_MODULE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d new Module();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            // exit the command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            super.setQuit(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (lastTerm !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d \"Please key in the name of the module that you want to create\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.MODULE_NAME;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_NAME:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            userInput \u003d AddTaskCommandParser.parseName(userInput);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d \"The name of module is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                + \"Now key in your module code\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            module.setModuleName(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.MODULE_CODE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.MODULE_NAME;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_CODE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            module.setModuleCode(userInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d \"Module Code: \" + module.toString() + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                + \"Click \u0027Enter\u0027 again to confirm your changes\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.MODULE_CODE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CreateModCommand createModCommand \u003d new CreateModCommand(module);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(createModCommand);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d \"Module created! Key in your next command :)\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                endInteract(reply);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 2,
      "aegis-bot": 110
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/delete/DeleteDuplicateTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.DELETE_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.delete.DeleteDuplicateTaskCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.DeleteDuplicateTaskCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Duplicated task deleted successfully!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from delete duplication command.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteDuplicateTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DELETE_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The duplicate tasks will be deleted\\n \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DeleteDuplicateTaskCommandException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DeleteDuplicateTaskCommand deleteDuplicateTaskCommand \u003d new DeleteDuplicateTaskCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(deleteDuplicateTaskCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 107,
      "aegis-bot": 4,
      "wyt-sonia": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/delete/DeleteTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.DELETE_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.delete.DeleteTaskCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task deleted successfully!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from delete task command.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DELETE_TASK;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d \"Please enter the index number of task you wish to delete.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new DeleteTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName() + \" will be deleted. \\n \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new DeleteTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DeleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(deleteTaskCommand);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 113,
      "aegis-bot": 4,
      "wyt-sonia": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/edit/ArchiveTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.ARCHIVE_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.ArchiveTaskCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task archived successfully!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from archive command.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d ARCHIVE_TASK;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.reply \u003d \"Please enter the index number of task you wish to archive.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d \"The task at index \" + userInput + \" will be archived. \\n \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (ArchiveTaskCommandException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                ArchiveTaskCommand archiveTaskCommand \u003d new ArchiveTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(archiveTaskCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "aegis-bot": 4,
      "wyt-sonia": 8,
      "gx-huang": 115
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/edit/CompleteTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package seedu.address.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.COMPLETE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.edit.CompleteTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A interactive prompt for completing task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task marked as completed successfully!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from complete task command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private InteractivePromptTerms lastTerm;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ArrayList\u003cInteractivePromptTerms\u003e terms;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d COMPLETE_TASK;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.userInput \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.lastTerm \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.terms \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (lastTerm !\u003d null) { //in the beginning it is null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                terms.remove(terms.size() - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d lastTerm;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                if (lastTerm.equals(InteractivePromptTerms.INIT)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    lastTerm \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    lastTerm \u003d terms.get(terms.size() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                userInput \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                this.reply \u003d \"Please type quit to exit from this command.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d \"Please enter the index number of task you wish to mark as done.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            lastTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            terms.add(lastTerm);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d \"The task at index \" + userInput + \" will be mark as Done. \\n \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                lastTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                terms.add(lastTerm);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (DeleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(completeTaskCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 2,
      "aegis-bot": 106,
      "wyt-sonia": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/interactiveprompt/edit/EditTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static seedu.address.ui.interactiveprompt.InteractivePromptType.EDIT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.EditTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.EditTaskCommandParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.EditTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Interactive prompt for editing tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task edited successfully\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from the edit task command\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TaskField taskField;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d EDIT_TASK;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isQuitOrBack(userInput)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleQuitAndBack(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleEdit(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles the sequence of commands for edit"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleEdit(String userInput) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please enter the index of the task that you wish to edit.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_NUMBER;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NUMBER:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.taskNumber \u003d parseTaskNumber(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_FIELD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.taskField \u003d parseTaskFieldNumber(userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case NEW_VALUE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleNewValue(userInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Creates and executes an edit command, with the new values provided by the user"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleNewValue(String userInput) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Index taskIndex \u003d Index.fromZeroBased(taskNumber - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(taskIndex, taskField);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean parseSuccess \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            switch (taskField) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TASK_NAME:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String newName \u003d EditTaskCommandParser.parseName(userInput);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                editTaskCommand.provideNewTaskName(newName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TASK_TYPE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                TaskType newTaskType \u003d EditTaskCommandParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                editTaskCommand.provideNewTaskType(newTaskType);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                this.reply \u003d \"The type of task is set to: \" + newTaskType + \".\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TASK_DATETIME:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                LocalDateTime[] newDateTimes \u003d EditTaskCommandParser.parseDateTime(userInput);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                editTaskCommand.provideNewDateTime(newDateTimes);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (EditTaskCommandException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            parseSuccess \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (parseSuccess) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                logic.executeCommand(editTaskCommand);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } catch (java.text.ParseException | CommandException ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * parses task number"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user input for task number"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return an int of task number"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int parseTaskNumber(String userInput) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean isParseSuccessful \u003d true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskNum \u003d -1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskNum \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (taskNum \u003e Task.getCurrentTasks().size() || taskNum \u003c 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new ParseException(\"task number not in range\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (NumberFormatException | ParseException ex) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isParseSuccessful \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isParseSuccessful) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please choose the field that you wish to edit in task number \" + taskNum + \".\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        + TaskField.getFieldString();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_FIELD;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // prompt for a new value"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please choose a valid task number.\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_NUMBER;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * parses the task field"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput userInput for task number"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a TaskField"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskField parseTaskFieldNumber(String userInput) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean isParseSuccessful \u003d true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        TaskField taskField \u003d null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            int taskFieldNumber \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (taskFieldNumber \u003e 3 || taskFieldNumber \u003c 1) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new ParseException(\"task field number not in range\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskField \u003d TaskField.getTaskFieldFromNumber(taskFieldNumber);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (NumberFormatException | ParseException ex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isParseSuccessful \u003d false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isParseSuccessful) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            assert(taskField !\u003d null);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d getTaskFieldMessage(taskField);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.NEW_VALUE;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // prompt for a new value"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please choose a valid task field index\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_FIELD;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskField;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String getTaskFieldMessage(TaskField taskField) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"You are now editing the \" + taskField.getLabel() + \"field\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"Please enter the new task name.\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"Please choose the task type:\\n\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"Please enter the deadline with format: \""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\";;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 196
    }
  },
  {
    "path": "src/main/resources/view/Calendar.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cBorderPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: white;\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003ctop\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cLabel fx:id\u003d\"month\" prefHeight\u003d\"42.0\" prefWidth\u003d\"216.0\" text\u003d\"Month\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cFont name\u003d\"Calibri Bold\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cgraphic\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cLabel fx:id\u003d\"year\" prefHeight\u003d\"41.0\" prefWidth\u003d\"88.0\" text\u003d\"Year\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        \u003cFont name\u003d\"Calibri Bold\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/graphic\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/top\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003cleft\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton fx:id\u003d\"prev\" mnemonicParsing\u003d\"false\" stylesheets\u003d\"@Button.css\" text\u003d\"Previous\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cInsets left\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/left\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003cright\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton fx:id\u003d\"next\" mnemonicParsing\u003d\"false\" stylesheets\u003d\"@Button.css\" text\u003d\"Next\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cInsets right\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/right\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003cbottom\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cGridPane fx:id\u003d\"monthBox\" hgap\u003d\"5.0\" prefHeight\u003d\"324.0\" prefWidth\u003d\"790.0\" vgap\u003d\"5.0\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Sunday\" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                       GridPane.halignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Monday\" GridPane.columnIndex\u003d\"1\"/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Tuesday\" GridPane.columnIndex\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Wednesday\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                       GridPane.columnIndex\u003d\"3\"/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Thursday\" GridPane.columnIndex\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Friday\" GridPane.columnIndex\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" text\u003d\"Saturday\" GridPane.columnIndex\u003d\"6\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cURL value\u003d\"@CalendarMonthBox.css\"/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/bottom\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 16,
      "gx-huang": 64
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"40.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "               promptText\u003d\"Enter command here...\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TextField\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/DueSoonListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"dueSoonListView\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/resources/view/HelpWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 36
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"600\" minWidth\u003d\"550\" onCloseRequest\u003d\"#handleExit\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         title\u003d\"Study Buddy\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cImage url\u003d\"@/images/study_buddy.png\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cURL value\u003d\"@StudyBuddyTheme.css\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cVBox id\u003d\"mainContainer\" maxWidth\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Study Buddy\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Dashboard\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"Exit Study Buddy\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"My Tasks\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowAllTasks\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"All Tasks\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowArchivedTasks\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                  style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Archived Tasks\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Modules\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                  style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Help\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Statistics\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"taskSummaryEntry\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowTaskSummary\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Task Summary\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"usageSummaryEntry\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Usage Summary\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Calendar\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowCalendar\" text\u003d\"Show calendar\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cPane maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"530.0\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      style\u003d\"-fx-background-color: rgba(255, 255, 255, 0.8); -fx-background-radius: 10;\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"brand\" alignment\u003d\"CENTER\" minWidth\u003d\"540.0\" prefWidth\u003d\"${brand.parent.width}\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               style\u003d\"-fx-text-fill: rgba(123, 87, 69, 0.8);\" styleClass\u003d\"app_brand\" text\u003d\"Study Buddy\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Pane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox fx:id\u003d\"taskListHolder\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                      maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox fx:id\u003d\"taskList\" maxHeight\u003d\"560.0\" maxWidth\u003d\"1200\" minWidth\u003d\"340\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefWidth\u003d\"${brand.parent.width}\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                   HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox fx:id\u003d\"dueSoonList\" maxHeight\u003d\"560.0\" minWidth\u003d\"200\" prefWidth\u003d\"600\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"dueSoonListPanelPlaceholder\" prefWidth\u003d\"${brand.parent.width}\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                   HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cStackPane fx:id\u003d\"taskSummaryHolder\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cVBox\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               minHeight\u003d\"120.0\" prefHeight\u003d\"200.0\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets/\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"NEVER\"/\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 15,
      "souwmyaa": 4,
      "wyt-sonia": 75,
      "-": 36,
      "gx-huang": 3
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "           xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cPane maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cHBox fx:id\u003d\"resultPane\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  prefWidth\u003d\"${resultPane.parent.width}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" maxHeight\u003d\"150.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              prefHeight\u003d\"${resultPane.parent.height}\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cImageView fitHeight\u003d\"120.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                               HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cImage url\u003d\"@../images/SB.png\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/Pane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13,
      "wyt-sonia": 15,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/StatusBarFooter.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/resources/view/TaskListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" rowValignment\u003d\"TOP\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 62
    }
  },
  {
    "path": "src/main/resources/view/TaskListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/TaskSummaryPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.AreaChart?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.BarChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.LineChart?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.PieChart?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"498.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTabPane tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003ctabs\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Pie Chart\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cPieChart fx:id\u003d\"taskSummaryPieChart\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Area Chart\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cAreaChart fx:id\u003d\"taskSummaryAreaChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Bar Chart\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cBarChart fx:id\u003d\"taskSummaryBarChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/BarChart\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Line Chart\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLineChart fx:id\u003d\"taskSummaryLineChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/LineChart\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/tabs\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 58
    }
  },
  {
    "path": "src/test/java/seedu/address/commons/util/AppUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtilTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_exitingImage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(AppUtil.getImage(\"/images/study_buddy.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_true_nothingHappens() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String errorMessage \u003d \"error message\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "-": 35
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/LogicManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ListCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManagerTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path temporaryFolder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidCommandFormat_throwsParseException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_commandExecutionError_throwsCommandException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        String deleteCommand \u003d \"delete 9\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validCommand_success() throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String listCommand \u003d ListCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_storageThrowsIoException_throwsCommandException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        // Execute add command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addPerson(expectedPerson);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and confirms that"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * - no exceptions are thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(String inputCommand, String expectedMessage,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                                      Model expectedModel) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult result \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertParseException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that the exception is thrown and that the result message is correct."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                                      String expectedMessage) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and confirms that"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code expectedException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandSuccess(String, String, Model)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                                      String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 2,
      "wyt-sonia": 5,
      "-": 160
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code AddCommand}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandIntegrationTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_newPerson_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addPerson(validPerson);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new AddCommand(validPerson), model,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInList \u003d model.getAddressBook().getPersonList().get(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 45
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validPerson);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void sortDueSoonTasks(){}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addMod(Module module) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void deleteDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void completeTask(Task task) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that contains a single person."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubWithPerson extends ModelStub {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Person person;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubWithPerson(Person person) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            this.person \u003d person;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.person.isSamePerson(person);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that always accept the person being added."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends ModelStub {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            personsAdded.add(person);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tasksAdded.add(task);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddressBook();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return personsAdded.stream().anyMatch(person::isSamePerson);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 24,
      "souwmyaa": 16,
      "aegis-bot": 60,
      "wyt-sonia": 8,
      "-": 185,
      "gx-huang": 5
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.add.AddTaskCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void constructor_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task validTask \u003d new TaskBuilder().build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*@Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_duplicateTask_throwsCommandException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task validTask \u003d new TaskBuilder().build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithTask(validTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(CommandException.class, addTaskCommand.MESSAGE_DUPLICATE_TASK, ()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            -\u003e addTaskCommand.execute(modelStub));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task1 \u003d new TaskBuilder().withName(\"ass1\").build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task2 \u003d new TaskBuilder().withName(\"ass2\").build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1command \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add2command \u003d new AddTaskCommand(task2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same object -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(add1command.equals(add1command));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same values -\u003e returns true"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1copycommand \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(add1command.equals(add1copycommand));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //different types -\u003e reutrns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //null -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(null));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //diff task -\u003e returns false"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(add2command));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void sortDueSoonTasks(){}"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addMod(Module mod) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void completeTask(Task task) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void deleteDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A Model stub that contains a single task."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        private final Task task;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelStubWithTask(Task task) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return this.task.isSameTask(task);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A Model stub that always accept the person/task being added."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            personsAdded.add(person);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            tasksAdded.add(task);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new AddressBook();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return personsAdded.stream().anyMatch(person::isSamePerson);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return tasksAdded.stream().anyMatch(task::isSameTask);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 25,
      "souwmyaa": 20,
      "aegis-bot": 12,
      "gx-huang": 250
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ArchiveTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class ArchiveTaskCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToArchive);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveCommand \u003d new ArchiveTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToArchive);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveSecondCommand \u003d new ArchiveTaskCommand(INDEX_SECOND_PERSON);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommand));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommandCopy \u003d new ArchiveTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommandCopy));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(null));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(archiveSecondCommand));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "gx-huang": 83
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ClearCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_emptyAddressBook_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_nonEmptyAddressBook_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setAddressBook(new AddressBook());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "-": 30
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ClearTasksCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_emptyAddressBook_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_nonEmptyAddressBook_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.setAddressBook(new AddressBook());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 32
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_AMY \u003d \"11111111\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_BOB \u003d \"22222222\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_HUSBAND \u003d \"husband\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_FRIEND \u003d \"friend\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_AMY;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_BOB;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (CommandException | ParseException ce) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedAddressBook, actualModel.getAddressBook());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code model}\u0027s address book."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showPersonAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "aegis-bot": 1,
      "wyt-sonia": 1,
      "-": 127
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code DeleteCommand}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.deletePerson(personToDelete);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.deletePerson(personToDelete);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        showNoPerson(expectedModel);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidIndexFilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show no one."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showNoPerson(Model model) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(p -\u003e false);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(model.getFilteredPersonList().isEmpty());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 109
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.delete.DeleteTaskCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DeleteTaskCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand atCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_PERSON);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "gx-huang": 80
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for EditCommand."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_allFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_noFieldSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_filteredList_success() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonUnfilteredList_failure() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonFilteredList_failure() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // edit person in filtered list into a duplicate in address book"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            new EditPersonDescriptorBuilder(personInList).build());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(commandWithSameValues));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(standardCommand));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(null));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(standardCommand.equals(new ClearTasksCommand()));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        // different descriptor -\u003e returns false"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "aegis-bot": 2,
      "-": 148
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditPersonDescriptorTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(DESC_AMY.equals(descriptorWithSameValues));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(DESC_AMY.equals(DESC_AMY));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // different values -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(DESC_BOB));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // different phone -\u003e returns false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        // different email -\u003e returns false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // different address -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // different tags -\u003e returns false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 57
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static seedu.address.logic.commands.oldcommands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_exit_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 2,
      "-": 19
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.CARL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ELLE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.FIONA;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.FindCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code FindCommand}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate firstPredicate \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate secondPredicate \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_zeroKeywords_noPersonFound() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d new FindCommand(predicate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Collections.emptyList(), model.getFilteredPersonList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_multipleKeywords_multiplePersonsFound() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d new FindCommand(predicate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private NameContainsKeywordsPredicate preparePredicate(String userInput) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 83
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/HelpCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static seedu.address.logic.commands.oldcommands.HelpCommand.SHOWING_HELP_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_help_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 2,
      "-": 19
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for ListCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_listIsFiltered_showsEverything() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 39
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParserTest {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_optionalFieldsMissing_success() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // zero tags"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_compulsoryFieldMissing_failure() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing name prefix"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            expectedMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing phone prefix"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            expectedMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing email prefix"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            expectedMessage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing address prefix"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            expectedMessage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // all prefixes missing"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            expectedMessage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid name"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid phone"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid email"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid address"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid tag"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // two invalid values, only first invalid value reported"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // non-empty preamble"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 106
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddressBookParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import seedu.address.logic.commands.ClearTasksCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ExitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.FindCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.HelpCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.ListCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonUtil;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParserTest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser parser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(person), command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(parser.parseCommand(ClearTasksCommand.COMMAND_WORD) instanceof ClearTasksCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(parser.parseCommand(ClearTasksCommand.COMMAND_WORD + \" 3\") instanceof ClearTasksCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_help() throws Exception {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e parser.parseCommand(\"\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 3,
      "aegis-bot": 8,
      "-": 90
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * As we are only doing white-box testing, our test cases do not cover path variations"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * same path through the DeleteCommand, and therefore we test only one of them."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The path variation for those two cases occur inside the ParserUtil, and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * therefore should be covered by the ParserUtilTest."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private DeleteCommandParser parser \u003d new DeleteCommandParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validArgs_returnsDeleteCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidArgs_throwsParseException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 31
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/EditCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParserTest {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_INVALID_FORMAT \u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_missingParts_failure() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // no index specified"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // no field specified"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // no index and no field specified"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidPreamble_failure() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // negative index"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // zero index"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid arguments being parsed as preamble"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid prefix being parsed as preamble"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid phone followed by valid email"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // parsing it together with a valid tag results in error"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple invalid values, but only the first invalid value is captured"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allFieldsSpecified_success() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_someFieldsSpecified_success() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_AMY).build();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_oneFieldSpecified_success() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        // name"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_THIRD_PERSON;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        // phone"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        // email"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        // address"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        // tags"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_multipleRepeatedFields_acceptsLast() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValueFollowedByValidValue_success() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        // no other valid values specified"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        // other valid values specified"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            + PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(VALID_ADDRESS_BOB).build();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_resetTags_success() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_THIRD_PERSON;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 2,
      "-": 209
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/FindCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private FindCommandParser parser \u003d new FindCommandParser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_emptyArg_throwsParseException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validArgs_returnsFindCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // no leading and trailing whitespaces"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand expectedFindCommand \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple whitespaces between keywords"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/seedu/address/model/AddressBookTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicatePersonException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Collections.emptyList(), addressBook.getPersonList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_withValidReadOnlyAddressBook_replacesData() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook newData \u003d getTypicalAddressBook();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(newData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newData, addressBook);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // Two persons with the same identity fields"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStub newData \u003d new AddressBookStub(newPersons);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personNotInAddressBook_returnsFalse() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addressBook.hasPerson(ALICE));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addressBook.hasPerson(ALICE));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addressBook.hasPerson(editedAlice));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class AddressBookStub implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStub(Collection\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            this.persons.setAll(persons);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return persons;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return getModuleList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 7,
      "aegis-bot": 3,
      "wyt-sonia": 6,
      "-": 102,
      "gx-huang": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class to help with building EditPersonDescriptor objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditPersonDescriptorBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private EditPersonDescriptor descriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptor();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.descriptor \u003d new EditPersonDescriptor(descriptor);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder(Person person) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptor();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setName(person.getName());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setPhone(person.getPhone());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setEmail(person.getEmail());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setAddress(person.getAddress());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setTags(person.getTags());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withName(String name) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setName(new Name(name));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setPhone(new Phone(phone));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withEmail(String email) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setEmail(new Email(email));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withAddress(String address) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setAddress(new Address(address));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * that we are building."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withTags(String... tags) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setTags(tagSet);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptor build() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "-": 86
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class to help with building Person objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_PHONE \u003d \"85355255\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Email email;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Address address;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d new Phone(DEFAULT_PHONE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d new Email(DEFAULT_EMAIL);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d new Address(DEFAULT_ADDRESS);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the PersonBuilder with the data of {@code personToCopy}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder(Person personToCopy) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d personToCopy.getName();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d personToCopy.getPhone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d personToCopy.getEmail();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d personToCopy.getAddress();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Name} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withName(String name) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withTags(String... tags) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        //this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Address} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withAddress(String address) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d new Address(address);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Phone} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Email} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withEmail(String email) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d new Email(email);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person build() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Person(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 91
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/PersonUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.AddCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.logic.commands.oldcommands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class for Person."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonUtil {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an add command string for adding the {@code person}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getAddCommand(Person person) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the part of command string for the given {@code person}\u0027s details."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getPersonDetails(Person person) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_NAME + person.getName().fullName + \" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        person.getTags().stream().forEach("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (descriptor.getTags().isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                sb.append(PREFIX_TAG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 2,
      "-": 60
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TaskBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.TaskStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Utility class to help build tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TaskBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_MODULE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Team project\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_TASKDESCRIPTION \u003d \"Team project\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final double DEFAULT_ESTIMATEDTIME \u003d 45.5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskType DEFAULT_TASKTYPE \u003d TaskType.Others;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskStatus DEFAULT_TASKSTATUS \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final double DEFAULT_TASKWEIGHT \u003d 45.0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final LocalDateTime[] DEFAULT_DATETIME \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 10/10/2020\")};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final LocalDateTime DEFAULT_CREATION_DATETIME \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d new Module(DEFAULT_MODULE, DEFAULT_MODULE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d DEFAULT_TASKTYPE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d DEFAULT_NAME;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d DEFAULT_TASKDESCRIPTION;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d DEFAULT_TASKWEIGHT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d DEFAULT_TASKSTATUS;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d DEFAULT_DATETIME;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d DEFAULT_ESTIMATEDTIME;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d DEFAULT_CREATION_DATETIME;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init new Task with parameter TaskToCopy"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder(Task taskToCopy) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d taskToCopy.getModule();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d taskToCopy.getTaskType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d taskToCopy.getTaskName();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d taskToCopy.getTaskDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d taskToCopy.getWeight();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d taskToCopy.getTaskStatus();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d taskToCopy.getDateTimes();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d taskToCopy.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d taskToCopy.getCreationDateTime();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init taskBuilder with name as parameter."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder withName(String name) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * builds task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task(module, taskType, taskName, taskDescription, weight, taskStatus,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 7,
      "gx-huang": 73
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalPersons.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Person} objects to be used in tests."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalPersons {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        .withPhone(\"94351253\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        .withAddress(\"311, Clementi Ave 2, #02-25\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added - Person\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        .build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TypicalPersons() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    } // prevents instantiation"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical persons."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AddressBook getTypicalAddressBook() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook ab \u003d new AddressBook();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            ab.addPerson(person);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cPerson\u003e getTypicalPersons() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 75
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import seedu.address.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.TaskStatus;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * represents a typical tasklist."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TypicalTasks {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\", \"CS2103T\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \"CS2101\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/04/2020\"), LocalDateTime.now()};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task[] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Ass 1\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Meeting 1\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, LocalDateTime.now())"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static AddressBook getTypicalTaskList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddressBook sampleAb \u003d new AddressBook();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sampleAb.addTask(sampleTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 1,
      "wyt-sonia": 5,
      "gx-huang": 40
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/TestFxmlObject.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.DefaultProperty;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A test object which can be constructed via an FXML file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@DefaultProperty(\"text\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestFxmlObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TestFxmlObject() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public TestFxmlObject(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        setText(text);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setText(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof TestFxmlObject // instanceof handles nulls"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/interactiveprompt/FindTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class FindTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getKeywordPrompt(), prompt.interact(\"find\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"find\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getConfirmationPrompt(\"randomKeyword\"), prompt.interact(\"randomKeyword\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_quitCommand_returnQuitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getQuitMessage(), prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 27
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/interactiveprompt/HelpInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package seedu.address.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class HelpInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private HelpInteractivePrompt hip \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(hip.interact(\"help\"), HelpInteractivePrompt.getHelpMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/interactiveprompt/add/AddTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.AddTaskCommandParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the task name.\", prompt.interact(\"add\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(AddTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_backCommand_returnMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the task name.\", prompt.interact(\"back\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnPrompt() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String userInput \u003d AddTaskCommandParser.parseName(\"1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The name of task is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Please choose the task type:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnPromptAss() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskType taskType \u003d AddTaskCommandParser.parseType(\"1\", TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The type of task is set to: \" + taskType.toString() + \".\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Please enter the deadline with format: \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnPromptOthers() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskType taskType \u003d AddTaskCommandParser.parseType(\"2\", TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The type of task is set to: \" + taskType.toString() + \".\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Please enter the deadline with format: \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"2\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnPromptError() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(new AddTaskCommandException(\"wrongIndexFormat\").getMessage(), prompt.interact(\"10\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fourthInput_returnPromptAss() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String userInput \u003d \"00:00 31/12/2020\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimes \u003d AddTaskCommandParser.parseDateTime(userInput, TaskType.Assignment);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        userInput \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The date and time is set to: \" + userInput + \"\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Press enter again to add the task:\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"1\" + \" \" + TaskType.Assignment.toString() + \" \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"00:00 31/12/2020\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"00:00 31/12/2020\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fourthInput_returnPromptOther() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String userInput \u003d \"12:00 31/12/2020-14:00 31/12/2020\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimes \u003d AddTaskCommandParser.parseDateTime(userInput, TaskType.Quiz);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        userInput \u003d TimeParser.getDateTimeString(dateTimes[0])"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The date and time is set to: \" + userInput + \"\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Press enter again to add the task:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"1\" + \" \" + TaskType.Quiz.toString() + \" \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"12:00 31/12/2020-12:00 31/12/2020\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"12:00 31/12/2020-14:00 31/12/2020\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fifthInput_returnPrompt() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"00:00 31/12/2020\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 121
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/interactiveprompt/add/CreateModuleInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class CreateModuleInteractivePromptTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please key in the name of the module that you want to create\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    //quit does not work"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /*@Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_backCommand_returnMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"\", prompt.interact(\"back\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"The name of module is set to: \" + \"Software engineering\" + \".\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Now key in your module code\", prompt.interact(\"Software engineering\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"Module Code: \" + \"O0000O\" + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Click \u0027Enter\u0027 again to confirm your changes\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"O0000O\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fourthInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"O0000O\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract_test() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.endInteract(\"a\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 57
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/interactiveprompt/delete/DeleteDuplicateTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class DeleteDuplicateTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteDuplicateTaskInteractivePrompt prompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(DeleteDuplicateTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The duplicate tasks will be deleted\\n \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteDuplicateTaskInteractivePrompt prompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteDuplicateTaskInteractivePrompt prompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 31
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/interactiveprompt/delete/DeleteTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package seedu.address.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class DeleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(DeleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to delete.\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /*@Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The task \" + model.getAddressBook().getTaskList().get(0).getTaskName()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" will be deleted. \\n \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, reply);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 38
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import seedu.address.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"seedu.address.ui.TestFxmlObject\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctext\u003eHello World!\u003c/text\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 4
    }
  }
]
