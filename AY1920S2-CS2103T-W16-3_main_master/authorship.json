[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "mainClassName \u003d \u0027draganddrop.studybuddy.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    archiveName \u003d \u0027studybuddy.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            linkcss             : true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            stylesheet          : \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            icons               : \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            experimental        : true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            sectlinks           : true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            idprefix            : \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            idseparator         : \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-root\u0027         : \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-name\u0027         : \u0027StudyBuddy\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-githuburl\u0027    : \u0027https://github.com/AY1920S2-CS2103T-W16-3/main\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-seedu\u0027        : true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "-": 151,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/AppParameters.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.FileUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the parsed command-line parameters given to the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParameters {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path configPath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the application command-line parameters."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AppParameters parse(Application.Parameters parameters) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d new AppParameters();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String configPathParameter \u003d namedParameters.get(\"config\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            configPathParameter \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return appParameters;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path getConfigPath() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setConfigPath(Path configPath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.configPath \u003d configPath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath.hashCode();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof AppParameters)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters otherAppParameters \u003d (AppParameters) other;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 1,
      "wyt-sonia": 13,
      "-": 48
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * This is a workaround for the following error when MainApp is made the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * entry point of the application:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * The reason is that MainApp extends Application. In that case, the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * LauncherHelper will check for the javafx.graphics module to be present"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * to be the entry point of the application, we avoid this issue."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(MainApp.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/MainApp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Version;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.Storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StudyBuddyStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.Ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.UiManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final Version VERSION \u003d new Version(1, 2, 1, true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StudyBuddy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(userPrefs.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storage \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(\"Starting StudyBuddy \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Study Buddy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s study buddy and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The data from the sample study buddy will be used instead if {@code storage}\u0027s study buddy is not found,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * or an empty study buddy will be used instead if errors occur when reading {@code storage}\u0027s study buddy."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Optional\u003cReadOnlyStudyBuddy\u003e studyBuddyOptional;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ReadOnlyStudyBuddy initialData;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddyOptional \u003d storage.readStudyBuddy();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (!studyBuddyOptional.isPresent()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample StudyBuddy\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d studyBuddyOptional.orElseGet(SampleDataUtil::getSampleStudyBuddy);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default config properties\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default user prefs\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 25,
      "souwmyaa": 16,
      "wyt-sonia": 18,
      "-": 125
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Config.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Config values used by the app"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Config {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Config values customizable through config file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Level logLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public Level getLogLevel() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return logLevel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLogLevel(Level logLevel) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logLevel \u003d logLevel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFilePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefsFilePath(Path userPrefsFilePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsFilePath \u003d userPrefsFilePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(logLevel, userPrefsFilePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Config)) { //this handles null as well."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Config o \u003d (Config) other;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(logLevel, o.logLevel)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Current log level : \" + logLevel);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 5,
      "-": 57
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/GuiSettings.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 740;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 5,
      "-": 67
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/LogsCenter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String LOG_FILE \u003d \"studybuddy.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes with a custom log level (specified in the {@code config} object)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logging levels for existing loggers will only be updated if the logger with the same name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * is requested again from the LogsCenter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void init(Config config) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 2,
      "-": 109
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_COMPLETE_TASK_SUCCESS \u003d \"Task Completed: \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS \u003d \"Deleted duplicate tasks\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 3,
      "aegis-bot": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Version.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a version with major, minor and patch number"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Version implements Comparable\u003cVersion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int major;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int minor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int patch;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean isEarlyAccess;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public Version(int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.major \u003d major;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minor \u003d minor;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.patch \u003d patch;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isEarlyAccess \u003d isEarlyAccess;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a version number string in the format V1.2.3."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param versionString version number string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a Version object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Version fromString(String versionString) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!versionMatcher.find()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Version(Integer.parseInt(versionMatcher.group(1)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(2)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(3)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            versionMatcher.group(4) \u003d\u003d null ? false : true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMajor() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return major;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMinor() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return minor;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getPatch() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return patch;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEarlyAccess() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEarlyAccess;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public int compareTo(Version other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (major !\u003d other.major) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return major - other.major;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if (minor !\u003d other.minor) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            return minor - other.minor;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if (patch !\u003d other.patch) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return patch - other.patch;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isEarlyAccess) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            hash \u003d \"1\" + hash;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Integer.parseInt(hash);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof Version)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        final Version other \u003d (Version) obj;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return compareTo(other) \u003d\u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 27,
      "-": 86
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/index/Index.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a zero-based or one-based index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * base the other component is using for its index. However, after receiving the {@code Index}, that component can"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * convert it back to an int if the index will not be passed to a different component again."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Index {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Index can only be created by calling {@link Index#fromZeroBased(int)} or"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Index#fromOneBased(int)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Index(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        if (zeroBasedIndex \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zeroBasedIndex \u003d zeroBasedIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a zero-based index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromZeroBased(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(zeroBasedIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a one-based index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromOneBased(int oneBasedIndex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(oneBasedIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getZeroBased() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getOneBased() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Index // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 9,
      "-": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/exceptions/DataConversionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error during conversion of data from one format to another"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DataConversionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public DataConversionException(Exception cause) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/exceptions/IllegalValueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param cause   of the main exception"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/AppUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * A container for App specific utility functions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(imagePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if {@code condition} is false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void checkArgument(Boolean condition) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!condition) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void checkArgument(Boolean condition, String errorMessage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!condition) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/CollectionUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Utility methods related to Collections"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #requireAllNonNull(Collection)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Object... items) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Stream.of(items).forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Throws NullPointerException if {@code items} or any element of {@code items} is null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        items.forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code items} contain any elements that are non-null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isAnyNonNull(Object... items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 33
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/ConfigUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A class for accessing the Config File."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(configFilePath, Config.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void saveConfig(Config config, Path configFilePath) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.saveJsonFile(config, configFilePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/FileUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Writes and reads files"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String CHARSET \u003d \"UTF-8\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isFileExists(Path file) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(URI)}},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise returns false."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param path A string representing the file path. Cannot be null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPath(String path) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Paths.get(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidPathException ipe) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createIfMissing(Path file) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFileExists(file)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            createFile(file);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Files.exists(file)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        createParentDirsOfFile(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createFile(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates parent directories of file if it has a parent directory"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createParentDirsOfFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Path parentDir \u003d file.getParent();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (parentDir !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(parentDir);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Assumes file exists"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String readFromFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String(Files.readAllBytes(file), CHARSET);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes given string to a file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will create the file if it does not exist yet."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void writeToFile(Path file, String content) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.write(file, content.getBytes(CHARSET));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 81
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/JsonUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationContext;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.module.SimpleModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Converts a Java object instance to JSON and vice versa"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        .registerModule(new SimpleModule(\"SimpleModule\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .addSerializer(Level.class, new ToStringSerializer())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * If any values are missing from the file, default values will be used, as long as the file is a valid json file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath                   cannot be null."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Json file \" + filePath + \" not found\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        T jsonFile;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.of(jsonFile);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the Json object to the specified file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param jsonFile cannot be null"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath cannot be null"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was an error during writing to the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(jsonFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        serializeObjectToJsonFile(filePath, jsonFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given string representation of a JSON data to instance of a class"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The instance of T with the specified values in the JSON string"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.readValue(json, instanceClass);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given instance of a class into its JSON data string representation"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instance The T object to be converted into the JSON string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e      The generic type to create an instance of"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return JSON data representation of the given class instance, in string"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Contains methods that retrieve logging level from serialized string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        protected LevelDeserializer(Class\u003c?\u003e vc) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            super(vc);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        protected Level _deserialize(String value, DeserializationContext ctxt) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            return getLoggingLevel(value);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         * Gets the logging level that matches loggingLevelString"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns null if there are no matches"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        private Level getLoggingLevel(String loggingLevelString) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.parse(loggingLevelString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public Class\u003cLevel\u003e handledType() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.class;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "wyt-sonia": 4,
      "-": 139
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/StringUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Helper functions for handling strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code sentence} contains the {@code word}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ignores case, but a full word match is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003eexamples:\u003cpre\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *       \u003c/pre\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param sentence cannot be null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param word     cannot be null, cannot be empty, must be a single word"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean containsWordIgnoreCase(String sentence, String word) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(sentence);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(word);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String preppedWord \u003d word.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String preppedSentence \u003d sentence;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(wordsInPreppedSentence)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            .anyMatch(preppedWord::equalsIgnoreCase);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed message of the t, including the stack trace."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDetails(Throwable t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        t.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return t.getMessage() + \"\\n\" + sw.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code s} represents a non-zero unsigned integer"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will return false for any other non-null string input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code s} is null."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isNonZeroUnsignedInteger(String s) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 2,
      "wyt-sonia": 2,
      "-": 64
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException   If an error occurs during parsing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the StudyBuddy."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see Model#getStudyBuddy()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ReadOnlyStudyBuddy getStudyBuddy();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks that are due soon"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of archived tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ObservableList\u003cModule\u003e getFilteredModuleList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13,
      "souwmyaa": 11,
      "wyt-sonia": 9,
      "-": 35,
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/LogicManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.StudyBuddyParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddyParser studyBuddyParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddyParser \u003d new StudyBuddyParser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult commandResult \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Command command \u003d studyBuddyParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (java.text.ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ex.getLocalizedMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            storage.saveStudyBuddy(model.getStudyBuddy());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            storage.saveStudyBuddy(model.getStudyBuddy());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // keep track of task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task.updateCurrentTaskList(new ArrayList\u003cTask\u003e(getStudyBuddy().getTaskList()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getStudyBuddy();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return model.getFilteredTaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return model.getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return model.getFilteredModuleList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 18,
      "souwmyaa": 22,
      "aegis-bot": 2,
      "wyt-sonia": 17,
      "-": 52,
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 3,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Help information should be shown to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The application should exit.1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, exit);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 10,
      "-": 63
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Parameters: TaskName, TaskType, TaskDateTime\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This Task already exists. Are you sure you want to proceed?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an AddTaskCommand to add the specified {@code Task}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (model.hasTask(toAdd)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (!toAdd.isDuplicate()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                toAdd.setDuplicate(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_DUPLICATE_TASK, toAdd));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        model.addTask(toAdd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof AddTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 7,
      "wyt-sonia": 42
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/CreateModCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A command to create modules."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create mod\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new mod. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Parameters: Name \u0026 Code\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Mod added: %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This module already exists in the study buddy\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Module mod;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModCommand(Module mod) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.mod \u003d mod;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (model.hasMod(mod)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.addMod(mod);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, mod));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof CreateModCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 mod.equals(((CreateModCommand) other).mod));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "aegis-bot": 42,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/ClearTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Clears the study buddy."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Study Buddy has been cleared!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.setStudyBuddy(new StudyBuddy());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 2,
      "aegis-bot": 1,
      "wyt-sonia": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/DeleteDuplicateTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Deletes all repeated tasks from the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete duplicates\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \": Deletes any duplicate tasks in the displayed task list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS \u003d \"Deleted duplicate tasks\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteDuplicateTaskCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task task1 \u003d lastShownList.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (int j \u003d 0; j \u003c lastShownList.size(); j++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (i \u003d\u003d j) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    Task task2 \u003d lastShownList.get(j);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    if (task1.isSameTask(task2)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        Task taskToDelete \u003d lastShownList.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        model.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof DeleteDuplicateTaskCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 58
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Deletes a task identified using it\u0027s displayed index from the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \": Deletes the task identified by the index number used in the displayed task list.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof DeleteTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 48
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/ArchiveTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Archives an entry in the study buddy."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"archive\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Archives the selected entry\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_ARCHIVE_TASK_SUCCESS \u003d \"Archived Task: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        model.deleteTask(taskToArchive);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        model.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            || (other instanceof ArchiveTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((ArchiveTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 1,
      "wyt-sonia": 1,
      "gx-huang": 45
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Completes a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"Complete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \": Complete the task based on the displayed list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task taskToComplete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.completeTask(taskToComplete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.deleteTask(taskToComplete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.archiveTask(taskToComplete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_COMPLETE_TASK_SUCCESS,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                taskToComplete.getTaskName()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 2,
      "aegis-bot": 39
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/EditTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Edits the details of an existing task in the study buddy."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String EDIT_TASK_SUCCESS \u003d \"Task has been edited successfully\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskField taskField;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String newTaskName \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TaskType newTaskType \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private LocalDateTime[] newDateTimes \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module newModule \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Creates an edit task command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param targetIndex index of target task to be edited"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskField the task field to be edited"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskCommand(Index targetIndex, TaskField taskField) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(targetIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(taskField);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskField \u003d taskField;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewTaskName(String newTaskName) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newTaskName \u003d newTaskName;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewTaskType(TaskType newTaskType) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newTaskType \u003d newTaskType;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewDateTime(LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newDateTimes \u003d newDateTimes;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void provideNewModule(Module newModule) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.newModule \u003d newModule;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task taskToEdit \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskName(taskToEdit, newTaskName);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskType(taskToEdit, newTaskType);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskDateTime(taskToEdit, newDateTimes);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            requireNonNull(newModule);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                model.setTaskMod(taskToEdit, newModule);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (ModuleCodeException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new CommandException(\"module code invalid/does not exist!!!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(EDIT_TASK_SUCCESS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 82,
      "aegis-bot": 12,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/exceptions/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/sort/SortTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommand that can handle the sorting of tasks according to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * user choice."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \": Sort the tasks by keyword chosen by user. \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Parameters: Sort Keyword (1 (deadline / task start date), 2 (task name) and 3 creation datetime)\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Sort Task: %1$s\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String sortKeyword;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommand(String sortKeyword) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.sortKeyword \u003d sortKeyword;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ObservableList\u003cTask\u003e temp \u003d model.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        model.sortTasks(sortKeyword);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS, sortKeyword));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof SortTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 sortKeyword.equals(((SortTaskCommand) other).sortKeyword)); // state check"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 2,
      "wyt-sonia": 43
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Finds and lists all tasks in the tasks list whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Keyword matching is case-insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof FindTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 42,
      "souwmyaa": 2
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/ListTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.model.Model.PREDICATE_SHOW_ALL_TASKS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Represent a ListTaskCommand that can List all persons in the task list to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 26
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/RefreshCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Archives an entry in the study buddy."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class RefreshCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Refreshes the tasks and update their status\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUE_SOON_TASK_SUCCESS \u003d \"Tasks\u0027 status are updated and \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"tasks due soon are displayed\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public RefreshCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task task \u003d lastShownList.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            boolean isStatusExpired \u003d task.isStatusExpired();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isStatusExpired) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Task temp \u003d task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                model.deleteTask(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                temp.freshStatus();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                model.addTask(temp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                model.sortTasks(\"Creation DateTime\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (task.isDueSoon()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (model.getFilteredDueSoonTaskList().contains(task)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.addDueSoonTask(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (model.getFilteredDueSoonTaskList().contains(task)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.deleteDueSoonTask(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.sortDueSoonTasks();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DUE_SOON_TASK_SUCCESS));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof RefreshCommand); // state check"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 44,
      "wyt-sonia": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/StudyBuddyParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class StudyBuddyParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Command parseCommand(String option) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/TimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses valid dateTime string to LocalDateTime variable."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDateTime parseDateTime(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime inputTime \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            inputTime \u003d LocalDateTime.parse(userInput.trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new InteractiveCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return inputTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts LocalDateTime variable to a String as HH:mm dd/MM/yyyy format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateTimeString(LocalDateTime dateTime) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String min \u003d dateTime.getMinute() \u003c 10 ? \"0\" + dateTime.getMinute()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getMinute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hour \u003d dateTime.getHour() \u003c 10 ? \"0\" + dateTime.getHour()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getHour();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String day \u003d dateTime.getDayOfMonth() \u003c 10 ? \"0\" + dateTime.getDayOfMonth()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String month \u003d dateTime.getMonthValue() \u003c 10 ? \"0\" + dateTime.getMonthValue()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getMonthValue();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return hour + \":\" + min"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \" \" + day + \"/\" + month + \"/\" + dateTime.getYear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts LocalDateTime variable to a String as dd/MM/yyyy format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateString(LocalDate date) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String day \u003d date.getDayOfMonth() \u003c 10 ? \"0\" + date.getDayOfMonth()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + date.getDayOfMonth();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String month \u003d date.getMonthValue() \u003c 10 ? \"0\" + date.getMonthValue()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + date.getMonthValue();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return day + \"/\" + month + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "wyt-sonia": 64
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/exceptions/ParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a parse error encountered by a parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParseException extends IllegalValueException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/AddTaskCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleCode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommandParser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for task name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseName(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d userInput.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for task description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseDescription(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for task date and time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDateTime[] parseDateTime(String userInput, TaskType taskType) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] result \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result[0] \u003d TimeParser.parseDateTime(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // filter out the input with correct format but invalid date time"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result[0].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // filter out the invalid input with wrong \"start-end\" format"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tempInputDateTimes \u003d userInput.trim().split(\"-\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result[0] \u003d TimeParser.parseDateTime(tempInputDateTimes[0]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result[1] \u003d TimeParser.parseDateTime(tempInputDateTimes[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result[0].isBefore(LocalDateTime.now()) || result[1].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result[1].isBefore(result[0])) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddTaskCommandException(\"eventEndBeforeStartError\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for the module of the task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Module parseModule(String userInput, ObservableList\u003cModule\u003e modules) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module result \u003d null;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (ModuleCode.isModuleCode(userInput)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                List\u003cModule\u003e tempModules \u003d modules.stream()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filter(m -\u003e m.getModuleCode().toString().equals(userInput)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (!tempModules.isEmpty()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    result \u003d tempModules.get(0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddTaskCommandException(\"noSuchModuleError\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                int index \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003c 0 || index \u003e\u003d modules.size()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d modules.get(index);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for the type of the task."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param size"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType parseType(String userInput, int size) throws AddTaskCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e size) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddTaskCommandException(\"invalidIndexRange\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for weight of the task."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseWeight(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for the estimated time needed to complete the task."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseTimeCost(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 179
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/EditTaskCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.EditTaskCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Parser for the edit command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommandParser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String parseName(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result \u003d userInput.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static LocalDateTime[] parseDateTime(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime[] result \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        result \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!userInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // filter out the invalid input with wrong \"start-end\" format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tempInputDateTimes \u003d userInput.trim().split(\"-\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result[0] \u003d TimeParser.parseDateTime(tempInputDateTimes[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result[1] \u003d TimeParser.parseDateTime(tempInputDateTimes[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (result[0].isBefore(LocalDateTime.now()) || result[1].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (result[1].isBefore(result[0])) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"eventEndBeforeStartError\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static TaskType parseType(String userInput, int size)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        throws EditTaskCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e size) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new EditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * throws a (converted) error when the userinput is an invalid moduleCode"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return module"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws AddTaskCommandException"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static Module parseModule(String userInput) throws AddTaskCommandException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return new Module(userInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AddTaskCommandException(ex.getLocalizedMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 78,
      "aegis-bot": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/AddTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an AddTaskCommandException with {@code errorType}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ArchiveTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/CompleteTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DeleteDuplicateTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteDuplicateTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DeleteTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DueSoonRefreshCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonRefreshCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonRefreshCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/EditTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ExitTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *pending"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/InteractiveCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InteractiveCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractiveCommandException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"emptyInputError\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The input is empty, please check again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noSuchModuleError\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Could not find the module based on the module code entered, please check and re-enter.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidIndexRangeError\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidOptionRangeError\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The option index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongIndexFormatError\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongOptionFormatError\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of option index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"dataTimeFormatError\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time format, please follow the format below:\\n  \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"Event: HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"e.g. 12:00 01/01/2020-14:00 01/01/2020\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"Rest : HH:mm dd/MM/yyyy   e.g. 12:00 01/01/2020\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"pastDateTime\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, please enter a time in the future.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"eventEndBeforeStartError\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, the end date you entered is before the start date, please check.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorType() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 63
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/SortTaskCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommandException that will be throw when there is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * index format and range error."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/Model.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code Predicate} that always evaluate to true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setStudyBuddyFilePath(Path studyBuddyFilePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the StudyBuddy"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ReadOnlyStudyBuddy getStudyBuddy();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces study buddy data with the data in {@code studyBuddy}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setStudyBuddy(ReadOnlyStudyBuddy studyBuddy);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    boolean hasTask(Task task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * completes the given task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The task must exist in the study buddy."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void completeTask(Task target);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task name"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskName(Task target, String newTaskName);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task type"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskType(Task target, TaskType newTaskType);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task date time"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskDateTime(Task target, LocalDateTime[] newDateTimes);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void setTaskMod(Task target, Module mod) throws ModuleCodeException;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the given task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void deleteTask(Task task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Archives the given task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    void archiveTask(Task task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the given task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addDueSoonTask(Task task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds the given task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code task} must not already exist in the task list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void addTask(Task task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void sortDueSoonTasks();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTask(Task target, Task editedTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    boolean hasMod(Module mod);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void addMod(Module mod);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered task list"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a List of modules"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ObservableList\u003cModule\u003e getFilteredModuleList();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the filter of the filtered task list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void sortTasks(String keyword);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 39,
      "souwmyaa": 28,
      "aegis-bot": 10,
      "wyt-sonia": 42,
      "-": 41,
      "gx-huang": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ModelManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the in-memory model of the study buddy data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddy studyBuddy;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final FilteredList\u003cModule\u003e filteredModules;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredArchiveTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredDueSoonTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Initializes a ModelManager with the given studyBuddy and userPrefs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ModelManager(ReadOnlyStudyBuddy studyBuddy, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(studyBuddy.getTaskList(), userPrefs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(\"Initializing with study buddy: \" + studyBuddy + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy \u003d new StudyBuddy(studyBuddy);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getTaskList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredModules \u003d new FilteredList\u003c\u003e(this.studyBuddy.getModuleList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredArchiveTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getArchivedList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredDueSoonTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getDueSoonList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this(new StudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return userPrefs.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddyFilePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(studyBuddyFilePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudyBuddy \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddy(ReadOnlyStudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy.resetData(studyBuddy);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.hasTask(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.completeTask(target);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String taskName) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskName(target, taskName);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newTaskDateTime) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskDateTime(target, newTaskDateTime);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskMod(Task target, Module mod) throws ModuleCodeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.setModuleInTask(target, mod);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.removeTask(target);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.removeDueSoonTask(target);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.sortTasks(keyword);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.sortDueSoonTasks();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addArchivedTask(task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addDueSoonTask(task);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.hasModule(mod);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * STILL NEEDS MORE REFINEMENT DUE TO ABSENCE OF UpdateModuleList."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param mod"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addMod(Module mod) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        System.out.println(\"ModelManager add mod\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addModule(mod);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        System.out.println(\"ModelManager add mod success\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTasks(target, editedTask);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code versionedStudyBuddy}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return filteredArchiveTasks;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return filteredModules;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return filteredDueSoonTasks;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        filteredTasks.setPredicate(predicate);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.equals(other.studyBuddy)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredTasks.equals(other.filteredTasks)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 filteredDueSoonTasks.equals(other.filteredDueSoonTasks)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredArchiveTasks.equals(other.filteredArchiveTasks);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 32,
      "souwmyaa": 63,
      "aegis-bot": 27,
      "wyt-sonia": 33,
      "-": 86,
      "gx-huang": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ReadOnlyStudyBuddy.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Unmodifiable view of an study buddy"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the persons list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * This list will not contain any duplicate persons."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getArchivedList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getDueSoonList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ObservableList\u003cModule\u003e getModuleList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This list will not contain any duplicate tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getTaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 3,
      "aegis-bot": 1,
      "wyt-sonia": 7,
      "-": 12,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ReadOnlyUserPrefs.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/Semester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "enum SemesterNumber {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SEMESTER_ONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SEMESTER_TWO"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Semester {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private SemesterNumber semesterNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Semester(int year, SemesterNumber semesterNumber) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.semesterNumber \u003d semesterNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setYear(int year) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SemesterNumber getSemesterNumber() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return semesterNumber;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setSemesterNumber(SemesterNumber semesterNumber) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.semesterNumber \u003d semesterNumber;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/StudyBuddy.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Wraps all data at the study buddy"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Duplicates are not allowed (by .isSamePerson comparison)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddy implements ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final UniqueTaskList archivedTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList dueSoonTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final UniqueTaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ModuleList moduleList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an StudyBuddy using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy(ReadOnlyStudyBuddy toBeCopied) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of the task list with {@code tasks}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks.setTasks(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the given task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(editedTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.setTask(target, editedTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.sortTasks(keyword);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.sortTasks(\"deadline / task start date\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return tasks.contains(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code StudyBuddy}."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void removeTask(Task key) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.remove(key);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (this.getDueSoonList().contains(key)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            removeDueSoonTask(key);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        sortDueSoonTasks();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code StudyBuddy}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void removeDueSoonTask(Task key) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.remove(key);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setArchivedTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.archivedTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setDueSoonTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.dueSoonTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Resets the existing data of this {@code StudyBuddy} with {@code newData}."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        setArchivedTasks(newData.getArchivedList());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setDueSoonTasks(newData.getDueSoonList());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTasks(newData.getTaskList());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setModuleList(newData.getModuleList());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //// task-level operations"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds an archived person to the study buddy."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param p must not already exist in the study buddy."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void addArchivedTask(Task p) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(p);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a due soon task to the dueSoonTasks list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param p must not already exist in the study buddy."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task p) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (p.isDueSoon()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.add(p);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a module to the ModuleList."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            moduleList.add(module);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException ex) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            System.out.println(\"AddModule Failed, from studyBuddy.addModule()\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the task list."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (t.isDueSoon()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            addDueSoonTask(t);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.completeTask(target);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskName(target, newTaskName);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskDateTime(target, newDateTimes);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleInTask(Task target, Module module) throws ModuleCodeException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (moduleList.contains(module)) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tasks.setTaskMod(target, module);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleCodeException(\"Module does not exist in studyBuddy!\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    // public void collectTaskBasedOnMod(Module module) throws ModuleCodeException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //     ObservableList\u003cTask\u003e collectedTask \u003d tasks.filterTaskByMod(module);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //     int modIndex \u003d moduleList.indexOf(module);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //     Module originalModule \u003d moduleList.get(module.toString());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //    originalModule.setInternalTaskList(collectedTask);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return tasks.asUnmodifiableObservableList().size() + \" tasks\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archivedTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return tasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleList.getInternalList();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.moduleList.setModuleList(modules);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasModule(Module module) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleList.contains(module);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return tasks.hashCode();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof StudyBuddy // instanceof handles nulls"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 tasks.equals(((StudyBuddy) other).tasks));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 30,
      "souwmyaa": 59,
      "aegis-bot": 122,
      "wyt-sonia": 12,
      "-": 5,
      "gx-huang": 34
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/UserPrefs.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Path studyBuddyFilePath \u003d Paths.get(\"data\", \"taskList.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public UserPrefs() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setStudyBuddyFilePath(newUserPrefs.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyFilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddyFilePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddyFilePath \u003d studyBuddyFilePath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Objects.hash(guiSettings, studyBuddyFilePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 studyBuddyFilePath.equals(o.studyBuddyFilePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + studyBuddyFilePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 10,
      "wyt-sonia": 4,
      "-": 72
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/EmptyModule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Placeholder module for task with no modules allocated"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EmptyModule extends Module {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public EmptyModule() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(\"No Module Allocated\", \"O0000O\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/Module.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * packages task into various modules that the student have. Each module has list of task, taken from the main TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Identified by ModuleCode instead of ModuleName to minimise errors."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cTask\u003e internalTaskList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String moduleName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleCode moduleCode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Constructs a Module. Will check for any duplicates in the moduleList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleName"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module(String moduleName, String fullModuleCode) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Same as previous constructor, but a module without a name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module(String fullModuleCode) throws ModuleCodeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(\"O0000O\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"from Module(). ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * returns whether a Task is inside the internalList of this module."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toCheck"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean contains(Task toCheck) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toAdd"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws DuplicateTaskException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalTaskList.add(toAdd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes a task from the module list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toRemove"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws TaskNotFoundException"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (contains(toRemove)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalTaskList.remove(toRemove);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Compares moduleCode instead of moduleName."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param other object, possibly a module"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other instanceof Module) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ModuleCode otherModuleCode \u003d ((Module) other).moduleCode;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.moduleCode.equals(otherModuleCode) ? true : false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getModuleName() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleName;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleName(String moduleName) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ModuleCode getModuleCode() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleCode(String moduleCode) throws ModuleCodeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d new ModuleCode(moduleCode);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getInternalTaskList() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setInternalTaskList(ObservableList\u003cTask\u003e internalTaskList) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.internalTaskList \u003d internalTaskList;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Takes in an ObservableList of Task, filters it, then setInternalTaskList()."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param externalTaskList"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void filterAndSetInternalTaskList(ObservableList\u003cTask\u003e externalTaskList) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e collectedTasks \u003d externalTaskList.filtered(x-\u003e x.getModule().equals(this));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setInternalTaskList(collectedTasks);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return getModuleCode().toString();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 16,
      "souwmyaa": 1,
      "aegis-bot": 134
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/ModuleCode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * ModuleCode. Ensures that the module code keyed in matches the proper format. XX0000."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCode {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String postfix;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleCode(String fullModuleCode) throws ModuleCodeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.prefix \u003d parsePrefix(fullModuleCode);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.number \u003d parseNumber(fullModuleCode);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.postfix \u003d parsePostfix(fullModuleCode);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the {@code userInput} is module code."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static boolean isModuleCode(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean result \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parsePrefix(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parseNumber(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parsePostfix(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleCodeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * method to parse prefix from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static String parsePrefix(String input) throws ModuleCodeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!Character.isLetter(input.charAt(0))) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleCodeException(\"Module prefix not found.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            while (Character.isLetter(input.charAt(i))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                output +\u003d input.charAt(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return output.toUpperCase();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * method to parse number from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static int parseNumber(String input) throws ModuleCodeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String outputAsString \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            char character \u003d input.charAt(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Integer.parseInt(\"\" + character);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                outputAsString +\u003d character;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                //ignore"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (outputAsString.equals(\"\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleCodeException(\"Module number not found!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int output \u003d Integer.parseInt(outputAsString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * method to parse postfix from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static String parsePostfix(String input) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        char character \u003d input.charAt(input.length() - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Integer.parseInt(\"\" + character);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            output +\u003d character;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return output.toUpperCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPrefix() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int getNumber() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPostfix() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return postfix;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (object instanceof ModuleCode) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (this.getPrefix().equals(((ModuleCode) object).prefix)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 (this.getNumber() \u003d\u003d ((ModuleCode) object).number)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 this.getPostfix().equals(((ModuleCode) object).postfix)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix + String.format(\"%04d\", number) + postfix;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "aegis-bot": 106,
      "wyt-sonia": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/ModuleList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * List of Modules. Checks for duplicates. Will be stored in Json."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * To be executed every time whenever a module is added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return if there is a duplicate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean contains(Module module) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        final Module moduleForPredicate \u003d module;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FilteredList\u003cModule\u003e filteredList \u003d internalList.filtered((x) -\u003e x.equals(moduleForPredicate));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return filteredList.isEmpty() ? false : true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getInternalList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * checks for duplicate modules first, then add into the moduleList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Moves Empty module to the back of the internalList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module to be added to the ModuleList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Module module) throws ModuleCodeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (this.contains(module)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Duplicate modules\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.add(module);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            shiftEmptyModBack();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * relocates Empty Module to the back of the internalList if it exist."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void shiftEmptyModBack() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //check last mod for Empty Module"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (internalList.get(internalList.size() - 1).equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //Do nothing"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else { //if it is not empty"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (internalList.contains(new EmptyModule())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                int emptyIndex \u003d internalList.indexOf(new EmptyModule());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                swap(emptyIndex, emptyIndex + 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * swaps 2 elements in the internalList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param j"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void swap(int i, int j) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module firstMod \u003d internalList.get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module secondMod \u003d internalList.get(j);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(i, secondMod);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(j, firstMod);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes module from the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Module module) throws ModuleCodeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (this.contains(module)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.remove(module);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Module does not exist\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Retrieves a module with the original module name inside the moduleList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleCode"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws ModuleCodeException"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module get(String moduleCode) throws ModuleCodeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module moduleToFind \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (this.contains(moduleToFind)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d this.internalList.indexOf(moduleToFind);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.internalList.get(index);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new ModuleCodeException(\"Module Not Found\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e replacement) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int indexOf(Module module) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.indexOf(module);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 1,
      "aegis-bot": 115
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/exceptions/ModuleCodeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Exception for module code"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCodeException extends ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleCodeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The acceptable data and time format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int MINUTES_DIVISOR \u003d (1000 * 60);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int HOURS_DIVISOR \u003d (1000 * 60 * 60);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int DAYS_DIVISOR \u003d (1000 * 60 * 60 * 24);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int MINUTES_IN_WEEK \u003d (7 * 24 * 60);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime finishDateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DateFormat df \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Date dateObj \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private boolean duplicate \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task(Module module, TaskType taskType, String taskName, String taskDescription, double weight,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus taskStatus, LocalDateTime[] dateTimes, double estimatedTimeCost,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module; //not covered yet"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription; //not covered yet"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight; //not covered yet"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost; //not covered yet"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void updateCurrentTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTask\u003e getCurrentTasks() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return currentTasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module getModule() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModule(Module module) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (status) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"pending\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"finished\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.FINISHED;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public LocalDateTime getDueDate() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return getDateTimes()[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getTimeLeft() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String timeLeft \u003d \"due: \";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateObj \u003d new Date();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        long difference \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int daysBetween \u003d (int) (difference / DAYS_DIVISOR);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int hoursBetween \u003d ((int) (difference / HOURS_DIVISOR)) % 24;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int minsBetween \u003d ((int) (difference / MINUTES_DIVISOR)) % 60;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (daysBetween !\u003d 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (daysBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + daysBetween + \" day \";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + daysBetween + \" days \";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (hoursBetween \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return timeLeft;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (hoursBetween !\u003d 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (hoursBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + hoursBetween + \" hour \";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + hoursBetween + \" hours \";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (minsBetween !\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (minsBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + minsBetween + \" min \";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + minsBetween + \" mins \";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (daysBetween \u003d\u003d 0 \u0026\u0026 hoursBetween \u003d\u003d 0 \u0026\u0026 minsBetween \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            timeLeft \u003d timeLeft + \" now\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return timeLeft;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the tasks status accordingly."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void freshStatus() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.taskStatus \u003d TaskStatus.DUE_SOON;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.OVERDUE;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isAfter(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.PENDING)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the status of the task is expired."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if the status of the task is expired."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isStatusExpired() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean result \u003d false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isAfter(now) \u0026\u0026 this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon() \u0026\u0026 this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getFinishDateTime() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return finishDateTime;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setFinishDateTime(LocalDateTime finishDateTime) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d finishDateTime;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean isDuplicate() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return duplicate;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setDuplicate(boolean duplicate) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.duplicate \u003d duplicate;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskType(TaskType taskType) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskDescription(String taskDescription) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setWeight(double weight) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskStatus getTaskStatus() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskStatus \u003d\u003d null) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isStatusExpired()) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                freshStatus();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskStatus;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskStatus(TaskStatus taskStatus) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (dateTimes.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]) + \"-\" + TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public LocalDateTime[] getDateTimes() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return dateTimes;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //need to add the outOfRangeExceptionHandler"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setDateTimes(LocalDateTime[] dateTimes) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public double getEstimatedTimeCost() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return estimatedTimeCost;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEstimatedTimeCost(double estimatedTimeCost) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getCreationDateTime() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return creationDateTime;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setCreationDateTime(LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Checks if the task is due soon (next 7 days)."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return true if it is due soon, else false"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean isDueSoon() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateObj \u003d new Date();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        long difference \u003d 0;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        float minsBetween \u003d (difference / MINUTES_DIVISOR);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return minsBetween \u003c\u003d MINUTES_IN_WEEK \u0026\u0026 minsBetween \u003e\u003d 0;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return Objects.hash(module, taskType, taskName, taskDescription, weight, taskStatus, dateTimes);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * pending change"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This defines a stronger notion of equality between two tasks."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof Task)) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task otherTask \u003d (Task) other;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription())"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskStatus().equals(getTaskStatus());"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskString \u003d \"Task Name :\" + this.taskName + \"\\n\""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Code: \" + this.module.getModuleCode().toString() + \"\\n\""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Type: \" + this.getTaskType().toString() + \"\\n\""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Deadline/Duration: \" + this.getTimeString() + \"\\n\""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Description: \" + this.taskDescription + \"\\n\""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task weight: \" + this.weight + \"\\n\""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Estimated Time Cost: \" + this.estimatedTimeCost + \" hrs\\n\";"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Pending change"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both task of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This defines a weaker notion of equality between two tasks."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean isSameTask(Task otherTask) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (otherTask \u003d\u003d this) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask !\u003d null"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription());"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Compare tasks by deadline/ start date."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Comparison by task name is handled in sort command class."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int result \u003d 0;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d -1;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (!this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d 1;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.taskType.equals(t.taskType)) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskName.compareTo(t.taskName);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskType.compareTo(t.taskType);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 83,
      "aegis-bot": 168,
      "wyt-sonia": 127
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskField.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The fields of a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public enum TaskField {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NAME(\"Task name\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_TYPE(\"Task type\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    TASK_DATETIME(\"Task due date and time\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    TASK_MODULE(\"Task module to be modified\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final String label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskField(String label) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static TaskField getTaskFieldFromNumber(int number) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (number) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return TASK_NAME;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return TASK_TYPE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return TASK_DATETIME;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return TASK_MODULE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getFieldString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"1. Task name\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"2. Task type\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            + \"3. Task due date and time\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            + \"4. module which the task is assigned to\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 37,
      "aegis-bot": 7
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskNameContainsKeywordsPredicate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getTaskName(), keyword));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 31
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskStatus.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public enum TaskStatus {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    FINISHED,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    DUE_SOON,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    OVERDUE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTaskStatus\u003e getTaskStatusList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTaskStatus\u003e taskStatuses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(PENDING);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(FINISHED);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(DUE_SOON);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(OVERDUE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskStatuses;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static TaskStatus getStatus(String status) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        TaskStatus result \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"pending\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            result \u003d PENDING;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case \"finished\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            result \u003d FINISHED;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"due soon\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d DUE_SOON;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"overdue\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d OVERDUE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Converts a TaskStatus enum back into a string, primarily for printing purposes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return string, either \"pending\" or \"finished\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String convertToString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"pending\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"finished\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"due soon\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"overdue\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 29,
      "wyt-sonia": 36
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Assignment,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Quiz,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Presentation,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Meeting,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Exam,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Others;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static TaskType[] taskTypes \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assignment,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Quiz,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Presentation,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Meeting,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Exam,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Others"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType[] getTaskTypes() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskTypes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void setTaskTypes(TaskType[] taskTypes) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType.taskTypes \u003d taskTypes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getTypeString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"1. Assignment\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"5. Exam\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"6. Others\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType getType(String status) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType result \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"assignment\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Assignment;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Quiz;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"presentation\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Presentation;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"meeting\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Meeting;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"exam\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Exam;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"others\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Others;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 68
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/UniqueTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.user.Statistics;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class UniqueTaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return internalList.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if the list contains an equivalent task as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean contains(Task toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (contains(toAdd)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, editedTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes the equivalent task from the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(UniqueTaskList replacement) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of this list with {@code tasks}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (!tasksAreUnique(tasks)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof UniqueTaskList // instanceof handles nulls"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if {@code tasks} contains only unique tasks."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                if (tasks.get(i).isSameTask(tasks.get(j))) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Completes a task."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.contains(target)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            target.setStatus(\"finished\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String finishDateTimeString \u003d TimeParser.getDateTimeString(LocalDateTime.now());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            target.setFinishDateTime(TimeParser.parseDateTime(finishDateTimeString));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(index, target);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // log statistics"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            Statistics.recordCompletedTask(target);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task name."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskName(newTaskName);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task type"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskType(newTaskType);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task date time"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newDateTimes);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setDateTimes(newDateTimes);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Set module in task. Module will be checked for its existence outside this class"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * before this function is performed."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module a module for the task to be assigned to"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskMod(Task target, Module module) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(module);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        target.setModule(module);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"deadline / task start date\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Task::compareTo);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"task name\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getTaskName));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getCreationDateTime));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    // public ObservableList\u003cTask\u003e filterTaskByMod(Module module) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //     ObservableList\u003cTask\u003e taskListForModule \u003d internalList.filtered(x-\u003e x.getModule().equals(module));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //     return taskListForModule;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 48,
      "souwmyaa": 13,
      "aegis-bot": 152,
      "wyt-sonia": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/DuplicateTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DuplicateTaskException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public DuplicateTaskException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(\"Operation would result in duplicate tasks\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/user/CompleteCountList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * List that contains the count of completed task for each day"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class CompleteCountList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static List\u003cInteger\u003e completeList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static List\u003cInteger\u003e completeLateList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CompleteCountList () {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes an empty completeCount List"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeLateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeList.add(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeLateList.add(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the complete count at current day index"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the task is completed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void complete(int dayIndex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int currentCount \u003d completeList.get(dayIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentCount !\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeList.set(dayIndex, 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeList.set(dayIndex, currentCount + 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the completeLate count at current day index"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the task is completed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void completeLate(int dayIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int currentLateCount \u003d completeLateList.get(dayIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentLateCount !\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeLateList.set(dayIndex, 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeLateList.set(dayIndex, currentLateCount + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 54
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/user/Statistics.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.time.temporal.TemporalAdjusters.firstDayOfYear;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Usage statistics for the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static CompleteCountList completeCountList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Statistics() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList \u003d new CompleteCountList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Records the completed task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param completedTask the task that has just been completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void recordCompletedTask(Task completedTask) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime timeOfCompletion \u003d completedTask.getFinishDateTime();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d getDayIndex();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList.complete(dayIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime taskDueDate \u003d completedTask.getDueDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isLate(taskDueDate)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeCountList.completeLate(dayIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * utility method to get the number of days between two LocalDateTime"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param first  the first LocalDateTime"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param second the second LocalDateTime"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the absolute difference in number of days between the two LocalDateTime"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int getDaysBetween(LocalDateTime first, LocalDateTime second) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return (int) Math.abs(ChronoUnit.DAYS.between(first, second));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the current day, which is used as index for complete count list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the number of days from the start of year. 0 if the day is the start of year itself"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int getDayIndex() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime startOfYear \u003d now.with(firstDayOfYear());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return getDaysBetween(now, startOfYear);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * checks if the task is completed late"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dueDate date that the task is due on"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if the task is completed late."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static boolean isLate(LocalDateTime dueDate) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return ChronoUnit.DAYS.between(now, dueDate) \u003c 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 68
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/util/SampleDataUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains utility methods for populating {@code StudyBuddy} with sample data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\", \"CS2103T\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2101\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/04/2020\")};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime creationDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Ass 1\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, creationDateTime),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, creationDateTime),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, creationDateTime),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Meeting 1\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, creationDateTime)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static ReadOnlyStudyBuddy getSampleStudyBuddy() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy sampleSb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sampleSb.addTask(sampleTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sampleTasks.add(sampleTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task.updateCurrentTaskList(sampleTasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return sampleSb;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 5,
      "wyt-sonia": 27,
      "-": 12
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonAdaptedModule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Only stores ModuleName \u0026 ModuleCode. Omits internalList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * internalList will only extract from taskList when called for search by module."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * when program terminates, internalList in Module will be wiped to minimise confusion."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class JsonAdaptedModule {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(@JsonProperty(\"moduleName\") String moduleName,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                             @JsonProperty(\"moduleCode\") String moduleCode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(Module module) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d module.getModuleName();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module.getModuleCode().toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module toModelType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new Module(moduleName, moduleCode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 32
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonAdaptedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Jackson-friendly version of {@link Task}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "class JsonAdaptedTask {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskFinishDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double weight;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double estimatedTimeCost;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskCreationDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Constructs a {@code JsonAdaptedTask} with the given task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"taskType\") String taskType,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDateTime\") String taskDateTime,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"finishDateTime\") String taskFinishDateTime,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDescription\") String taskDescription,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"module\") String module, @JsonProperty(\"weight\") Double weight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"estimatedTimeCost\") Double estimatedTimeCost,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"status\") String status,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskCreationDateTime\") String taskCreationDateTime) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskFinishDateTime \u003d taskFinishDateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskCreationDateTime \u003d taskCreationDateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts a given {@code Task} into this class for Jackson use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(Task source) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String descString \u003d source.getTaskDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDescription \u003d descString.isBlank() ? \"\" : descString;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskName \u003d source.getTaskName();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDateTime \u003d source.getTimeString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskFinishDateTime \u003d source.getFinishDateTime() !\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ? TimeParser.getDateTimeString(source.getFinishDateTime())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        estimatedTimeCost \u003d source.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        status \u003d source.getTaskStatus().toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskType \u003d source.getTaskType().toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        weight \u003d source.getWeight();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode \u003d source.getModule().toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskCreationDateTime \u003d TimeParser.getDateTimeString(source.getCreationDateTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // for datetime"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] timeTerms \u003d taskDateTime.split(\"-\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int count \u003d timeTerms.length;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (timeTerms.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[1] \u003d TimeParser.parseDateTime(timeTerms[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime creationDateTime \u003d TimeParser.parseDateTime(taskCreationDateTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task data \u003d new Task(new Module(moduleCode), TaskType.getType(taskType),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskName, taskDescription, weight,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskStatus.getStatus(status), dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskFinishDateTime.isBlank()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime finishDateTime \u003d TimeParser.parseDateTime(taskFinishDateTime);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.setFinishDateTime(finishDateTime);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "aegis-bot": 4,
      "wyt-sonia": 100
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonSerializableStudyBuddy.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An Immutable StudyBuddy that is serializable to JSON format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "@JsonRootName(value \u003d \"studyBuddy\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class JsonSerializableStudyBuddy {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_ARCHIVED_TASK \u003d \"Archived contains duplicate task(s).\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MESSAGE_DUPLICATE_MODULES \u003d \"Module List contains duplicate module(s).\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_DUE_SOON_TASK \u003d \"Due soon list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e dueSoonTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Constructs a {@code JsonSerializableStudyBuddy} with the given persons."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonSerializableStudyBuddy(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.tasks.addAll(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Converts a given {@code ReadOnlyStudyBuddy} into this class for Jackson use."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableStudyBuddy}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonSerializableStudyBuddy(ReadOnlyStudyBuddy source) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.addAll(source.getArchivedList().stream()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.addAll(source.getTaskList().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this study buddy into the model\u0027s {@code StudyBuddy} object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (task.isStatusExpired()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.freshStatus();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : archivedTasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addArchivedTask(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (JsonAdaptedModule jsonAdaptedModule : modules) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Module module \u003d jsonAdaptedModule.toModelType();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (studyBuddy.hasModule(module)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULES);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addModule(module);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task.updateCurrentTaskList(new ArrayList\u003c\u003e(studyBuddy.getTaskList()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 31,
      "aegis-bot": 10,
      "wyt-sonia": 5,
      "-": 26,
      "gx-huang": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonStudyBuddyStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A class to access StudyBuddy data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonStudyBuddyStorage implements StudyBuddyStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonStudyBuddyStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonStudyBuddyStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return readStudyBuddy(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Similar to {@link #readStudyBuddy()}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Optional\u003cJsonSerializableStudyBuddy\u003e jsonStudyBuddy \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            filePath, JsonSerializableStudyBuddy.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!jsonStudyBuddy.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return Optional.of(jsonStudyBuddy.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        saveStudyBuddy(studyBuddy, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Similar to {@link #saveStudyBuddy(ReadOnlyStudyBuddy)}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddy);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableStudyBuddy(studyBuddy), filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 19,
      "-": 54
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonUserPrefsStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 5,
      "-": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface Storage extends StudyBuddyStorage, UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 3,
      "wyt-sonia": 1,
      "-": 23
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/StorageManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Manages storage of StudyBuddy data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StudyBuddyStorage studyBuddyStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StorageManager(StudyBuddyStorage studyBuddyStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddyStorage \u003d studyBuddyStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudyBuddy methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyStorage.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return readStudyBuddy(studyBuddyStorage.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyStorage.readStudyBuddy(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        saveStudyBuddy(studyBuddy, studyBuddyStorage.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddyStorage.saveStudyBuddy(studyBuddy, filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 15,
      "-": 56
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/StudyBuddyStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a storage for {@link StudyBuddy}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface StudyBuddyStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the file path of the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns StudyBuddy data as a {@link ReadOnlyStudyBuddy}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see #getStudyBuddyFilePath()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves the given {@link ReadOnlyStudyBuddy} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param studyBuddy cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see #saveStudyBuddy(ReadOnlyStudyBuddy)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/UserPrefsStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a storage for {@link UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves the given {@link ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 2,
      "-": 30
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/CalendarBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Calendar. Still under construction."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Will cleanup code."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String FXML \u003d \"Calendar.fxml\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CalendarBox.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private ObservableList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int calendarYear;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Month calendarMonth;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dueSoonPanelTitle;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label month;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label year;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private GridPane monthBox;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button prev;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button next;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarBox(ObservableList\u003cTask\u003e taskList, StackPane dueSoonListPanelPlaceholder, Label dueSoonPanelTitle) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.dueSoonListPanelPlaceholder \u003d dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.dueSoonPanelTitle \u003d dueSoonPanelTitle;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //reset data in panels for calendar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonPanelTitle.setText(\"Click on a date to see tasks\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.setBackground("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //generatecalendar"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        generateCalendar(localDate.getYear(), localDate.getMonth());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                generateCalendar(calendarYear, calendarMonth);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates a calendarBox with give year and month"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param calYear  calendar year"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param calMonth calendar month"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void generateCalendar(int calYear, Month calMonth) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        month.setText(calMonth.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        year.setText(String.valueOf(calYear));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarMonth \u003d calMonth;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarYear \u003d calYear;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Label label;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate newDate \u003d LocalDate.of(calYear, calMonth, 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //day of week of first day"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        int dayOfWeek \u003d newDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (int i \u003d 1, j \u003d 0; i \u003c\u003d newDate.lengthOfMonth(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (dayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate tempDate \u003d LocalDate.of(newDate.getYear(), newDate.getMonth(), i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            VBox temp \u003d new VBox();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Pane p \u003d new Pane();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            p.setBackground(new Background(new BackgroundFill(Color.WHEAT, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(p, dayOfWeek, j);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Label tempLbl \u003d new Label(i + \"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tempLbl.setPadding(new Insets(2, 2, 2, 4));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            temp.getChildren().add(tempLbl);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (taskDueDate.equals(tempDate)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (count \u003e 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                p.setBackground(new Background("
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.rgb(255, 157, 94), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Label dayTasksLabel \u003d new Label();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dayTasksLabel.setText(count + \" Task\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dayTasksLabel.setText(count + \" Tasks\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayTasksLabel.setPadding(new Insets(0, 0, 0, 10));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                temp.getChildren().add(dayTasksLabel);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (tempDate.equals(localDate)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                p.setBackground(new Background("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.rgb(118, 156, 206), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(temp, dayOfWeek, j);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dayOfWeek++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates calendar from previous month."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickPrevious() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        monthBox.getChildren().clear();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (calendarMonth.getValue() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear - 1, Month.DECEMBER);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear, this.calendarMonth.minus(1));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates calendar for next month."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickNext() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        monthBox.getChildren().clear();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (calendarMonth.getValue() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear + 1, Month.JANUARY);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear, this.calendarMonth.plus(1));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Home button. Generates calendar for current month."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickHome() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        monthBox.getChildren().clear();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        generateCalendar(localDate.getYear(), localDate.getMonth());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates task list when clicked on cell."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param event mouse click event"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickDate(javafx.scene.input.MouseEvent event) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Node clickedNode \u003d event.getPickResult().getIntersectedNode();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (clickedNode !\u003d monthBox) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Node parent \u003d clickedNode.getParent();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            while (parent !\u003d monthBox) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                clickedNode \u003d parent;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                parent \u003d clickedNode.getParent();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Integer colIndex \u003d GridPane.getColumnIndex(clickedNode);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Integer rowIndex \u003d GridPane.getRowIndex(clickedNode);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int firstDayOfWeek \u003d LocalDate.of(calendarYear, calendarMonth, 1)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                .getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (firstDayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                firstDayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                rowIndex--;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int date \u003d rowIndex * 7 + colIndex - firstDayOfWeek + 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate clickedDate \u003d LocalDate.of(calendarYear, calendarMonth, date);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            ObservableList\u003cTask\u003e taskByDay \u003d generateTaskList(clickedDate);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            TaskListPanel taskByDayPanel \u003d new TaskListPanel(taskByDay);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dueSoonPanelTitle.setText(\"Task for \" + clickedDate.toString() + \" :\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dueSoonListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dueSoonListPanelPlaceholder.getChildren().add(taskByDayPanel.getRoot());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e generateTaskList(LocalDate date) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UniqueTaskList taskByDay \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (taskDueDate.equals(date)) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                taskByDay.add(task);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return taskByDay.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "wyt-sonia": 13,
      "gx-huang": 212
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/CommandBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.ExitTaskInteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InvalidInputInteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.add.AddTaskInteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.add.CreateModuleInteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.delete.ClearTasksInteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.delete.DeleteDuplicateTaskInteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.delete.DeleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.ArchiveTaskInteractivePrompt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.CompleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.EditTaskInteractivePrompt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.sort.SortTaskInteractivePrompt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.FindTaskInteractivePrompt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.HelpInteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.ListTaskInteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.RefreshTaskInteractivePrompt;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String[] interactiveCommandTypes \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        {\"add\", \"edit\", \"delete\", \"archive\", \"done\", \"delete duplicates\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \"clear\", \"bye\", \"sort\", \"refresh\", \"help\", \"create mods\", \"find\", \"list\"};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePrompt currentInteractivePrompt;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // allow InteractivePrompt type with different case and space in front or behind"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String userInput \u003d commandTextField.getText().toLowerCase().trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (currentInteractivePrompt \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (userInput) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"add\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"edit\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"archive\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"delete duplicates\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"sort\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new SortTaskInteractivePrompt();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"create mods\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ExitTaskInteractivePrompt();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"refresh\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new ListTaskInteractivePrompt();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"clear\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new InvalidInputInteractivePrompt();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //currentInteractivePrompt could be null. Might need to create an ErrorInteractivePrompt to handle this."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //inserted NullPointerException e at the catch section"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            CommandResult commandResult \u003d commandExecutor.execute(currentInteractivePrompt, commandTextField.getText());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (commandResult !\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException | ParseException | NullPointerException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "         * @see Logic#execute(String)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult execute(InteractivePrompt currentInteractivePrompt, String commandText)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throws CommandException, ParseException;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 34,
      "souwmyaa": 20,
      "aegis-bot": 9,
      "wyt-sonia": 27,
      "-": 63,
      "gx-huang": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/DueSoonDisplay.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A ui for the due soon bar that is displayed in the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonDisplay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonDisplay.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TextArea dueSoonDisplay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonDisplay() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setFeedbackToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 26
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/DueSoonListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Panel containing the list of tasks due soon."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(DueSoonListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ListView\u003cTask\u003e dueSoonListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setItems(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code TaskCard}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        protected void updateItem(Task task, boolean empty) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            super.updateItem(task, empty);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (empty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(new DueSoonTaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 43,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/DueSoonTaskCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonTaskListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //@FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private Label Module;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label timeLeft;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //Module.setText(task.getModule().toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        timeLeft.setText(task.getTimeLeft());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        renderTask(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateTime.setText(\"\\tDeadline: \" + task.getTimeString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        creationDateTime.setText(\"\\tCreated: \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Applies different css calss to different task type and status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void renderTask(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (task.getTaskType()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!(other instanceof DueSoonTaskCard)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DueSoonTaskCard card \u003d (DueSoonTaskCard) other;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u0026\u0026 task.equals(card.task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 104
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/HelpWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String USERGUIDE_URL \u003d \"https://se-education.org/pendingupdate/UserGuide.html\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalStateException \u003cul\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                               if this method is called on a thread other than the JavaFX Application"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                               Thread."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if this method is called on the primary stage."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/ul\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "wyt-sonia": 5,
      "-": 96
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String ALL_TASK \u003d \"All Tasks\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String TITLE \u003d \"Study Buddy\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String DUE_SOON_TASK \u003d \"Task Due Soon\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MODULE \u003d \"Modules\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String ARCHIVED_TASK \u003d \"Archived Task\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String CALENDAR \u003d \"Calendar\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String TASK_SUMMARY \u003d \"Task Summary\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String PROFILE_PAGE \u003d \"Profile Page\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskListPanel taskListPanel;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskSummaryPanel taskSummaryPanel;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DueSoonListPanel dueSoonListPanel;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleListPanel moduleListPanel;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ProfilePage profilePage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox taskListHolder;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskListPanelPlaceholder;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane timeLeftbarPlaceholder;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskSummaryHolder;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private StackPane modulePaneHolder;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private StackPane profilePageHolder;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label taskListPanelTitle;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane taskListPanelTitleHolder;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dueListPanelTitle;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane dueSoonTaskListPanelTitleHolder;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label mainTitle;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane mainTitleHolder;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPanel \u003d new TaskSummaryPanel(logic.getFilteredTaskList(),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logic.getFilteredArchivedTaskList());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.getChildren().add(taskSummaryPanel.getRoot());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(false);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(false);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        //Profile page"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        profilePage \u003d new ProfilePage(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        profilePageHolder.getChildren().add(profilePage.getRoot());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        profilePageHolder.setVisible(false);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        profilePageHolder.setManaged(false);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList(), logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.getChildren().add(moduleListPanel.getRoot());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.setVisible(false);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.setManaged(false);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows the task summaries."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void handleShowTaskSummary() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskSummaryHolderView(true);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TASK_SUMMARY);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles showing the profile page"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProfile() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProfileHolderView(true);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setMainTitleText(PROFILE_PAGE);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Shows all task list in taskListHolder."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowAllTasks() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListHolderView(true);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTaskListTitleText(ALL_TASK);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        handleDueSoonTasks();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles task to be shown in TaskListHolder."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void handleDueSoonTasks() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListHolderView(true);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueListPanelTitle.setText(DUE_SOON_TASK);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles archived task to be shown in TaskListHolder."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowArchivedTasks() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListHolderView(true);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTaskListTitleText(ARCHIVED_TASK);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskListPanel archiveListPanel \u003d new TaskListPanel(logic.getFilteredArchivedTaskList());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(archiveListPanel.getRoot());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        handleDueSoonTasks();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles modules to be displayed in ModulesTabHolder."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleShowModules() {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleModTabView(true);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(MODULE);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles calendar to be shown in TaskListHolder."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowCalendar() {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListHolderView(true);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListPanelTitleView(false);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(CALENDAR);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarBox calendar \u003d new CalendarBox(logic.getFilteredTaskList(), dueSoonListPanelPlaceholder,"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dueListPanelTitle);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(calendar.getRoot());"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskListPanel getPersonListPanel() {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskListPanel;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel getDueSoonListPanel() {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonListPanel;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see Logic#execute(String)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private CommandResult executeCommand(InteractivePrompt currentInteractivePrompt, String commandText)"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws CommandException, ParseException {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt.setLogic(logic);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String reply \u003d currentInteractivePrompt.interact(commandText);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        resultDisplay.setFeedbackToUser(reply);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isQuit()) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            handleExit();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isEndOfCommand()) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new CommandResult(\"Set current interactive to null\", false, false);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Toggles list panels according to values assigned. Can add more if there are more windows required for display."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val1 toggles TaskListHolder"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val2 toggles TaskSummaryHolder"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val3 toggles ModuleTabHolder"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void customToggleHolders(boolean val1, boolean val2, boolean val3, boolean val4) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListHolderView(val1);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskSummaryHolderView(val2);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleModTabView(val3);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        toggleProfileHolderView(val4);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Toggles title according to values assigned. Can add more if there are more windows required for display."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val1 toggles MainTitle"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val2 toggles TaskList(Left side)"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void customToggleTitle(boolean val1, boolean val2/*, boolean val3*/) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(val1);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListPanelTitleView(val2);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //setDueSoonTaskListPanelTitleView(val3);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleAllTitle(boolean val) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        customToggleTitle(val, val);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleAllHoldersInvisible() {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        customToggleHolders(false, false, false, false);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskSummaryHolderView(boolean val) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(val);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(val);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskSummaryHolder, val);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskListHolderView(boolean val) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskListHolder, val);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleModTabView(boolean val) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(modulePaneHolder, val);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void toggleProfileHolderView(boolean val) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setPaneView(profilePageHolder, val);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleMainTitleView(boolean val) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(mainTitleHolder, val);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskListPanelTitleView(boolean val) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskListPanelTitleHolder, val);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleDueSoonTaskListPanelTitleView(boolean val) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(dueSoonTaskListPanelTitleHolder, val);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setTaskListTitleText(String text) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskListPanelTitle.setText(text);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setMainTitleText(String text) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        mainTitle.setText(text);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setPaneView(Pane pane, boolean val) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        pane.setVisible(val);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        pane.setManaged(val);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 37,
      "souwmyaa": 29,
      "aegis-bot": 149,
      "wyt-sonia": 51,
      "-": 158,
      "gx-huang": 23
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/ModCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * module for display"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String FXML \u003d \"ModCard.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public final Module module;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label moduleCode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label moduleName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModCard(Module module, int displayIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode.setText(module.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleName.setText(module.getModuleName());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof ModCard)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModCard card \u003d (ModCard) other;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleCode.getText().equals(card.moduleCode.getText())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 module.equals(card.module);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "aegis-bot": 47
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/ModuleListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ContentDisplay;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Tab;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * FXML switched to ModuleListPanel. Can show task under each module."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"ModuleListPanel.fxml\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e moduleObservableList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TabPane tabPane;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Tab overview;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ListView\u003cModule\u003e moduleListView;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList, ObservableList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleObservableList \u003d moduleList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        bindTabs(moduleList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleObservableList.addListener(new ListChangeListener\u003cModule\u003e() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Module\u003e c) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindTabs(moduleList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e c) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindTabs(moduleList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Bind tabs when tab list updated."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void bindTabs(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Tab overviewTab \u003d tabPane.getTabs().get(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tabPane.getTabs().clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tabPane.getTabs().add(overviewTab);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleObservableList.forEach(x -\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            x.filterAndSetInternalTaskList(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            String tabName;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (x.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                tabName \u003d \"No Module Allocated\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                tabName \u003d x.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Tab newTab \u003d new Tab(tabName);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (!x.getInternalTaskList().isEmpty()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                ListView\u003cTask\u003e taskListView \u003d new ListView\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                taskListView.setItems(x.getInternalTaskList());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                taskListView.setCellFactory(listView -\u003e new TaskListPanel.TaskListViewCell());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                taskListView.setPrefHeight(600);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newTab.setContent(taskListView);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Label emptyLabel \u003d new Label(\"No task in this module\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setWrapText(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setContentDisplay(ContentDisplay.CENTER);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setTextFill(Color.GRAY);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setFont(new Font(\"Arial\", 40));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                emptyLabel.setBackground(new Background("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.WHITE,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        new CornerRadii(0, 0, 10, 10, false),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        Insets.EMPTY)));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setPrefHeight(600);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                emptyLabel.prefWidthProperty().bind(tabPane.widthProperty());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newTab.setContent(emptyLabel);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tabPane.getTabs().add(newTab);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleListView.setItems(moduleList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Pending."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    class ModuleListViewCell extends ListCell\u003cModule\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         * pending."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         * @param module"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         * @param empty"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        protected void updateItem(Module module, boolean empty) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            super.updateItem(module, empty);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (empty || module \u003d\u003d null || module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                ModCard modcard \u003d new ModCard(module, getIndex() + 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setGraphic(modcard.getRoot());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "aegis-bot": 92,
      "wyt-sonia": 40
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/ProfilePage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.LineChart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Profile page that contains usage statistics"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ProfilePage extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String FXML \u003d \"ProfilePage.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ProfilePage.class);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ObservableList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private LineChart\u003cInteger, Integer\u003e profileLineChart;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ProfilePage(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                generateProfilePage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Sets up the line chart which shows the number of task completed over the week"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void setUpLineChart() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!profileLineChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            profileLineChart.getData().clear();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        profileLineChart.getYAxis().setLabel(\"Task completed\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        profileLineChart.getXAxis().setLabel(\"Day\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void generateProfilePage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 49
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/ResultDisplay.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the header of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ResultDisplay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"ResultDisplay.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextArea resultDisplay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public ResultDisplay() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFeedbackToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/StatusBarFooter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the footer of the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StatusBarFooter extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"StatusBarFooter.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label saveLocationStatus;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public StatusBarFooter(Path saveLocation) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/TaskCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskListCard.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label module;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label status;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (task.getModule().equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            module.setVisible(false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            module.setManaged(false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            module.setText(task.getModule().toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        status.setText(task.getTaskStatus().convertToString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTask(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateTime.setText(\"\\tDeadline: \" + task.getTimeString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        creationDateTime.setText(\"\\tCreated: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Applies different css calss to different task type and status."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (task.getTaskStatus()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"pending_status\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"done_status\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"due_soon_status\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"overdue_status\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (task.getTaskType()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!(other instanceof TaskCard)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskCard card \u003d (TaskCard) other;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 task.equals(card.task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "aegis-bot": 63,
      "wyt-sonia": 55
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/TaskListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ListView\u003cTask\u003e taskListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListView.setItems(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code TaskCard}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    static class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        protected void updateItem(Task task, boolean empty) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            super.updateItem(task, empty);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (empty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 1,
      "aegis-bot": 1,
      "wyt-sonia": 12,
      "-": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/TaskSummaryPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.LineChart;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.PieChart;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Panel containing the summary charts of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskSummaryPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskSummaryPanel.fxml\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e tempTasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e archivedTasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e aliveTasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private PieChart taskSummaryPieChart;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private AreaChart taskSummaryAreaChart;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private BarChart taskSummaryBarChart;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LineChart taskSummaryLineChart;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskSummaryPanel(ObservableList\u003cTask\u003e currentTaskList,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            ObservableList\u003cTask\u003e archivedTaskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        archivedTasks \u003d archivedTaskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        aliveTasks \u003d currentTaskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempTasks.addAll(currentTaskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempTasks.addAll(archivedTaskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpAreaChart();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpPieChart();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpBarChart();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpLineChart();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTaskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempTasks.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempTasks.addAll(currentTaskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempTasks.addAll(archivedTaskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpAreaChart();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpPieChart();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpBarChart();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setUpLineChart();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aim to visualize the portion of different type, status etc."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpPieChart() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryPieChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryPieChart.getData().clear();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (TaskStatus ts : TaskStatus.getTaskStatusList()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            long count \u003d tempTasks.stream().filter(t -\u003e t.getTaskStatus().equals(ts)).count();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryPieChart.getData().add(new PieChart.Data(ts.convertToString(), count));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPieChart.setTitle(\"Summary of Tasks\u0027 Status\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPieChart.getData().forEach(data -\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.nameProperty().bind("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Bindings.concat("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    data.getName(), \" : \", data.pieValueProperty().longValue()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                )"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            )"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        );"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aim to compare time estimated and actual time used."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpAreaChart() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryAreaChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryAreaChart.getData().clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series taskTypeDataSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series taskStatusDataSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskTypeDataSeries.setName(\"Task Type\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatusDataSeries.setName(\"Task Status\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cTaskType, Long\u003e taskTypeAndCounts \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(Task::getTaskType, Collectors.counting()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cTaskStatus, Long\u003e taskStatusAndCounts \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(Task::getTaskStatus, Collectors.counting()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskTypeAndCounts.forEach((type, count) -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskTypeDataSeries.getData().add(new XYChart.Data(type.name(), count));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatusAndCounts.forEach((status, count) -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskStatusDataSeries.getData().add(new XYChart.Data(status.convertToString(), count));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryAreaChart.getData().addAll(taskStatusDataSeries, taskTypeDataSeries);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aim to compare different module."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Pending update to make it show different modules/semesters."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpBarChart() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryBarChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryBarChart.getData().clear();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        HashMap\u003cString, XYChart.Series\u003e moduleDataSeries \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cString, Map\u003cTaskType, Long\u003e\u003e currentTaskTypeAndCountUnderModules \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getModule().getModuleCode().toString(),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Collectors.groupingBy(Task::getTaskType, Collectors.counting())"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTaskTypeAndCountUnderModules.forEach((moduleCode, typeAndCount) -\u003e {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            XYChart.Series series;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!moduleDataSeries.containsKey(moduleCode)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                moduleDataSeries.put(moduleCode, series);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series.setName(moduleCode);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series \u003d moduleDataSeries.get(moduleCode);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            typeAndCount.forEach((type, count) -\u003e {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series.getData().add(new XYChart.Data(type.name(), count));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cModule, Map\u003cTaskStatus, Long\u003e\u003e taskStatusAndCountUnderModules \u003d taskList.stream()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(Task::getModule,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Collectors.groupingBy(Task::getTaskStatus, Collectors.counting())));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatusAndCountUnderModules.forEach((module, statusAndCount)-\u003e{"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            XYChart.Series series \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            series.setName(module.getModuleName());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            moduleDataSeries.add(series);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            statusAndCount.forEach((status, count) -\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                series.getData().add(new XYChart.Data(status.convertToString(), count));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryBarChart.getData().addAll(moduleDataSeries.values());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Aims to show the changing of number of creation/ finishing/ due task of each day."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpLineChart() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryLineChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryLineChart.getData().clear();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryLineChart.getYAxis().setLabel(\"No of Tasks\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryLineChart.getXAxis().setLabel(\"Date \u0026 Time\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series creationInfoSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationInfoSeries.setName(\"Task creation count\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cLocalDate, Long\u003e creationInfoList \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getCreationDateTime().toLocalDate(), Collectors.counting()));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationInfoList.forEach((date, count) -\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            creationInfoSeries.getData().add(new XYChart.Data(TimeParser.getDateString(date), count));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series dueInfoSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueInfoSeries.setName(\"Task deadline/start date count\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cLocalDate, Long\u003e dueInfoList \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getDateTimes()[0].toLocalDate(), Collectors.counting()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueInfoList.forEach((date, count) -\u003e {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dueInfoSeries.getData().add(new XYChart.Data(TimeParser.getDateString(date), count));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        XYChart.Series finishInfoSeries \u003d new XYChart.Series();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        finishInfoSeries.setName(\"Task completed count\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Map\u003cLocalDate, Long\u003e finishInfoList \u003d archivedTasks.stream()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .collect(Collectors.groupingBy(t -\u003e t.getCreationDateTime().toLocalDate(), Collectors.counting()));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        finishInfoList.forEach((date, count) -\u003e {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            finishInfoSeries.getData().add(new XYChart.Data(TimeParser.getDateString(date), count));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryLineChart.getData().addAll(creationInfoSeries, dueInfoSeries, finishInfoSeries);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 1,
      "wyt-sonia": 212
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * API of UI component"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Starts the UI (and the App)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    void start(Stage primaryStage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/UiManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/study_buddy.png\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/StudyBuddyTheme.css\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 2,
      "wyt-sonia": 21,
      "-": 60
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/UiPart.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Resource folder where FXML files are stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, null);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #UiPart(URL)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL and root object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #UiPart(URL, Object)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the root object of the scene graph of this UiPart."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public T getRoot() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads the object hierarchy from a FXML document."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param location Location of the FXML document."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root     Specifies the root of the object hierarchy."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadFxmlFile(URL location, T root) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(location);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "wyt-sonia": 17,
      "-": 74
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/ExitTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.EXIT_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ExitTaskCommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_NO_EXIT_MSG \u003d \"Thank you for staying!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Exit successfully!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d EXIT_TASK;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"Are you sure you want to quit?\\n \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Please press enter yes if you would like to close the application.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ExitTaskCommandException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setQuit(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_NO_EXIT_MSG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 91
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public abstract class InteractivePrompt {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isQuit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isEndOfCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected InteractivePromptType interactivePromptType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected String reply;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractivePrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isQuit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isEndOfCommand \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public abstract String interact(String userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * ends the interaction"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param reply message to be displayed to the user upon end of interaction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setEndOfCommand(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // empty"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // empty"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // empty"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isQuit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isQuit;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setQuit(boolean quit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isQuit \u003d quit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setLogic(Logic logic) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEndOfCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEndOfCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEndOfCommand(boolean endOfCommand) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isEndOfCommand \u003d endOfCommand;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractivePromptType getInteractivePromptType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return interactivePromptType;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Handles the quit and back commands"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput   the input given by the user. This should be checked to be either quit or back."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param quitMessage the message that is displayed upon quitting"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the reply to user"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleQuitAndBack(String userInput, String quitMessage) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            endInteract(quitMessage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * checks if the userInput is quit or back"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if the userInput is quit or back, false otherwise"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean isQuitOrBack(String userInput) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return userInput.equals(\"quit\") || userInput.equals(\"back\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 40,
      "aegis-bot": 5,
      "wyt-sonia": 51
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InteractivePromptTerms.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Terms used in Interactive Prompt to indicate the stage in the sequence of interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public enum InteractivePromptTerms {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    INIT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_NAME,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TASK_INDEX,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_TYPE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DATETIME,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DESCRIPTION,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_MODULE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_WEIGHT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_ESTIMATED_TIME_COST,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_NAME,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_CODE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SORT_KEYWORD,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    READY_TO_EXECUTE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ADD_DUPLICATE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for find"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    FIND_KEYWORD,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for edit"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NUMBER,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_FIELD,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    NEW_VALUE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 2,
      "aegis-bot": 3,
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InteractivePromptType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum InteractivePromptType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ADD_TASK,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    EDIT_TASK,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    EXIT_TASK,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    DELETE_TASK,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ARCHIVE_TASK,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DELETE_DUPLICATE_TASK,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    COMPLETE_TASK,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DUE_SOON_TASK,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CREATE_MODULE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    SORT_TASK,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    INVALID_MSG,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    FIND_TASK,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    LIST_TASK,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CLEAR_TASK"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 4,
      "aegis-bot": 3,
      "wyt-sonia": 10,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InvalidInputInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.INVALID_MSG;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a InvalidInputInteractivePrompt which is designed to handle invalid input from user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Help message will be provided when invalid message caught."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InvalidInputInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    static final String HELP_MSG \u003d \"Please enter a valid command option.\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"1. add  2. delete  3. edit  4. bye  5. sort  6. find  7. done  8. delete duplicates  \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"9. sort  10. archive  11. help  12. list  13. clear\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InvalidInputInteractivePrompt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d INVALID_MSG;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d HELP_MSG;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 56
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/add/AddTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.ADD_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.AddTaskCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.AddTaskCommandParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A interactive prompt for adding new task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task added successfully!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_DUPLICATE_MSG \u003d \"Task will not be added! Key in your next command :)\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from add task command.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String moduleListString \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isModuleTried \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d ADD_TASK;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.task \u003d new Task();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.modules \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"Please choose a Module for this task or press enter to skip.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"Index number and module code are both acceptable.\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"The Modules available are: \\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.modules \u003d logic.getFilteredModuleList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            modules.forEach(m -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                counter.getAndAdd(1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply +\u003d counter + \".\" + m.getModuleCode() + \" \" + m.getModuleName() + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            moduleListString \u003d this.reply;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_MODULE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             * TEMPORARY PLACEHOLDER TO ENABLE FILE SAVE."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             * REMOVE task.setAttribute once you\u0027ve create methods to handle these...."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             * By default, Task will go to Module code AA0000. To add to a specific module, use other commands."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "             */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            task.setStatus(\"pending\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setTaskDescription(\"No Description\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            task.setWeight(0.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setEstimatedTimeCost(0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Module module \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank() \u0026\u0026 !isModuleTried) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    module \u003d new EmptyModule();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (userInput.isBlank() \u0026\u0026 isModuleTried) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    isModuleTried \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    module \u003d AddTaskCommandParser.parseModule(userInput, modules);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setModule(module);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.TASK_NAME;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The module has been set as: \" + module.getModuleCode() + \" \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + module.getModuleName() + \"\\n\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please enter the task name.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isModuleTried \u003d false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d e.getErrorMessage() + \"\\n\\n\" + moduleListString;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                userInput \u003d AddTaskCommandParser.parseName(userInput);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The name of task is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please choose the task type:\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + TaskType.getTypeString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setTaskName(userInput);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.TASK_TYPE;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please enter the task name.\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskType taskType \u003d AddTaskCommandParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setTaskType(taskType);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The type of task has been set to: \" + taskType.toString() + \".\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please enter the deadline with format: \";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (taskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.reply +\u003d \"HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.reply +\u003d \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new AddTaskCommandException(\"wrongIndexFormat\")).getErrorMessage();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LocalDateTime[] dateTimes \u003d AddTaskCommandParser.parseDateTime(userInput, task.getTaskType());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setDateTimes(dateTimes);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    userInput \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    userInput \u003d TimeParser.getDateTimeString(dateTimes[0])"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The date and time is set to: \" + userInput + \"\\n\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Press enter again to add the task:\\n\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK INFO \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + task.toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setCreationDateTime(LocalDateTime.now());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                AddTaskCommand addTaskCommand \u003d new AddTaskCommand(task);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(addTaskCommand);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (task.isDuplicate()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    reply \u003d \"This is a duplicate task. Are you sure you would like to proceed?\\n\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please enter yes or no.\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.ADD_DUPLICATE;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case ADD_DUPLICATE:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                AddTaskCommand addDuplicateTaskCommand \u003d new AddTaskCommand(task);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    logic.executeCommand(addDuplicateTaskCommand);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } catch (CommandException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else if (userInput.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_DUPLICATE_MSG);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d (new AddTaskCommandException(\"wrongDuplicateFormat\")).getErrorMessage();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_WEIGHT under construction"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_DESCRIPTION under construction"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //TASK_ESTIMATED_TIME_COST under construction"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 14,
      "souwmyaa": 29,
      "aegis-bot": 9,
      "wyt-sonia": 191,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/add/CreateModuleInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.CreateModCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.AddTaskCommandParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddTaskCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleCodeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * An interactive prompt for creating modules."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModuleInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from create mod command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModuleInteractivePrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CREATE_MODULE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d new Module();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d \"Please key in the name of the module that you want to create\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.MODULE_NAME;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_NAME:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                userInput \u003d AddTaskCommandParser.parseName(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                this.reply \u003d \"The name of module is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        + \"Now key in your module code\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                module.setModuleName(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.MODULE_CODE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (AddTaskCommandException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d \"Please write something as the name of your module.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_CODE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                module.setModuleCode(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                this.reply \u003d \"Module Code: \" + module.toString() + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        + \"Click \u0027Enter\u0027 again to confirm your changes\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (ModuleCodeException ex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d \"Please key in your module code to include a prefix, a number, then a postfix (Optional).\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        + \"E.g. A1\\n        BT102     \\n        CS77777X\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CreateModCommand createModCommand \u003d new CreateModCommand(module);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(createModCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d \"Module created! Key in your next command :)\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                endInteract(reply);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (CommandException ex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getLocalizedMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 11,
      "souwmyaa": 1,
      "aegis-bot": 91
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/delete/ClearTasksInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ClearTasksCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Tasks cleared successfully!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully cleared all tasks.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ClearTasksInteractivePrompt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CLEAR_TASK;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d \"Please press enter to clear all your tasks.\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \" Else enter quit to go back.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                ClearTasksCommand clearTaskCommand \u003d new ClearTasksCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(clearTaskCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 82,
      "aegis-bot": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/delete/DeleteDuplicateTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.DELETE_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.DeleteDuplicateTaskCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteDuplicateTaskCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Duplicated task deleted successfully!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from delete duplication command.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteDuplicateTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DELETE_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The duplicate tasks will be deleted\\n \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DeleteDuplicateTaskCommandException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DeleteDuplicateTaskCommand deleteDuplicateTaskCommand \u003d new DeleteDuplicateTaskCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(deleteDuplicateTaskCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 83,
      "wyt-sonia": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/delete/DeleteTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.DELETE_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.DeleteTaskCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task deleted successfully!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from delete task command.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DELETE_TASK;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d \"Please enter the index number of task you wish to delete.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new DeleteTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName() + \" will be deleted. \\n \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new DeleteTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DeleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(deleteTaskCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 85,
      "aegis-bot": 1,
      "wyt-sonia": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/ArchiveTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.ARCHIVE_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ArchiveTaskCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task archived successfully!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from archive command.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d ARCHIVE_TASK;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.reply \u003d \"Please enter the index number of task you wish to archive.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d \"The task at index \" + userInput + \" will be archived. \\n \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (ArchiveTaskCommandException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                ArchiveTaskCommand archiveTaskCommand \u003d new ArchiveTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(archiveTaskCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 2,
      "wyt-sonia": 8,
      "gx-huang": 87
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/CompleteTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.COMPLETE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.CompleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A interactive prompt for completing task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task marked as completed successfully!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from complete task command.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d COMPLETE_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d \"Please enter the index number of task you wish to mark as done.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d \"The task at index \" + userInput + \" will be mark as Done. \\n \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (DeleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(completeTaskCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 2,
      "aegis-bot": 51,
      "wyt-sonia": 7
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/EditTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.EDIT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.EditTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.EditTaskCommandParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.EditTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Interactive prompt for editing tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Task edited successfully\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from the edit task command\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TaskField taskField;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d EDIT_TASK;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isQuitOrBack(userInput)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleQuitAndBack(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleEdit(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles the sequence of commands for edit"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleEdit(String userInput) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please enter the index of the task that you wish to edit.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_NUMBER;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NUMBER:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.taskNumber \u003d parseTaskNumber(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_FIELD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.taskField \u003d parseTaskFieldNumber(userInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case NEW_VALUE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleNewValue(userInput);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Creates and executes an edit command, with the new values provided by the user"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleNewValue(String userInput) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Index taskIndex \u003d Index.fromZeroBased(taskNumber - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(taskIndex, taskField);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean parseSuccess \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String successMessage \u003d END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            switch (taskField) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TASK_NAME:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String newName \u003d EditTaskCommandParser.parseName(userInput);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                editTaskCommand.provideNewTaskName(newName);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TASK_TYPE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                TaskType newTaskType \u003d EditTaskCommandParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                editTaskCommand.provideNewTaskType(newTaskType);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                successMessage \u003d \"The type of task is successfully changed to: \" + newTaskType + \".\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TASK_DATETIME:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                LocalDateTime[] newDateTimes \u003d EditTaskCommandParser.parseDateTime(userInput);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                editTaskCommand.provideNewDateTime(newDateTimes);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            case TASK_MODULE:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Module newModule \u003d EditTaskCommandParser.parseModule(userInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                editTaskCommand.provideNewModule(newModule);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (EditTaskCommandException ex) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            parseSuccess \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (parseSuccess) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                logic.executeCommand(editTaskCommand);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                endInteract(successMessage);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } catch (java.text.ParseException | CommandException ex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * parses task number"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user input for task number"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return an int of task number"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int parseTaskNumber(String userInput) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean isParseSuccessful \u003d true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskNum \u003d -1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskNum \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (taskNum \u003e Task.getCurrentTasks().size() || taskNum \u003c 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new ParseException(\"task number not in range\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (NumberFormatException | ParseException ex) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isParseSuccessful \u003d false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isParseSuccessful) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please choose the field that you wish to edit in task number \" + taskNum + \".\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + TaskField.getFieldString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_FIELD;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // prompt for a new value"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please choose a valid task number.\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_NUMBER;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * parses the task field"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput userInput for task number"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a TaskField"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskField parseTaskFieldNumber(String userInput) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean isParseSuccessful \u003d true;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        TaskField taskField \u003d null;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            int taskFieldNumber \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (taskFieldNumber \u003e 4 || taskFieldNumber \u003c 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new ParseException(\"task field number not in range\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskField \u003d TaskField.getTaskFieldFromNumber(taskFieldNumber);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (NumberFormatException | ParseException ex) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isParseSuccessful \u003d false;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isParseSuccessful) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            assert (taskField !\u003d null);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d getTaskFieldMessage(taskField);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.NEW_VALUE;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // prompt for a new value"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please choose a valid task field index\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_FIELD;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskField;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String getTaskFieldMessage(TaskField taskField) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"You are now editing the \" + taskField.getLabel() + \"field\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"Please enter the new task name.\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"Please choose the task type:\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"Please enter the deadline with format: \""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            result +\u003d \"Please enter the module code that you wish to assign to this task.\\n\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                + \"You can find all the modules available under Modules/Show Modules in the menu bar above.\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 191,
      "souwmyaa": 3,
      "aegis-bot": 16,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/sort/SortTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.SORT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.sort.SortTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.SortTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A interactive prompt for sorting task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task sorted successfully!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from sort task command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String[] sort_option \u003d {\"Deadline / Task Start Date\", \"Task Name\", \"Creation DateTime\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int option;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d SORT_TASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"Please choose the sort keyword: \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"1. Deadline / Task Start Date\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"2. Task Name\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"3. Creation Date \u0026 Time\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.SORT_KEYWORD;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case SORT_KEYWORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                option \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (option \u003e 3 || option \u003c\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new SortTaskCommandException(\"invalidOptionRangeError\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task  will be sorted by \" + sort_option[option - 1] + \". \\n \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \" Please click enter again to check the sorted list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new DeleteTaskCommandException(\"wrongOptionFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (SortTaskCommandException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                SortTaskCommand sortTaskCommand \u003d new SortTaskCommand(sort_option[option - 1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(sortTaskCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 2,
      "wyt-sonia": 95
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/FindTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.FIND_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.FindTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * A interactive prompt for finding tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here are the list of tasks matching the keyword:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from find task command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String KEYWORD_PROMPT \u003d \"Please type in a keyword that you want to search for.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String userKeyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d FIND_TASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (userInput.equals(\"quit\") || userInput.equals(\"back\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleQuitAndBack(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleFind(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Handles the sequence of interactive find commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the input entered by the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the reply to the user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleFind(String userInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.FIND_KEYWORD;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case FIND_KEYWORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            userKeyword \u003d userInput;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d getConfirmationPrompt(userKeyword);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String trimmedArgs \u003d userKeyword.trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new ParseException(\"Keyword cannot be empty string\", 0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] userKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                TaskNameContainsKeywordsPredicate pred \u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    new TaskNameContainsKeywordsPredicate(Arrays.asList(userKeywords));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                FindTaskCommand findTaskCommand \u003d new FindTaskCommand(pred);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                logic.executeCommand(findTaskCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getConfirmationPrompt(String userKeyword) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"You are searching for the tasks containing \" + userKeyword + \". \\n \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"Please click enter again to view the searched list.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getKeywordPrompt() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getQuitMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return QUIT_COMMAND_MSG;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 91
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/HelpInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.HELP;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The interactive prompt for the help command. Returns the help message immediately"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class HelpInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        \"Here are the list of available commands:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"1. add  2. delete  3. edit  4. bye  5. sort  6. find  7. done  8. delete duplicates  \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            + \"9. sort  10. archive  11. help  12. list  13. clear 14. create mods\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + System.lineSeparator() + System.lineSeparator()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"User Guide: https://ay1920s2-cs2103t-w16-3.github.io/main/UserGuide.html\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public HelpInteractivePrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d HELP;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getHelpMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns the help message to the user immediately"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the help keyword"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the help message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 38,
      "aegis-bot": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/ListTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.ListTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * InteractivePrompt to list the tasks. This is useful after a Find command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here is the complete list of tasks:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ListTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.LIST_TASK;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        displayList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * displays the complete list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ListTaskCommand listTaskCommand \u003d new ListTaskCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            logic.executeCommand(listTaskCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // do nothing, this block should not be reached"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 40
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/RefreshTaskInteractivePrompt.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Logic of implementation:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * IP will handle all interaction btw user and the window to get the final version of command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * - FSM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parser will handle to parsing of the command and create a command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * command will execute the action"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * server display the response if needed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.DUE_SOON_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.RefreshCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DueSoonRefreshCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * pending."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class RefreshTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String END_OF_COMMAND_MSG \u003d \"Refreshed tasks\u0027 status and tasks due soon list is updated!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from refresh command.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public RefreshTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DUE_SOON_TASK;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.equals(\"quit\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The tasks list will be refreshed.\\n \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DueSoonRefreshCommandException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                RefreshCommand dueSoonRefreshCommand \u003d new RefreshCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(dueSoonRefreshCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interruptInteract() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void back() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void next() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * pending."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String dateTime() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 82,
      "wyt-sonia": 11
    }
  },
  {
    "path": "src/main/resources/view/Calendar.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox styleClass\u003d\"calender_panel\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cHBox alignment\u003d\"CENTER\" minHeight\u003d\"40.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton fx:id\u003d\"prev\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickPrevious\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                styleClass\u003d\"calender_btn\" text\u003d\"Previous\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"month\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"42.0\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "               styleClass\u003d\"calender_lbl_lg\" text\u003d\"Month\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"year\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"42.0\" styleClass\u003d\"calender_lbl_lg\" text\u003d\"Year\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton fx:id\u003d\"next\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickNext\" styleClass\u003d\"calender_btn\" text\u003d\"Next\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton contentDisplay\u003d\"RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickHome\" styleClass\u003d\"calender_btn\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                text\u003d\"Current Month\" GridPane.columnIndex\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"20.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cGridPane prefHeight\u003d\"30.0\" prefWidth\u003d\"790.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"15.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Sunday\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"0\" GridPane.halignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Monday\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"1\"/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Tuesday\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Wednesday\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"3\"/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Thursday\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Friday\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"Saturday\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   GridPane.columnIndex\u003d\"6\"/\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cGridPane fx:id\u003d\"monthBox\" hgap\u003d\"5.0\" onMouseClicked\u003d\"#onClickDate\" prefHeight\u003d\"375\" prefWidth\u003d\"790.0\" vgap\u003d\"5.0\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "              BorderPane.alignment\u003d\"CENTER\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\"/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 78,
      "gx-huang": 35
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"40.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "               promptText\u003d\"Enter command here...\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TextField\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/DueSoonListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"dueSoonListView\"  maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/resources/view/DueSoonTaskListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" rowValignment\u003d\"TOP\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"timeLeft\" styleClass\u003d\"due_soon_status\" text\u003d\"\\$timeLeft\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                            \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u003cRowConstraints/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 61,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/resources/view/HelpWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 36
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"550\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Study Buddy\" type\u003d\"javafx.stage.Stage\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cImage url\u003d\"@/images/study_buddy.png\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cURL value\u003d\"@StudyBuddyTheme.css\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cVBox id\u003d\"mainContainer\" maxWidth\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Study Buddy\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowAllTasks\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"Dashboard\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"Exit\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"My Tasks\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowAllTasks\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"All Tasks\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowArchivedTasks\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Archived Tasks\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleDueSoonTasks\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"Due Soon Task\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Modules\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowModules\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Show Modules\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"helpMenuItem1\" mnemonicParsing\u003d\"false\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"Create\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"helpMenuItem11\" mnemonicParsing\u003d\"false\" style\u003d\"-fx-font-size: 10pt;\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                  text\u003d\"Edit\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Statistics\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"taskSummaryEntry\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowTaskSummary\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Task Summary\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"usageSummaryEntry\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowProfile\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Usage Summary\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Calendar\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowCalendar\" text\u003d\"Display\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Menu\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cgraphic\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003cLabel fx:id\u003d\"ProfileMenuLabel\" text\u003d\"Profile\" onMouseClicked\u003d\"#handleShowProfile\"/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003c/graphic\u003e\u003c/Menu\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cPane fx:id\u003d\"mainTitleHolder\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"530.0\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                      prefWidth\u003d\"${mainTitleHolder.parent.width}\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                      style\u003d\"-fx-background-color: rgba(255, 255, 255, 0.9); -fx-background-radius: 10;\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                      VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"mainTitle\" alignment\u003d\"CENTER\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"540.0\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               prefWidth\u003d\"${mainTitleHolder.parent.width}\" style\u003d\"-fx-text-fill: rgba(123, 87, 69, 1);\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               styleClass\u003d\"app_brand\" text\u003d\"Study Buddy\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Pane\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox fx:id\u003d\"taskListHolder\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                      maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox fx:id\u003d\"taskList\" maxHeight\u003d\"560.0\" maxWidth\u003d\"1200\" minWidth\u003d\"340\" prefHeight\u003d\"300.0\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cPane fx:id\u003d\"taskListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                              style\u003d\"-fx-background-color: rgba(256,256,256,1); -fx-background-radius: 10 10 0 0;\"\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cLabel fx:id\u003d\"taskListPanelTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       prefHeight\u003d\"40.0\" prefWidth\u003d\"${taskListPanelTitleHolder.width}\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       styleClass\u003d\"sub_header\" text\u003d\"All Tasks\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefWidth\u003d\"700.0\" HBox.hgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                   VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox fx:id\u003d\"dueSoonList\" maxHeight\u003d\"560.0\" minWidth\u003d\"200\" prefWidth\u003d\"600\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cPane fx:id\u003d\"dueListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                              prefWidth\u003d\"${dueListPanelTitleHolder.parent.width}\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                              style\u003d\"-fx-background-color: rgba(256,256,256,1); -fx-background-radius: 10 10 0 0;\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cLabel fx:id\u003d\"dueListPanelTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       ellipsisString\u003d\"\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${dueListPanelTitleHolder.width}\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       styleClass\u003d\"sub_header\" text\u003d\"Task Due Soon\" textAlignment\u003d\"CENTER\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       textOverrun\u003d\"CLIP\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"dueSoonListPanelPlaceholder\" prefWidth\u003d\"${mainTitle.parent.width}\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                   HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cStackPane fx:id\u003d\"profilePageHolder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cStackPane fx:id\u003d\"taskSummaryHolder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cStackPane fx:id\u003d\"modulePaneHolder\" prefWidth\u003d\"${mainTitle.width}\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"11.0\" right\u003d\"11.0\" top\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets bottom\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cVBox\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               minHeight\u003d\"120.0\" prefHeight\u003d\"200.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets/\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                               styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"NEVER\"/\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 11,
      "souwmyaa": 5,
      "aegis-bot": 15,
      "wyt-sonia": 112,
      "-": 33,
      "gx-huang": 2
    }
  },
  {
    "path": "src/main/resources/view/ModCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"76.0\" prefWidth\u003d\"304.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "      \u003cFlowPane alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel fx:id\u003d\"moduleName\" alignment\u003d\"TOP_LEFT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"31.0\" prefWidth\u003d\"298.0\" text\u003d\"\\$moduleName\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cInsets left\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                  \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel fx:id\u003d\"moduleCode\" prefHeight\u003d\"37.0\" prefWidth\u003d\"304.0\" text\u003d\"\\\\$moduleCode\" textFill\u003d\"#686868\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cInsets left\u003d\"5.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "      \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 22,
      "aegis-bot": 7
    }
  },
  {
    "path": "src/main/resources/view/ModuleListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox maxHeight\u003d\"490.0\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"1400\" fillWidth\u003d\"true\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cTabPane fx:id\u003d\"tabPane\" stylesheets\u003d\"@StudyBuddyTheme.css\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003ctabs\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cTab fx:id\u003d\"overview\" text\u003d\"Overview\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cListView fx:id\u003d\"moduleListView\" prefWidth\u003d\"600\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/tabs\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 24
    }
  },
  {
    "path": "src/main/resources/view/ProfilePage.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      \u003cTabPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        \u003ctabs\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "          \u003cTab text\u003d\"Statistics\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "              \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "          \u003c/Tab\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "          \u003cTab text\u003d\"Productivity\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "              \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "          \u003c/Tab\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        \u003c/tabs\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 24
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "           xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cPane maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cHBox fx:id\u003d\"resultPane\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  prefWidth\u003d\"${resultPane.parent.width}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" maxHeight\u003d\"150.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              prefHeight\u003d\"${resultPane.parent.height}\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cImageView fitHeight\u003d\"120.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                               HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cimage\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cImage url\u003d\"@../images/SB.png\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/image\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/Pane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13,
      "wyt-sonia": 15,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/StatusBarFooter.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/resources/view/TaskListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" rowValignment\u003d\"TOP\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         \u003cLabel fx:id\u003d\"module\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Module\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "               \u003cFont size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "               \u003cInsets /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "               \u003cInsets left\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         \u003c/Label\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 14,
      "wyt-sonia": 60
    }
  },
  {
    "path": "src/main/resources/view/TaskListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/TaskSummaryPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.AreaChart?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.BarChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.LineChart?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.PieChart?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"498.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTabPane tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003ctabs\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Pie Chart\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cPieChart fx:id\u003d\"taskSummaryPieChart\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Area Chart\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cAreaChart fx:id\u003d\"taskSummaryAreaChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Bar Chart\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cBarChart fx:id\u003d\"taskSummaryBarChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/BarChart\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Line Chart\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLineChart fx:id\u003d\"taskSummaryLineChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/LineChart\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/tabs\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 58
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/AppParametersTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParametersTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ParametersStub parametersStub \u003d new ParametersStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AppParameters expected \u003d new AppParameters();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validConfigPath_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", \"config.json\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        expected.setConfigPath(Paths.get(\"config.json\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_nullConfigPath_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidConfigPath_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", \"a\\0\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        expected.setConfigPath(null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class ParametersStub extends Application.Parameters {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cString\u003e getRaw() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"should not be called\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cString\u003e getUnnamed() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"should not be called\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public Map\u003cString, String\u003e getNamed() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return Collections.unmodifiableMap(namedParameters);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 57
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/ConfigTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toString_defaultObject_stringReturned() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String defaultConfigAsString \u003d \"Current log level : INFO\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Preference file Location : preferences.json\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(defaultConfigAsString, new Config().toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equalsMethod() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Config defaultConfig \u003d new Config();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(defaultConfig);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(defaultConfig.equals(defaultConfig));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 26
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/VersionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class VersionTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionConstructor_correctParameter_valueAsExpected() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(19, 10, 20, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(19, version.getMajor());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(10, version.getMinor());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(20, version.getPatch());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(true, version.isEarlyAccess());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionToString_validVersion_correctStringRepresentation() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // boundary at 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V0.0.0ea\", version.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        // normal values"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(4, 10, 5, false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V4.10.5\", version.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // big numbers"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(100, 100, 100, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V100.100.100ea\", version.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionComparable_validVersion_compareToIsCorrect() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Version one;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Version another;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests equality"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003d\u003d 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(11, 12, 13, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(11, 12, 13, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003d\u003d 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different patch"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 5, false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different minor"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 5, 0, false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different major"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(10, 0, 0, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests high major vs low minor"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(10, 0, 0, true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 1, 0, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests high patch vs low minor"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 10, false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 1, 0, false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests same major minor different patch"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, false);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access vs not early access on same version number"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access lower version vs not early access higher version compare by version number first"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, false);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access higher version vs not early access lower version compare by version number first"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionComparable_validVersion_hashCodeIsCorrect() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(100, 100, 100, true);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(100100100, version.hashCode());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(10, 10, 10, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1010010010, version.hashCode());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionComparable_validVersion_equalIsCorrect() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Version one;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Version another;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.equals(another));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(100, 191, 275, true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(100, 191, 275, true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.equals(another));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private void verifyVersionParsedCorrectly(String versionString,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                                              int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 133
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/index/IndexTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class IndexTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createOneBasedIndex() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid index"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // check equality using the same base"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Index.fromOneBased(1).getOneBased());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, Index.fromOneBased(5).getOneBased());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        // convert from one-based index to zero-based index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Index.fromOneBased(1).getZeroBased());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(4, Index.fromOneBased(5).getZeroBased());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createZeroBasedIndex() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid index"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        // check equality using the same base"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Index.fromZeroBased(0).getZeroBased());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, Index.fromZeroBased(5).getZeroBased());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // convert from zero-based index to one-based index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Index.fromZeroBased(0).getOneBased());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(6, Index.fromZeroBased(5).getOneBased());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        final Index fifthPersonIndex \u003d Index.fromOneBased(5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fifthPersonIndex.equals(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fifthPersonIndex.equals(5.0f));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 58
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/AppUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtilTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_exitingImage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(AppUtil.getImage(\"/images/study_buddy.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_true_nothingHappens() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String errorMessage \u003d \"error message\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/CollectionUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtilTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void requireAllNonNullVarargs() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // no arguments"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // any non-empty argument list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(new Object(), new Object());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(\"test\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with just one null at the beginning"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Object) null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(null, \"\", new Object());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(null, new Object(), new Object());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with nulls in the middle"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(\"\", null, new Object());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with one null as the last argument"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(\"\", new Object(), null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(new Object(), new Object(), null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // null reference"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Object[]) null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside lists in the argument list are not considered"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(containingNull, new Object());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void requireAllNonNullCollection() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls in the front"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList((Object) null));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls in the middle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls at the end"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // null reference"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Collections.emptyList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // list with all non-null elements"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside nested lists are not considered"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isAnyNonNull() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull((Object) null));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CollectionUtil.isAnyNonNull(new Object()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code objects} or any element of {@code objects} is null."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionThrown(Object... objects) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code collection} or any element of {@code collection} is null."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionNotThrown(Object... objects) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(objects);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(collection);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "-": 101
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/ConfigUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigUtilTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path tempDir;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e read(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_missingFile_emptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(read(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_fileInOrder_successfullyRead() throws DataConversionException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Config expected \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"TypicalConfig.json\").get();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"EmptyConfig.json\").get();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new Config(), actual);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Config expected \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"ExtraValuesConfig.json\").get();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private Config getTypicalConfig() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Config config \u003d new Config();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setLogLevel(Level.INFO);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return config;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return ConfigUtil.readConfig(configFilePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void save_nullConfig_throwsNullPointerException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void save_nullFile_throwsNullPointerException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Config original \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(original, configFilePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setLogLevel(Level.FINE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(original, configFilePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d ConfigUtil.readConfig(configFilePath).get();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void save(Config config, String configFileInTestDataFolder) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(config, configFilePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return configFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "-": 112
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/FileUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtilTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isValidPath() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        // valid path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid path"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(FileUtil.isValidPath(\"a\\0\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // null path -\u003e throws NullPointerException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 21
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/JsonUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.SerializableTestClass;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TestUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Tests JSON Read and Write"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtilTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        serializableTestClass.setTestValues();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        SerializableTestClass serializableTestClass \u003d JsonUtil"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "-": 42
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/StringUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtilTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isNonZeroUnsignedInteger() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: empty strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: not a number"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: zero"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: zero as prefix"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: signed numbers"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: numbers with white space"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: number larger than Integer.MAX_VALUE"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: valid numbers, should return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for containsWordIgnoreCase --------------------------------------"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Invalid equivalence partitions for word: null, empty, multiple words"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Invalid equivalence partitions for sentence: null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * The four test cases below test one invalid input at a time."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Valid equivalence partitions for word:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - any word"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - word containing symbols/numbers"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - word with leading/trailing spaces"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Valid equivalence partitions for sentence:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - empty string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - one word"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - multiple words"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - sentence with extra spaces"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Possible scenarios returning true:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - matches first word in sentence"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - last word in sentence"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - middle word in sentence"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - matches multiple words"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Possible scenarios returning false:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - query word matches part of a sentence word"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - sentence word matches part of the query word"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * The test method below tries to verify all above with a reasonably low number of test cases."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_validInputs_correctResult() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // Empty sentence"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches a partial word only"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches word in the sentence, different upper/lower case letters"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches multiple words in sentence"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for getDetails --------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Equivalence Partitions: null, valid throwable object"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getDetails_exceptionGiven() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            .contains(\"java.io.FileNotFoundException: file not found\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getDetails_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 141
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/ClearTasksCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ClearTasksCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_emptyStudyBuddy_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_nonEmptyStudyBuddy_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.setStudyBuddy(new StudyBuddy());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 25
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/CommandResultTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResultTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(commandResult));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(0.5f));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"different\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hashcode() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns same hashcode"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 53
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/CommandTestUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_NAME_ONE \u003d \"Project meeting\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_NAME_TWO \u003d \"Job application\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_TYPE_THREE \u003d \"Assignment\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_TYPE_FOUR \u003d \"Quiz\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DESCRIPTION_ONE \u003d \"Project\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DESCRIPTION_TWO \u003d \"Final draft of Project\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_MODULE_ONE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_MODULE_TWO \u003d \"CS2101\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DATE_ONE \u003d \"17:00 28/04/2060\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DATE_TWO \u003d \"00:00 29/06/2040- 13:00 30/06/2040\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String INVALID_DATE_ONE \u003d \"12/12/12\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (CommandException | ParseException ce) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * - the study buddy, filtered person list and selected person in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy expectedStudyBuddy \u003d new StudyBuddy(actualModel.getStudyBuddy());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedStudyBuddy, actualModel.getStudyBuddy());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code model}\u0027s study buddy."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void showTaskAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(task.getTaskName())));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(1, model.getFilteredTaskList().size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 84,
      "wyt-sonia": 2
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/add/AddTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskCommandTest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void constructor_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task validTask \u003d new TaskBuilder().build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task1 \u003d new TaskBuilder().withName(\"ass1\").build();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task2 \u003d new TaskBuilder().withName(\"ass2\").build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1command \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add2command \u003d new AddTaskCommand(task2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same object -\u003e returns true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(add1command.equals(add1command));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same values -\u003e returns true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1copycommand \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(add1command.equals(add1copycommand));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //different types -\u003e reutrns false"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //null -\u003e returns false"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(null));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //diff task -\u003e returns false"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(add2command));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void setStudyBuddy(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void sortDueSoonTasks(){}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addMod(Module mod) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void completeTask(Task task) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void setTaskMod(Task target, Module mod) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void deleteDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A Model stub that contains a single task."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        private final Task task;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelStubWithTask(Task task) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return this.task.isSameTask(task);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * A Model stub that always accept the task being added."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private class ModelStubAcceptingTaskAdded extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            tasksAdded.add(task);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new StudyBuddy();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return tasksAdded.stream().anyMatch(task::isSameTask);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 35,
      "souwmyaa": 28,
      "aegis-bot": 20,
      "gx-huang": 180
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/delete/DeleteDuplicateTasksCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteDuplicateTasksCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_checkDeleteDuplicates_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteDuplicateTaskCommand command \u003d new DeleteDuplicateTaskCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.deleteTask(model.getFilteredTaskList().get(2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Arrays.asList(getSampleTasks()[0], getSampleTasks()[1],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                getSampleTasks()[3], getSampleTasks()[4]),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.getFilteredTaskList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 31
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/delete/DeleteTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DeleteTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand atCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 9,
      "gx-huang": 59
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/ArchiveTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class ArchiveTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToArchive);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveCommand \u003d new ArchiveTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToArchive);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveSecondCommand \u003d new ArchiveTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommand));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommandCopy \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommandCopy));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(null));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(archiveSecondCommand));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 9,
      "gx-huang": 62
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/sort/SortTasksCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class SortTasksCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/FindTaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FindTaskCommandTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate firstPredicate \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate secondPredicate \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(findFirstCommand.equals(null));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_zeroKeywords_noTaskFound() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand command \u003d new FindTaskCommand(predicate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Collections.emptyList(), model.getFilteredTaskList());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_multipleKeywords_multipleTasksFound() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Ass Presentation\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand command \u003d new FindTaskCommand(predicate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Arrays.asList(getSampleTasks()[0], getSampleTasks()[1]),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.getFilteredTaskList());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 73
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/ListTasksCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for ListCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ListTasksCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_listIsFiltered_showsEverything() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //showTaskAtIndex(model, INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 31
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/ModelManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.StudyBuddyBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(new StudyBuddy(), new StudyBuddy(modelManager.getStudyBuddy()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"studyBuddy/file/path\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(userPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // Modifying userPrefs should not modify modelManager\u0027s userPrefs"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"new/studyBuddy/file/path\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(oldUserPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_validGuiSettings_setsGuiSettings() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setStudyBuddyFilePath(null));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath_validPath_setsStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Path path \u003d Paths.get(\"studyBuddy/file/path\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.setStudyBuddyFilePath(path);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(path, modelManager.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskNotInStudyBuddy_returnsFalse() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(modelManager.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskInStudyBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.addTask(TypicalTasks.getSampleTasks()[0]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(modelManager.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy studyBuddy \u003d new StudyBuddyBuilder().withTask(TypicalTasks.getSampleTasks()[0])"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .withTask(TypicalTasks.getSampleTasks()[1]).build();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy differentStudyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager \u003d new ModelManager(studyBuddy, userPrefs);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager modelManagerCopy \u003d new ModelManager(studyBuddy, userPrefs);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManagerCopy));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(null));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(5));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // different userPrefs -\u003e returns false"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        differentUserPrefs.setStudyBuddyFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(studyBuddy, differentUserPrefs)));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 27,
      "wyt-sonia": 3,
      "-": 87
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/StudyBuddyTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddyTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddy studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Collections.emptyList(), studyBuddy.getTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e studyBuddy.resetData(null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData_withValidReadOnlyStudyBuddy_replacesData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy newData \u003d TypicalTasks.getTypicalTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.resetData(newData);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(newData, studyBuddy);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e studyBuddy.hasTask(null));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskNotInStudyBuddy_returnsFalse() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(studyBuddy.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskInStudyBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(TypicalTasks.getSampleTasks()[0]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(studyBuddy.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getTaskList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e studyBuddy.getTaskList().remove(0));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * A stub ReadOnlyStudyBuddy whose tasks list can violate interface constraints."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static class StudyBuddyStub implements ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return getModuleList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 86
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/UserPrefsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPref \u003d new UserPrefs();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudyBuddyFilePath(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "-": 15
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ONE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_TASK_NAME_ONE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task1 \u003d getSampleTasks()[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task2 \u003d getSampleTasks()[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void isSameTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.isSameTask(task1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(null));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_ONE).build();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(editedTask1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different description -\u003e returns false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        editedTask1 \u003d new TaskBuilder(task1).withDescription(VALID_DESCRIPTION_ONE).build();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(editedTask1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task task1Copy \u003d new TaskBuilder(task1).build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.equals(task1Copy));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.equals(task1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(null));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(5));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(task2));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_ONE).build();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(editedTask1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different description -\u003e returns false"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        editedTask1 \u003d new TaskBuilder(task1).withDescription(VALID_DESCRIPTION_ONE).build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(editedTask1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 57
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/task/UniqueTaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TWO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_TASK_NAME_TWO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class UniqueTaskListTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task1 \u003d getSampleTasks()[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task2 \u003d getSampleTasks()[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void contains_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void contains_taskNotInList_returnsFalse() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(uniqueTaskList.contains(task1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void contains_taskInList_returnsTrue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(uniqueTaskList.contains(task1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void add_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTask_nullTargetTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, task1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTask_nullEditedTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(task1, null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(task1, task1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTask_editedTaskIsSameTask_success() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, task1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTask_editedTaskHasSameIdentity_success() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_TWO).withDescription(VALID_DESCRIPTION_TWO)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, editedTask1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(editedTask1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTask_editedTaskHasDifferentIdentity_success() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, task2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void remove_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(task1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void remove_existingTask_removesTask() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.remove(task1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTasks(expectedUniqueTaskList);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTasks_nullList_throwsNullPointerException() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTasks_list_replacesOwnListWithProvidedList() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e taskList \u003d Collections.singletonList(task2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTasks(taskList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, ()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 135
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonSerializableStudyBuddyTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonSerializableStudyBuddyTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudyBuddyTest\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksStudyBuddy.json\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskStudyBuddy.json\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 11
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonStudyBuddyStorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonStudyBuddyStorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudyBuddyStorageTest\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void readStudyBuddy_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e readStudyBuddy(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private java.util.Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(String filePath) throws Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new JsonStudyBuddyStorage(Paths.get(filePath)).readStudyBuddy(addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_missingFile_emptyResult() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(readStudyBuddy(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(DataConversionException.class, () -\u003e readStudyBuddy(\"notJsonFormatStudyBuddy.json\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy_nullStudyBuddy_throwsNullPointerException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudyBuddy(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Saves {@code studyBuddy} at the specified {@code filePath}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, String filePath) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new JsonStudyBuddyStorage(Paths.get(filePath))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                .saveStudyBuddy(studyBuddy, addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudyBuddy(new StudyBuddy(), null));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 13,
      "wyt-sonia": 3,
      "-": 49
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonUserPrefsStorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorageTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), actual);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs expected \u003d getTypicalUserPrefs();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefs getTypicalUserPrefs() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"studybuddy.json\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void savePrefs_nullPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                .saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file\", ioe);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 5,
      "-": 106
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/StorageManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storageManager \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(storageManager.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 4,
      "-": 46
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/Assert.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.function.Executable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * A set of assertion methods useful for writing tests."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Assert {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code executable} throws the {@code expectedType} Exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * with our custom {@link #assertThrows(Class, String, Executable)} method."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * To standardize API calls in this project, users should use this method instead of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Assertions#assertThrows(Class, Executable)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * If there\u0027s no need for the verification of the exception\u0027s error message, call"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link #assertThrows(Class, Executable)} instead."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertThrows(Class, Executable)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                                    Executable executable) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertEquals(expectedMessage, thrownException.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/SerializableTestClass.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * A class used to test serialization and deserialization"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class SerializableTestClass {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"listOfLocalDateTimes\\\" : \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"\\\"0001-01-01T01:01:00\\\" ],%n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"mapOfIntegerToString\\\" : {%n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"1\\\" : \\\"One\\\",%n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"2\\\" : \\\"Two\\\",%n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"3\\\" : \\\"Three\\\"%n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  }%n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"}\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getNameTestValue() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return NAME_TEST_VALUE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cLocalDateTime\u003e getListTestValues() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.MIN);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.MAX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return listOfLocalDateTimes;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(1, \"One\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(2, \"Two\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(3, \"Three\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return mapOfIntegerToString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTestValues() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d getNameTestValue();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes \u003d getListTestValues();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString \u003d getHashMapTestValues();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return listOfLocalDateTimes;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return mapOfIntegerToString;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 71
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/StudyBuddyBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A utility class to help with building StudyBuddy objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * {@code StudyBuddy ab \u003d new StudyBuddyBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddyBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StudyBuddy studyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder(StudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy \u003d studyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a new {@code Person} to the {@code StudyBuddy} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder withTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 30,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TaskBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Utility class to help build tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TaskBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_MODULE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Team project\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_TASKDESCRIPTION \u003d \"Team project\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final double DEFAULT_ESTIMATEDTIME \u003d 45.5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskType DEFAULT_TASKTYPE \u003d TaskType.Others;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskStatus DEFAULT_TASKSTATUS \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final double DEFAULT_TASKWEIGHT \u003d 45.0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final LocalDateTime[] DEFAULT_DATETIME \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 10/10/2020\")};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final LocalDateTime DEFAULT_CREATION_DATETIME \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d new Module(DEFAULT_MODULE, DEFAULT_MODULE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d DEFAULT_TASKTYPE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d DEFAULT_NAME;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d DEFAULT_TASKDESCRIPTION;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d DEFAULT_TASKWEIGHT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d DEFAULT_TASKSTATUS;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d DEFAULT_DATETIME;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d DEFAULT_ESTIMATEDTIME;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d DEFAULT_CREATION_DATETIME;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init new Task with parameter TaskToCopy"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder(Task taskToCopy) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d taskToCopy.getModule();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d taskToCopy.getTaskType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d taskToCopy.getTaskName();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d taskToCopy.getTaskDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d taskToCopy.getWeight();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d taskToCopy.getTaskStatus();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d taskToCopy.getDateTimes();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d taskToCopy.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d taskToCopy.getCreationDateTime();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init taskBuilder with name as parameter."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder withName(String name) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * init taskBuilder with description as parameter"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskBuilder withDescription(String desc) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.taskDescription \u003d desc;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * builds task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task(module, taskType, taskName, taskDescription, weight, taskStatus,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 8,
      "wyt-sonia": 7,
      "gx-huang": 68
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TestUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class for test cases."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestUtil {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Folder used for temp files created during testing. Ignored by Git."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Appends {@code fileName} to the sandbox folder path and returns the resulting path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the sandbox folder if it doesn\u0027t exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Path getFilePathInSandboxFolder(String fileName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(SANDBOX_FOLDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return SANDBOX_FOLDER.resolve(fileName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the middle index of the person in the {@code model}\u0027s person list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index getMidIndex(Model model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the last index of the person in the {@code model}\u0027s person list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index getLastIndex(Model model) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Index.fromOneBased(model.getFilteredTaskList().size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the person in the {@code model}\u0027s person list at {@code index}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static Task getTask(Model model, Index index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredTaskList().get(index.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 4,
      "-": 47
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TypicalIndexes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A utility class containing a list of {@code Index} objects to be used in tests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TypicalIndexes {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 10
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TypicalTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * represents a typical tasklist."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TypicalTasks {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\", \"CS2103T\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \"CS2101\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/04/2020\"), LocalDateTime.now()};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task[] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Ass 1\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Meeting 1\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, LocalDateTime.now()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static StudyBuddy getTypicalTaskList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy sampleAb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sampleAb.addTask(sampleTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 5,
      "wyt-sonia": 4,
      "gx-huang": 31
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/TestFxmlObject.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.DefaultProperty;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A test object which can be constructed via an FXML file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@DefaultProperty(\"text\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestFxmlObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TestFxmlObject() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public TestFxmlObject(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        setText(text);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setText(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof TestFxmlObject // instanceof handles nulls"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 2,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/UiPartTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiPartTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullFileUrl_throwsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidFileUrl_throwsAssertionError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_validFileUrl_loadsFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_validFileWithFxRootUrl_loadsFile() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        TestFxmlObject root \u003d new TestFxmlObject();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullFileName_throwsNullPointerException() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_missingFileName_throwsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidFileName_throwsAssertionError() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    private URL getTestFileUrl(String testFilePath) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        String testFilePathInView \u003d \"/view/\" + testFilePath;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFileUrl;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * UiPart used for testing."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        @FXML"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        private TestFxmlObject validFileRoot; // Check that @FXML annotations work"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileName, root);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileUrl);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(VALID_FILE_ROOT, validFileRoot);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileName);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(VALID_FILE_ROOT, validFileRoot);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 13,
      "-": 99
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/add/AddTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the task name.\", prompt.interact(\"add\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(AddTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_backCommand_returnMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the task name.\", prompt.interact(\"back\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnPrompt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String userInput \u003d AddTaskCommandParser.parseName(\"1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The name of task is set to: \" + userInput + \".\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Please choose the task type:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnPromptAss() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskType taskType \u003d AddTaskCommandParser.parseType(\"1\", TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The type of task is set to: \" + taskType.toString() + \".\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Please enter the deadline with format: \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnPromptOthers() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskType taskType \u003d AddTaskCommandParser.parseType(\"2\", TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The type of task is set to: \" + taskType.toString() + \".\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Please enter the deadline with format: \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"2\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnPromptError() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assertions.assertEquals(new AddTaskCommandException(\"wrongIndexFormat\").getMessage(), prompt.interact(\"10\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fourthInput_returnPromptAss() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String userInput \u003d \"00:00 31/12/2020\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimes \u003d AddTaskCommandParser.parseDateTime(userInput, TaskType.Assignment);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        userInput \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The date and time is set to: \" + userInput + \"\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Press enter again to add the task:\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"1\" + \" \" + TaskType.Assignment.toString() + \" \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"00:00 31/12/2020\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"00:00 31/12/2020\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fourthInput_returnPromptOther() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String userInput \u003d \"12:00 31/12/2020-14:00 31/12/2020\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime[] dateTimes \u003d AddTaskCommandParser.parseDateTime(userInput, TaskType.Quiz);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        userInput \u003d TimeParser.getDateTimeString(dateTimes[0])"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The date and time is set to: \" + userInput + \"\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Press enter again to add the task:\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"1\" + \" \" + TaskType.Quiz.toString() + \" \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"12:00 31/12/2020-12:00 31/12/2020\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"12:00 31/12/2020-14:00 31/12/2020\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fifthInput_returnPrompt() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"add\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"00:00 31/12/2020\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 16,
      "gx-huang": 106
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/add/CreateModuleInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class CreateModuleInteractivePromptTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please key in the name of the module that you want to create\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    //quit does not work"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /*@Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_backCommand_returnMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"\", prompt.interact(\"back\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"The name of module is set to: \" + \"Software engineering\" + \".\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Now key in your module code\", prompt.interact(\"Software engineering\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_thirdInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"Module Code: \" + \"O0000O\" + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"Click \u0027Enter\u0027 again to confirm your changes\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"O0000O\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_fourthInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"O0000O\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract_test() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.endInteract(\"a\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "gx-huang": 56
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/delete/ClearTasksInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class ClearTasksInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ClearTasksInteractivePrompt prompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(ClearTasksInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ClearTasksInteractivePrompt prompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please press enter to clear all your tasks.\\n Else enter quit to go back.\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 24
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/delete/DeleteDuplicateTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class DeleteDuplicateTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteDuplicateTaskInteractivePrompt prompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(DeleteDuplicateTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The duplicate tasks will be deleted\\n \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteDuplicateTaskInteractivePrompt prompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteDuplicateTaskInteractivePrompt prompt \u003d new DeleteDuplicateTaskInteractivePrompt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "gx-huang": 30
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/delete/DeleteTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class DeleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(DeleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to delete.\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /*@Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The task \" + model.getAddressBook().getTaskList().get(0).getTaskName()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" will be deleted. \\n \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, reply);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "gx-huang": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/ArchiveTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class ArchiveTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(ArchiveTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to archive.\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 24
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/CompleteTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class CompleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CompleteTaskInteractivePrompt prompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(CompleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CompleteTaskInteractivePrompt prompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to mark as done.\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 24
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/EditTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class EditTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        EditTaskInteractivePrompt prompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(EditTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        EditTaskInteractivePrompt prompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index of the task that you wish to edit.\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 24
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/FindTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class FindTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getKeywordPrompt(), prompt.interact(\"find\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"find\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getConfirmationPrompt(\"randomKeyword\"), prompt.interact(\"randomKeyword\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_quitCommand_returnQuitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getQuitMessage(), prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 26,
      "aegis-bot": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/HelpInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class HelpInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private HelpInteractivePrompt hip \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(hip.interact(\"help\"), HelpInteractivePrompt.getHelpMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13,
      "aegis-bot": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/ListTaskInteractivePromptTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFile.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import draganddrop.studybuddy.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 3
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import draganddrop.studybuddy.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"TestFxmlObject\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctext\u003eHello World!\u003c/text\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 1,
      "-": 4
    }
  }
]
