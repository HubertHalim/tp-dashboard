[
  {
    "path": ".travis.yml",
    "fileType": "yml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "language: java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "matrix:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  include:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    - jdk: openjdk11"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "script: \u003e-"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    ./config/travis/run-checks.sh \u0026\u0026"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ./gradlew clean test coverage coveralls asciidoctor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "deploy:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  skip_cleanup: true"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  provider: script"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  script: ./config/travis/deploy_github_pages.sh"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  on:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    branch: master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "before_cache:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "cache:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  directories:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    - $HOME/.gradle/caches/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    - $HOME/.gradle/wrapper/"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ShengXue97": 1
    }
  },
  {
    "path": "README.adoc",
    "fileType": "adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "\u003d Code Camp X"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lth08091998"
        },
        "content": "https://travis-ci.org/AY1920S2-CS2103-W14-1/main[image:https://api.travis-ci.org/AY1920S2-CS2103-W14-1/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "https://ci.appveyor.com/project/damithc/addressbook-level3[image:https://ci.appveyor.com/api/projects/status/3boko2x2vr5cc3w2?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "https://coveralls.io/github/se-edu/addressbook-level3?branch\u003dmaster[image:https://coveralls.io/repos/github/se-edu/addressbook-level3/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "*Code Camp X*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "****"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "Code Camp X is the best management tool for you to use if you have issues managing your coding bootcamp!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "This will help you save countless of hours by making it simple for you to track the profitability of each of your courses,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "track the progress of your students and even effectively manage the teachers that you\u0027ve hired! Why wait? Try our"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "application now!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "****"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "*Who is it for?*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "****"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Those who find it difficult to managing a coding bootcamp"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Those who have issues tracking manpower efficiently"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Those who care about their students and their progress"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Those who want to effectively tell the profitability of their bootcamp"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Those who want to immediately see all the students that they have"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "****"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "*Features*"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "****"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Student Progress Tracker"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Student Fee Payment Tracker"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Manpower Management"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "- Financial Analysis of Courses"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "****"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ivanteejj"
        },
        "content": "* Original Source of Code used (AddressBook Level 3): https://se-education.org"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "lth08091998": 1,
      "ivanteejj": 26,
      "-": 30
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    implementation group: \u0027com.google.guava\u0027, name: \u0027guava\u0027, version: \u002719.0\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-name\u0027: \u0027AddressBook-Level3\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/se-edu/addressbook-level3\u0027,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-seedu\u0027: true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "-": 155,
      "ShengXue97": 1
    }
  },
  {
    "path": "data/addressbook.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \"persons\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"Sim\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"88283902\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"s@gmail.com\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"Serangoon\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ ]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"John Doe\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"98765432\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"johnd@example.com\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"Ang Mo Kio\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"owesMoney\", \"friends\" ]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"John Doe3\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"98765432\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"johnd@example.com\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"311, Clementi Ave 2, #02-25\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"owesMoney\", \"friends\" ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"John Doe4\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"98765432\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"johnd@example.com\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"311, Clementi Ave 2, #02-25\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"owesMoney\", \"friends\" ]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"John Doe333\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"98765432\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"johnd@example.com\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"311, Clementi Ave 2, #02-25\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"owesMoney\", \"friends\" ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"John Doeddd\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"98765432\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"johnd@example.com\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"311, Clementi Ave 2, #02-25\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"owesMoney\", \"friends\" ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"John Doeavsav\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"98765432\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"johnd@example.com\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"311, Clementi Ave 2, #02-25\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"owesMoney\", \"friends\" ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"name\" : \"MarySon\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"phone\" : \"88291028\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"email\" : \"son@gmail.com\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"address\" : \"Serangoon\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \"tagged\" : [ \"Cute\", \"Lovely\" ]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 51
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "CodeCamp X was developed by the **FooBar** team. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "_{We have this idea to help user to manage BootCamps better.}_ +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "We are a team that consists of students from http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003d\u003d\u003d Sheng Xue"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "image::shengxue.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "{empty}[https://github.com/ShengXue97[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Role: Developer + UI expert +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Responsibilities: UI + Testing + Code quality"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003d\u003d\u003d Ivan Tee"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "image::ivan.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "{empty}[https://github.com/ivanteejj[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Team Lead +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Responsibilities: Deliverables and deadlines, Scheduling and tracking"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003d\u003d\u003d Le Trung Hieu"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "image::hieu.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "{empty}[https://github.com/lth08091998[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Role: Developer, Database expert +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Responsibilities: Integration, In charge of Model and storage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003d\u003d\u003d Nguyen Tien Dat"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "image::dat.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "{empty}[http://github.com/tiendat161[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Role: Developer + Documentator +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "Responsibilities: Testing + Documentation + Code quality"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 27,
      "tiendat161": 22
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S2-CS2103-W14-1/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "* *Email us* : You can also reach us at `shengxue@u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/AppParameters.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the parsed command-line parameters given to the application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParameters {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  private Path configPath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses the application command-line parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  public static AppParameters parse(Application.Parameters parameters) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    AppParameters appParameters \u003d new AppParameters();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    String configPathParameter \u003d namedParameters.get(\"config\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      configPathParameter \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    appParameters"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    return appParameters;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getConfigPath() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return configPath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setConfigPath(Path configPath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.configPath \u003d configPath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof AppParameters)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    AppParameters otherAppParameters \u003d (AppParameters) other;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    return configPath.hashCode();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 57,
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * This is a workaround for the following error when MainApp is made the entry point of the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * application:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * The reason is that MainApp extends Application. In that case, the LauncherHelper will check for"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * the javafx.graphics module to be present as a named module. We don\u0027t use JavaFX via the module"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * system so it can\u0027t find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application to be the entry point of"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * the application, we avoid this issue."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    Application.launch(MainApp.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.AddressBookStorage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageCourse.CourseAddressBookStorage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageCourse.JsonCourseAddressBookStorage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageFinance.FinanceAddressBookStorage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageFinance.JsonFinanceAddressBookStorage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageStudent.JsonStudentAddressBookStorage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageStudent.StudentAddressBookStorage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageTeacher.JsonTeacherAddressBookStorage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageTeacher.TeacherAddressBookStorage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  protected Ui ui;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  protected Logic logic;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  protected Storage storage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  protected Model model;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  protected Config config;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  public void init() throws Exception {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.info("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    super.init();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    TeacherAddressBookStorage teacherAddressBookStorage \u003d new JsonTeacherAddressBookStorage("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefs.getTeacherAddressBookFilePath());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    StudentAddressBookStorage studentAddressBookStorage \u003d new JsonStudentAddressBookStorage("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefs.getStudentAddressBookFilePath());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    CourseAddressBookStorage courseAddressBookStorage \u003d new JsonCourseAddressBookStorage("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefs.getCourseAddressBookFilePath());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FinanceAddressBookStorage financeAddressBookStorage \u003d new JsonFinanceAddressBookStorage("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefs.getFinanceAddressBookFilePath());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    storage \u003d new StorageManager(addressBookStorage, teacherAddressBookStorage,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        studentAddressBookStorage, financeAddressBookStorage, courseAddressBookStorage,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefsStorage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    initLogging(config);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * userPrefs}. \u003cbr\u003e The data from the sample address book will be used instead if {@code"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * storage}\u0027s address book is not found, or an empty address book will be used instead if errors"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * occur when reading {@code storage}\u0027s address book."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook initialData;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      addressBookOptional \u003d storage.readAddressBook();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!addressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cReadOnlyTeacherAddressBook\u003e teacherAddressBookOptional;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ReadOnlyTeacherAddressBook teacherInitialData;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      teacherAddressBookOptional \u003d storage.readTeacherAddressBook();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!teacherAddressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      teacherInitialData \u003d teacherAddressBookOptional"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .orElseGet(SampleDataUtil::getSampleTeacherAddressBook);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      teacherInitialData \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      teacherInitialData \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cReadOnlyStudentAddressBook\u003e studentAddressBookOptional;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ReadOnlyStudentAddressBook studentInitialData;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      studentAddressBookOptional \u003d storage.readStudentAddressBook();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!studentAddressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      studentInitialData \u003d studentAddressBookOptional"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .orElseGet(SampleDataUtil::getSampleStudentAddressBook);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      studentInitialData \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      studentInitialData \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cReadOnlyFinanceAddressBook\u003e financeAddressBookOptional;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ReadOnlyFinanceAddressBook financeInitialData;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      financeAddressBookOptional \u003d storage.readFinanceAddressBook();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!financeAddressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      financeInitialData \u003d financeAddressBookOptional"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .orElseGet(SampleDataUtil::getSampleFinanceAddressBook);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      financeInitialData \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      financeInitialData \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cReadOnlyCourseAddressBook\u003e courseAddressBookOptional;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ReadOnlyCourseAddressBook courseInitialData;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      courseAddressBookOptional \u003d storage.readCourseAddressBook();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!courseAddressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      courseInitialData \u003d courseAddressBookOptional"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .orElseGet(SampleDataUtil::getSampleCourseAddressBook);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      courseInitialData \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      courseInitialData \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new ModelManager(initialData, teacherInitialData, studentInitialData, financeInitialData,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        courseInitialData, userPrefs);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "  private void initLogging(Config config) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    LogsCenter.init(config);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e The default file path"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code Config#DEFAULT_CONFIG_FILE} will be used instead if {@code configFilePath} is null."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Config initializedConfig;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    Path configFilePathUsed;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Using default config properties\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "      ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    return initializedConfig;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path, or a new"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code UserPrefs} with default configuration if errors occur when reading from the file."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Using default user prefs\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.warning("
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    return initializedPrefs;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.info(\"Starting AddressBook \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    ui.start(primaryStage);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  public void stop() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.info("
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 174,
      "ShengXue97": 117
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/BaseEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * The base class for all event classes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public abstract class BaseEvent {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * All Events should have a clear unambiguous custom toString message so that feedback message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * creation stays consistent and reusable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * \u003cp\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * For example, the event manager post method will call any posted event\u0027s toString and print it"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * in the console."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public abstract String toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/EventsCenter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.google.common.eventbus.EventBus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.BaseEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Manages the event dispatching of the app."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EventsCenter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(EventsCenter.class);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static EventsCenter instance;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final EventBus eventBus;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private EventsCenter() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    eventBus \u003d new EventBus();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static EventsCenter getInstance() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (instance \u003d\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      instance \u003d new EventsCenter();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return instance;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static void clearSubscribers() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    instance \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void registerHandler(Object handler) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    eventBus.register(handler);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Posts an event to the event bus."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public \u003cE extends BaseEvent\u003e EventsCenter post(E event) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.info("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \"------[Event Posted] \" + event.getClass().getCanonicalName() + \": \" + event.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    eventBus.post(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return this;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A Serializable class that contains the GUI settings. Guarantees: immutable."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final double DEFAULT_WIDTH \u003d 740;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  private final double windowWidth;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  private final double windowHeight;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Point windowCoordinates;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  public GuiSettings() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  public double getWindowWidth() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return windowWidth;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  public double getWindowHeight() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    return windowHeight;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    return sb.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 71,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/LogsCenter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level Named {@link Logger}s"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * can be obtained from this class\u003cbr\u003e These loggers have been configured to output messages to the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * console and a {@code .log} file by default, at the {@code INFO} level. A new {@code .log} file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * with a new numbering will be created after the log file reaches 5MB big, up to a maximum of 5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String LOG_FILE \u003d \"addressbook.log\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Initializes with a custom log level (specified in the {@code config} object) Loggers obtained"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * *AFTER* this initialization will have their logging level changed\u003cbr\u003e Logging levels for"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * existing loggers will only be updated if the logger with the same name is requested again from"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * the LogsCenter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void init(Config config) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a logger with the given name."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    removeHandlers(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    addConsoleHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    addFileHandler(logger);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    return Logger.getLogger(name);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e Creates the {@code consoleHandler}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * if it is null."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e Creates {@code fileHandler} if it is"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * null."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    return fileHandler;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    return consoleHandler;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 98,
      "ShengXue97": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_INVALID_TEACHER_DISPLAYED_INDEX \u003d \"The teacher index provided is invalid\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_INVALID_FINANCE_DISPLAYED_INDEX \u003d \"The finance index provided is invalid\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_INVALID_COURSE_DISPLAYED_INDEX \u003d \"The course index provided is invalid\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_TEACHERS_LISTED_OVERVIEW \u003d \"%1$d teachers listed!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_FINANCES_LISTED_OVERVIEW \u003d \"%1$d finances listed!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_COURSES_LISTED_OVERVIEW \u003d \"%1$d courses listed!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "ShengXue97": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Version.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a version with major, minor and patch number"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Version implements Comparable\u003cVersion\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  private final int major;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private final int minor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  private final int patch;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private final boolean isEarlyAccess;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  public Version(int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    this.major \u003d major;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    this.minor \u003d minor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.patch \u003d patch;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isEarlyAccess \u003d isEarlyAccess;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses a version number string in the format V1.2.3."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param versionString version number string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return a Version object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Version fromString(String versionString) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!versionMatcher.find()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalArgumentException("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(EXCEPTION_STRING_NOT_VERSION, versionString));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Version(Integer.parseInt(versionMatcher.group(1)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Integer.parseInt(versionMatcher.group(2)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Integer.parseInt(versionMatcher.group(3)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        versionMatcher.group(4) \u003d\u003d null ? false : true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int getMajor() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return major;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int getMinor() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return minor;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int getPatch() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return patch;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean isEarlyAccess() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return isEarlyAccess;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  @JsonValue"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  public int compareTo(Version other) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    if (major !\u003d other.major) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      return major - other.major;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    if (minor !\u003d other.minor) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      return minor - other.minor;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    if (patch !\u003d other.patch) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      return patch - other.patch;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isEarlyAccess) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      return -1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    return 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    if (obj \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(obj instanceof Version)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    final Version other \u003d (Version) obj;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    return compareTo(other) \u003d\u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isEarlyAccess) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      hash \u003d \"1\" + hash;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    return Integer.parseInt(hash);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 93,
      "ShengXue97": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/index/Index.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a zero-based or one-based index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@code Index} should be used right from the start (when parsing in a new user input), so that if"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * the current component wants to communicate with another component, it can send an {@code Index}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * to avoid having to know what base the other component is using for its index. However, after"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * receiving the {@code Index}, that component can convert it back to an int if the index will not"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * be passed to a different component again."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Index {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  private int zeroBasedIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Index can only be created by calling {@link Index#fromZeroBased(int)} or {@link"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Index#fromOneBased(int)}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private Index(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    if (zeroBasedIndex \u003c 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    this.zeroBasedIndex \u003d zeroBasedIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new {@code Index} using a zero-based index."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Index fromZeroBased(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Index(zeroBasedIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new {@code Index} using a one-based index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Index fromOneBased(int oneBasedIndex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Index(oneBasedIndex - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int getZeroBased() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return zeroBasedIndex;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int getOneBased() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return zeroBasedIndex + 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof Index // instanceof handles nulls"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 40,
      "ShengXue97": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/exceptions/DataConversionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error during conversion of data from one format to another"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DataConversionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  public DataConversionException(Exception cause) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    super(cause);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/CollectionUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Utility methods related to Collections"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #requireAllNonNull(Collection)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void requireAllNonNull(Object... items) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    Stream.of(items).forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * Throws NullPointerException if {@code items} or any element of {@code items} is null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void requireAllNonNull(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(items);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    items.forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if {@code items} contain any elements that are non-null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isAnyNonNull(Object... items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/FileUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Writes and reads files"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String CHARSET \u003d \"UTF-8\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isFileExists(Path file) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if {@code path} can be converted into a {@code Path} via {@link"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Paths#get(String)}, otherwise returns false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param path A string representing the file path. Cannot be null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isValidPath(String path) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      Paths.get(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (InvalidPathException ipe) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void createIfMissing(Path file) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isFileExists(file)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      createFile(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void createFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    if (Files.exists(file)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    createParentDirsOfFile(file);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    Files.createFile(file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates parent directories of file if it has a parent directory"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void createParentDirsOfFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    Path parentDir \u003d file.getParent();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    if (parentDir !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      Files.createDirectories(parentDir);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assumes file exists"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  public static String readFromFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    return new String(Files.readAllBytes(file), CHARSET);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Writes given string to a file. Will create the file if it does not exist yet."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  public static void writeToFile(Path file, String content) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    Files.write(file, content.getBytes(CHARSET));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 79,
      "ShengXue97": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/JsonUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationContext;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.module.SimpleModule;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Converts a Java object instance to JSON and vice versa"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtil {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      .registerModule(new SimpleModule(\"SimpleModule\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          .addSerializer(Level.class, new ToStringSerializer())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          .addDeserializer(Level.class, new LevelDeserializer(Level.class)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the Json object from the given file or {@code Optional.empty()} object if the file is"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * not found. If any values are missing from the file, default values will be used, as long as the"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * file is a valid json file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param filePath                   cannot be null."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                                   given here."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  public static \u003cT\u003e Optional\u003cT\u003e readJsonFile("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.info(\"Json file \" + filePath + \" not found\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    T jsonFile;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new DataConversionException(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    return Optional.of(jsonFile);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Saves the Json object to the specified file. Overwrites existing file if it exists, creates a"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * new file if it doesn\u0027t."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param jsonFile cannot be null"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param filePath cannot be null"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException if there was an error during writing to the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(jsonFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    serializeObjectToJsonFile(filePath, jsonFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts a given string representation of a JSON data to instance of a class"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return The instance of T with the specified values in the JSON string"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    return objectMapper.readValue(json, instanceClass);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts a given instance of a class into its JSON data string representation"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param instance The T object to be converted into the JSON string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param \u003cT\u003e      The generic type to create an instance of"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return JSON data representation of the given class instance, in string"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   * Contains methods that retrieve logging level from serialized string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    protected LevelDeserializer(Class\u003c?\u003e vc) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      super(vc);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Level _deserialize(String value, DeserializationContext ctxt) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      return getLoggingLevel(value);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the logging level that matches loggingLevelString"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns null if there are no matches"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    private Level getLoggingLevel(String loggingLevelString) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      return Level.parse(loggingLevelString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public Class\u003cLevel\u003e handledType() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      return Level.class;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 129,
      "ShengXue97": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/StringUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Helper functions for handling strings."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if the {@code sentence} contains the {@code word}. Ignores case, but a full word"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * match is required."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cbr\u003eexamples:\u003cpre\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   *       \u003c/pre\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param sentence cannot be null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param word     cannot be null, cannot be empty, must be a single word"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean containsWordIgnoreCase(String sentence, String word) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(sentence);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(word);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    String preppedWord \u003d word.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    String preppedSentence \u003d sentence;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return Arrays.stream(wordsInPreppedSentence)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        .anyMatch(preppedWord::equalsIgnoreCase);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a detailed message of the t, including the stack trace."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  public static String getDetails(Throwable t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    t.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    return t.getMessage() + \"\\n\" + sw.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if {@code s} represents a non-zero unsigned integer e.g. 1, 2, 3, ..., {@code"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Integer.MAX_VALUE} \u003cbr\u003e Will return false for any other non-null string input e.g. empty"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * letters)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws NullPointerException if {@code s} is null."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isNonZeroUnsignedInteger(String s) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(s);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      int value \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return value \u003e 0 \u0026\u0026 !s"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 61,
      "ShengXue97": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   * Executes the command and returns the result."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return the result of the command execution."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException   If an error occurs during parsing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the AddressBook."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see seedu.address.model.Model#getAddressBook()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered list of persons"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the TeacherAddressBook."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see seedu.address.model.Model#getTeacherAddressBook()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyTeacherAddressBook getTeacherAddressBook();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered list of teachers"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cTeacher\u003e getFilteredTeacherList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 teacher address book file path."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the StudentddressBook."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see seedu.address.model.Model#getStudentAddressBook()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyStudentAddressBook getStudentAddressBook();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered list of students"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cStudent\u003e getFilteredStudentList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 teacher address book file path."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the FinanceAddressBook."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see seedu.address.model.Model#getFinanceAddressBook()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyFinanceAddressBook getFinanceAddressBook();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered list of finances"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cFinance\u003e getFilteredFinanceList();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 teacher address book file path."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the CourseAddressBook."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see seedu.address.model.Model#getCourseAddressBook()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyCourseAddressBook getCourseAddressBook();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered list of courses"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cCourse\u003e getFilteredCourseList();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 course address book file path."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "ShengXue97": 97
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCourseCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddFinanceCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddStudentCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddTeacherCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearCourseCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearFinanceCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearStudentCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearTeacherCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCourseCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteFinanceCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteStudentCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteTeacherCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCourseCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditFinanceCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditStudentCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditTeacherCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.AddressBookParser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Model model;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Storage storage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  private final AddressBookParser addressBookParser;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    this.model \u003d model;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.storage \u003d storage;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    addressBookParser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult commandResult;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    Command command \u003d addressBookParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (command instanceof AddTeacherCommand || command instanceof DeleteTeacherCommand"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || command instanceof ClearTeacherCommand || command instanceof EditTeacherCommand) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        storage.saveTeacherAddressBook(model.getTeacherAddressBook());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } catch (IOException ioe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } else if (command instanceof AddStudentCommand || command instanceof DeleteStudentCommand"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || command instanceof ClearStudentCommand || command instanceof EditStudentCommand) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        storage.saveStudentAddressBook(model.getStudentAddressBook());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } catch (IOException ioe) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } else if (command instanceof AddCourseCommand || command instanceof DeleteCourseCommand"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || command instanceof ClearCourseCommand || command instanceof EditCourseCommand) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        storage.saveCourseAddressBook(model.getCourseAddressBook());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } catch (IOException ioe) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } else if (command instanceof AddFinanceCommand || command instanceof DeleteFinanceCommand"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || command instanceof ClearFinanceCommand || command instanceof EditFinanceCommand) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        storage.saveFinanceAddressBook(model.getFinanceAddressBook());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      } catch (IOException ioe) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    return commandResult;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    return model.getAddressBook();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return model.getFilteredPersonList();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    return model.getAddressBookFilePath();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyTeacherAddressBook getTeacherAddressBook() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getTeacherAddressBook();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cTeacher\u003e getFilteredTeacherList() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getFilteredTeacherList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getTeacherAddressBookFilePath() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyStudentAddressBook getStudentAddressBook() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getStudentAddressBook();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cStudent\u003e getFilteredStudentList() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getFilteredStudentList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getStudentAddressBookFilePath() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyCourseAddressBook getCourseAddressBook() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getCourseAddressBook();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cCourse\u003e getFilteredCourseList() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getFilteredCourseList();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getCourseAddressBookFilePath() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyFinanceAddressBook getFinanceAddressBook() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getFinanceAddressBook();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cFinance\u003e getFilteredFinanceList() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getFilteredFinanceList();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getFinanceAddressBookFilePath() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return model.getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    return model.getGuiSettings();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 81,
      "ShengXue97": 110
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Help information should be shown to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private final boolean showHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The application should exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private final boolean exit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    this.exit \u003d exit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, and other fields"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * set to their default value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    return feedbackToUser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean isShowHelp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    return showHelp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    return exit;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    return Objects.hash(feedbackToUser, showHelp, exit);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 67,
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandAdd/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a person to the address book."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      + \"Parameters: \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_PHONE + \"PHONE \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_EMAIL + \"EMAIL \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_ADDRESS + \"ADDRESS \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_NAME + \"John Doe \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_PHONE + \"98765432 \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_EMAIL + \"johnd@example.com \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_TAG + \"friends \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      + PREFIX_TAG + \"owesMoney\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Person toAdd;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates an AddCommand to add the specified {@code Person}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  public AddCommand(Person person) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(person);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    toAdd \u003d person;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    if (model.hasPerson(toAdd)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    model.addPerson(toAdd);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof AddCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 66,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandAdd/AddCourseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSEID;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Adds a course to the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddCourseCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"add-course\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a course to the address book. \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_COURSEID + \"COURSEID \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"Python OOP \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_COURSEID + \"345 \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Easy \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Basics \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"New course added: %1$s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_COURSE \u003d \"This course already exists in the address book\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Course toAdd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddCommand to add the specified {@code Course}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddCourseCommand(Course course) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(course);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    toAdd \u003d course;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (model.hasCourse(toAdd)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_COURSE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.addCourse(toAdd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof AddCourseCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 toAdd.equals(((AddCourseCommand) other).toAdd));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandAdd/AddFinanceCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Adds a finance to the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddFinanceCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"add-finance\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a finance to the address book. \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_AMOUNT + \"AMOUNT \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"Paid NTU \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_AMOUNT + \"1200 \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Partnership \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Monthly \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"New finance added: %1$s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_FINANCE \u003d \"This finance already exists in the address book\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Finance toAdd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddCommand to add the specified {@code Finance}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddFinanceCommand(Finance finance) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(finance);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    toAdd \u003d finance;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (model.hasFinance(toAdd)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_FINANCE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.addFinance(toAdd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof AddFinanceCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 toAdd.equals(((AddFinanceCommand) other).toAdd));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandAdd/AddStudentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Adds a student to the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddStudentCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"add-student\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_COURSE + \"COURSE \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"John AppleSeed \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_COURSE + \"Python Course \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Old \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Lazy\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Student toAdd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddCommand to add the specified {@code Student}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddStudentCommand(Student student) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(student);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    toAdd \u003d student;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (model.hasStudent(toAdd)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_STUDENT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.addStudent(toAdd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof AddStudentCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 toAdd.equals(((AddStudentCommand) other).toAdd));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandAdd/AddTeacherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Adds a teacher to the address book."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddTeacherCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"add-teacher\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a teacher to the address book. \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_PHONE + \"PHONE \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_EMAIL + \"EMAIL \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_SALARY + \"SALARY \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_ADDRESS + \"ADDRESS \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_NAME + \"Bob Ross \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_PHONE + \"98765432 \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_EMAIL + \"bob.ross@gmail.com \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_SALARY + \"1000 \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"LovesArt \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + PREFIX_TAG + \"Friendly\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"New teacher added: %1$s\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_TEACHER \u003d \"This teacher already exists in the address book\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Teacher toAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddCommand to add the specified {@code Teacher}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddTeacherCommand(Teacher teacher) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(teacher);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    toAdd \u003d teacher;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (model.hasTeacher(toAdd)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_TEACHER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.addTeacher(toAdd);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof AddTeacherCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 toAdd.equals(((AddTeacherCommand) other).toAdd));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 72
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandClear/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandClear;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Clears the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    model.setAddressBook(new AddressBook());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 22,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandClear/ClearCourseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandClear;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Clears the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ClearCourseCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"clear-course\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Course Address book has been cleared!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setCourseAddressBook(new CourseAddressBook());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandClear/ClearFinanceCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandClear;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Clears the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ClearFinanceCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"clear-finance\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Finance Address book has been cleared!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setFinanceAddressBook(new FinanceAddressBook());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandClear/ClearStudentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandClear;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Clears the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ClearStudentCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"clear-student\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Student Address book has been cleared!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setStudentAddressBook(new StudentAddressBook());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandClear/ClearTeacherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandClear;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Clears the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ClearTeacherCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"clear-teacher\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Teacher Address book has been cleared!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setTeacherAddressBook(new TeacherAddressBook());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandDelete/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Deletes a person identified using it\u0027s displayed index from the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      + \": Deletes the person identified by the index number used in the displayed person list.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Index targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  public DeleteCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    model.deletePerson(personToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof DeleteCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandDelete/DeleteCourseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Deletes a course identified using it\u0027s displayed index from the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteCourseCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"delete-course\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \": Deletes the course identified by the index number used in the displayed course list.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DELETE_COURSE_SUCCESS \u003d \"Deleted Course: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteCourseCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cCourse\u003e lastShownList \u003d model.getFilteredCourseList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_COURSE_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Course courseToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.deleteCourse(courseToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_DELETE_COURSE_SUCCESS, courseToDelete));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof DeleteCourseCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 targetIndex.equals(((DeleteCourseCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandDelete/DeleteFinanceCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Deletes a finance identified using it\u0027s displayed index from the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteFinanceCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"delete-finance\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \": Deletes the finance identified by the index number used in the displayed finance list.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DELETE_FINANCE_SUCCESS \u003d \"Deleted Finance: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteFinanceCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cFinance\u003e lastShownList \u003d model.getFilteredFinanceList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_FINANCE_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Finance financeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.deleteFinance(financeToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_DELETE_FINANCE_SUCCESS, financeToDelete));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof DeleteFinanceCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 targetIndex.equals(((DeleteFinanceCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandDelete/DeleteStudentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Deletes a student identified using it\u0027s displayed index from the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteStudentCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"delete-student\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \": Deletes the student identified by the index number used in the displayed student list.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteStudentCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.deleteStudent(studentToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof DeleteStudentCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 targetIndex.equals(((DeleteStudentCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandDelete/DeleteTeacherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Deletes a teacher identified using it\u0027s displayed index from the address book."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteTeacherCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"delete-teacher\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \": Deletes the teacher identified by the index number used in the displayed teacher list.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DELETE_TEACHER_SUCCESS \u003d \"Deleted Teacher: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteTeacherCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cTeacher\u003e lastShownList \u003d model.getFilteredTeacherList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_TEACHER_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Teacher teacherToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.deleteTeacher(teacherToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_DELETE_TEACHER_SUCCESS, teacherToDelete));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof DeleteTeacherCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 targetIndex.equals(((DeleteTeacherCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandEdit/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Edits the details of an existing person in the address book."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Edits the details of the person identified \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"by the index number used in the displayed person list. \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_PHONE + \"PHONE] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_EMAIL + \"EMAIL] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          + PREFIX_PHONE + \"91234567 \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          + PREFIX_EMAIL + \"johndoe@example.com\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Index index;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  private final EditPersonDescriptor editPersonDescriptor;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param index                of the person in the filtered person list to edit"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param editPersonDescriptor details to edit the person with"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(editPersonDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates and returns a {@code Person} with the details of {@code personToEdit} edited with"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code editPersonDescriptor}."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static Person createEditedPerson(Person personToEdit,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    assert personToEdit !\u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof EditCommand)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    EditCommand e \u003d (EditCommand) other;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    return index.equals(e.index)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "   * Stores the details to edit the person with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * corresponding field value of the person."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  public static class EditPersonDescriptor {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Email email;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    private Address address;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditPersonDescriptor() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Copy constructor. A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptor(EditPersonDescriptor toCopy) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      setName(toCopy.name);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      setPhone(toCopy.phone);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      setEmail(toCopy.email);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      setAddress(toCopy.address);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      setTags(toCopy.tags);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setName(Name name) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.name \u003d name;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cPhone\u003e getPhone() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(phone);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setPhone(Phone phone) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.phone \u003d phone;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cEmail\u003e getEmail() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(email);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setEmail(Email email) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.email \u003d email;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cAddress\u003e getAddress() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(address);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setAddress(Address address) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.address \u003d address;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * modification is attempted. Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * internally."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      // short circuit if same object"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      // instanceof handles nulls"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!(other instanceof EditPersonDescriptor)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      // state check"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      EditPersonDescriptor e \u003d (EditPersonDescriptor) other;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      return getName().equals(e.getName())"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getPhone().equals(e.getPhone())"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getEmail().equals(e.getEmail())"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getAddress().equals(e.getAddress())"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 185,
      "ShengXue97": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandEdit/EditCourseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSEID;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_COURSES;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Edits the details of an existing course in the address book."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditCourseCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"edit-course\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Edits the details of the course identified \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"by the index number used in the displayed course list. \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_COURSEID + \"COURSEID] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + PREFIX_NAME + \"Java 101 \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + PREFIX_COURSEID + \"464 \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_EDIT_COURSE_SUCCESS \u003d \"Edited Course: %1$s\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_COURSE \u003d \"This course already exists in the address book.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index index;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final EditCourseDescriptor editCourseDescriptor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param index                of the course in the filtered course list to edit"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param editCourseDescriptor details to edit the course with"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditCourseCommand(Index index, EditCourseDescriptor editCourseDescriptor) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editCourseDescriptor);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.editCourseDescriptor \u003d new EditCourseDescriptor(editCourseDescriptor);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates and returns a {@code Course} with the details of {@code courseToEdit} edited with"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code editCourseDescriptor}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static Course createEditedCourse(Course courseToEdit,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditCourseDescriptor editCourseDescriptor) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    assert courseToEdit !\u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name updatedName \u003d editCourseDescriptor.getName().orElse(courseToEdit.getName());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ID updatedCourseID \u003d editCourseDescriptor.getID().orElse(courseToEdit.getId());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e updatedTags \u003d editCourseDescriptor.getTags().orElse(courseToEdit.getTags());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Course(updatedName, updatedCourseID, updatedTags);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cCourse\u003e lastShownList \u003d model.getFilteredCourseList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_COURSE_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Course courseToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Course editedCourse \u003d createEditedCourse(courseToEdit, editCourseDescriptor);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!courseToEdit.isSameCourse(editedCourse) \u0026\u0026 model.hasCourse(editedCourse)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_COURSE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setCourse(courseToEdit, editedCourse);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredCourseList(PREDICATE_SHOW_ALL_COURSES);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_EDIT_COURSE_SUCCESS, editedCourse));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof EditCourseCommand)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditCourseCommand e \u003d (EditCourseCommand) other;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return index.equals(e.index)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 editCourseDescriptor.equals(e.editCourseDescriptor);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Stores the details to edit the course with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * corresponding field value of the course."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static class EditCourseDescriptor {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private ID courseID;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditCourseDescriptor() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Copy constructor. A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditCourseDescriptor(EditCourseDescriptor toCopy) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setName(toCopy.name);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setID(toCopy.courseID);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setTags(toCopy.tags);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return CollectionUtil.isAnyNonNull(name, courseID, tags);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setName(Name name) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.name \u003d name;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cID\u003e getID() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(courseID);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setID(ID courseID) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.courseID \u003d courseID;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * modification is attempted. Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * internally."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // short circuit if same object"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // instanceof handles nulls"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!(other instanceof EditCourseDescriptor)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // state check"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditCourseDescriptor e \u003d (EditCourseDescriptor) other;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return getName().equals(e.getName())"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getID().equals(e.getID())"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 199
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandEdit/EditFinanceCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FINANCES;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Edits the details of an existing finance in the address book."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditFinanceCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"edit-finance\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Edits the details of the finance identified \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"by the index number used in the displayed finance list. \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_AMOUNT + \"AMOUNT] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + PREFIX_NAME + \"Paid NUS \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + PREFIX_AMOUNT + \"2000 \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_EDIT_FINANCE_SUCCESS \u003d \"Edited Finance: %1$s\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_FINANCE \u003d \"This finance already exists in the address book.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index index;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final EditFinanceDescriptor editFinanceDescriptor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param index                 of the finance in the filtered finance list to edit"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param editFinanceDescriptor details to edit the finance with"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditFinanceCommand(Index index, EditFinanceDescriptor editFinanceDescriptor) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editFinanceDescriptor);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.editFinanceDescriptor \u003d new EditFinanceDescriptor(editFinanceDescriptor);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates and returns a {@code Finance} with the details of {@code financeToEdit} edited with"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code editFinanceDescriptor}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static Finance createEditedFinance(Finance financeToEdit,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditFinanceDescriptor editFinanceDescriptor) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    assert financeToEdit !\u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name updatedName \u003d editFinanceDescriptor.getName().orElse(financeToEdit.getName());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Amount updatedAmount \u003d editFinanceDescriptor.getAmount().orElse(financeToEdit.getAmount());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e updatedTags \u003d editFinanceDescriptor.getTags().orElse(financeToEdit.getTags());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Finance(updatedName, updatedAmount, updatedTags);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cFinance\u003e lastShownList \u003d model.getFilteredFinanceList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_FINANCE_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Finance financeToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Finance editedFinance \u003d createEditedFinance(financeToEdit, editFinanceDescriptor);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!financeToEdit.isSameFinance(editedFinance) \u0026\u0026 model.hasFinance(editedFinance)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_FINANCE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setFinance(financeToEdit, editedFinance);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredFinanceList(PREDICATE_SHOW_ALL_FINANCES);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_EDIT_FINANCE_SUCCESS, editedFinance));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof EditFinanceCommand)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditFinanceCommand e \u003d (EditFinanceCommand) other;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return index.equals(e.index)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 editFinanceDescriptor.equals(e.editFinanceDescriptor);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Stores the details to edit the finance with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * corresponding field value of the finance."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static class EditFinanceDescriptor {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Amount amount;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditFinanceDescriptor() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Copy constructor. A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditFinanceDescriptor(EditFinanceDescriptor toCopy) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setName(toCopy.name);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setAmount(toCopy.amount);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setTags(toCopy.tags);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return CollectionUtil.isAnyNonNull(name, amount, tags);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setName(Name name) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.name \u003d name;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cAmount\u003e getAmount() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(amount);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setAmount(Amount amount) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.amount \u003d amount;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * modification is attempted. Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * internally."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // short circuit if same object"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // instanceof handles nulls"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!(other instanceof EditFinanceDescriptor)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // state check"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditFinanceDescriptor e \u003d (EditFinanceDescriptor) other;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return getName().equals(e.getName())"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getAmount().equals(e.getAmount())"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 199
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandEdit/EditStudentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Edits the details of an existing student in the address book."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditStudentCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"edit-student\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Edits the details of the student identified \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"by the index number used in the displayed student list. \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_COURSE + \"COURSE] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + PREFIX_NAME + \"Bob Ross \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + PREFIX_COURSE + \"Java Programming \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Index index;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final EditStudentDescriptor editStudentDescriptor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param index                 of the student in the filtered student list to edit"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param editStudentDescriptor details to edit the student with"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditStudentCommand(Index index, EditStudentDescriptor editStudentDescriptor) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editStudentDescriptor);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates and returns a {@code Student} with the details of {@code studentToEdit} edited with"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code editStudentDescriptor}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static Student createEditedStudent(Student studentToEdit,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditStudentDescriptor editStudentDescriptor) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    assert studentToEdit !\u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    AssignedCourse updatedCourse \u003d editStudentDescriptor.getCourse()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .orElse(studentToEdit.getCourse());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Student(updatedName, updatedCourse, updatedTags);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Student studentToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_STUDENT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setStudent(studentToEdit, editedStudent);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof EditStudentCommand)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditStudentCommand e \u003d (EditStudentCommand) other;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return index.equals(e.index)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Stores the details to edit the student with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * corresponding field value of the student."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static class EditStudentDescriptor {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private AssignedCourse course;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditStudentDescriptor() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Copy constructor. A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditStudentDescriptor(EditStudentDescriptor toCopy) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setName(toCopy.name);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setCourse(toCopy.course);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setTags(toCopy.tags);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return CollectionUtil.isAnyNonNull(name, course, tags);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setName(Name name) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.name \u003d name;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cAssignedCourse\u003e getCourse() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(course);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setCourse(AssignedCourse course) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.course \u003d course;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * modification is attempted. Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * internally."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // short circuit if same object"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // instanceof handles nulls"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!(other instanceof EditStudentDescriptor)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      // state check"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditStudentDescriptor e \u003d (EditStudentDescriptor) other;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return getName().equals(e.getName())"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getCourse().equals(e.getCourse())"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 200
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandEdit/EditTeacherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEACHERS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Edits the details of an existing teacher in the address book."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditTeacherCommand extends Command {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"edit-teacher\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Edits the details of the teacher identified \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"by the index number used in the displayed teacher list. \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_PHONE + \"PHONE] \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_EMAIL + \"EMAIL] \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"[\" + PREFIX_SALARY + \"SALARY] \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          + PREFIX_PHONE + \"91234567 \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          + PREFIX_EMAIL + \"johndoe@example.com\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_EDIT_TEACHER_SUCCESS \u003d \"Edited Teacher: %1$s\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_TEACHER \u003d \"This teacher already exists in the address book.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Index index;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final EditTeacherDescriptor editTeacherDescriptor;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param index                 of the teacher in the filtered teacher list to edit"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param editTeacherDescriptor details to edit the teacher with"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditTeacherCommand(Index index, EditTeacherDescriptor editTeacherDescriptor) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editTeacherDescriptor);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.editTeacherDescriptor \u003d new EditTeacherDescriptor(editTeacherDescriptor);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates and returns a {@code Teacher} with the details of {@code teacherToEdit} edited with"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code editTeacherDescriptor}."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static Teacher createEditedTeacher(Teacher teacherToEdit,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditTeacherDescriptor editTeacherDescriptor) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    assert teacherToEdit !\u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name updatedName \u003d editTeacherDescriptor.getName().orElse(teacherToEdit.getName());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Phone updatedPhone \u003d editTeacherDescriptor.getPhone().orElse(teacherToEdit.getPhone());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Email updatedEmail \u003d editTeacherDescriptor.getEmail().orElse(teacherToEdit.getEmail());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Salary updatedSalary \u003d editTeacherDescriptor.getSalary().orElse(teacherToEdit.getSalary());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Address updatedAddress \u003d editTeacherDescriptor.getAddress().orElse(teacherToEdit.getAddress());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e updatedTags \u003d editTeacherDescriptor.getTags().orElse(teacherToEdit.getTags());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Teacher(updatedName, updatedPhone, updatedEmail, updatedSalary, updatedAddress,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        updatedTags);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    List\u003cTeacher\u003e lastShownList \u003d model.getFilteredTeacherList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(Messages.MESSAGE_INVALID_TEACHER_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Teacher teacherToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Teacher editedTeacher \u003d createEditedTeacher(teacherToEdit, editTeacherDescriptor);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!teacherToEdit.isSameTeacher(editedTeacher) \u0026\u0026 model.hasTeacher(editedTeacher)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CommandException(MESSAGE_DUPLICATE_TEACHER);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.setTeacher(teacherToEdit, editedTeacher);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredTeacherList(PREDICATE_SHOW_ALL_TEACHERS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(String.format(MESSAGE_EDIT_TEACHER_SUCCESS, editedTeacher));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof EditTeacherCommand)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditTeacherCommand e \u003d (EditTeacherCommand) other;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    return index.equals(e.index)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 editTeacherDescriptor.equals(e.editTeacherDescriptor);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Stores the details to edit the teacher with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * corresponding field value of the teacher."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static class EditTeacherDescriptor {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    private Email email;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Salary salary;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    private Address address;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditTeacherDescriptor() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Copy constructor. A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public EditTeacherDescriptor(EditTeacherDescriptor toCopy) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      setName(toCopy.name);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      setPhone(toCopy.phone);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      setEmail(toCopy.email);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      setSalary(toCopy.salary);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      setAddress(toCopy.address);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      setTags(toCopy.tags);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return CollectionUtil.isAnyNonNull(name, phone, email, salary, address, tags);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setName(Name name) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.name \u003d name;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cPhone\u003e getPhone() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(phone);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setPhone(Phone phone) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.phone \u003d phone;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cEmail\u003e getEmail() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(email);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setEmail(Email email) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.email \u003d email;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Optional\u003cSalary\u003e getSalary() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.ofNullable(salary);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setSalary(Salary salary) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.salary \u003d salary;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cAddress\u003e getAddress() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.ofNullable(address);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setAddress(Address address) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.address \u003d address;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * modification is attempted. Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * internally."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      // short circuit if same object"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "      if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      // instanceof handles nulls"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (!(other instanceof EditTeacherDescriptor)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      // state check"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      EditTeacherDescriptor e \u003d (EditTeacherDescriptor) other;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      return getName().equals(e.getName())"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getPhone().equals(e.getPhone())"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getEmail().equals(e.getEmail())"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u0026\u0026 getSalary().equals(e.getSalary())"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getAddress().equals(e.getAddress())"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 152,
      "ShengXue97": 93
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandFind/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Finds and lists all persons in address book whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Finds all persons whose names contain any of \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  private final NameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  public FindCommand(NameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    model.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getFilteredPersonList().size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof FindCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 39,
      "ShengXue97": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandFind/FindCourseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Finds and lists all courses in address book whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindCourseCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"find-course\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Finds all courses whose names contain any of \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final CourseNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindCourseCommand(CourseNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredCourseList(predicate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        String.format(Messages.MESSAGE_COURSES_LISTED_OVERVIEW,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getFilteredCourseList().size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof FindCourseCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 predicate.equals(((FindCourseCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandFind/FindFinanceCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Finds and lists all finances in address book whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindFinanceCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"find-finance\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Finds all finances whose names contain any of \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final FinanceNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindFinanceCommand(FinanceNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredFinanceList(predicate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        String.format(Messages.MESSAGE_FINANCES_LISTED_OVERVIEW,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getFilteredFinanceList().size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof FindFinanceCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 predicate.equals(((FindFinanceCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandFind/FindStudentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Finds and lists all students in address book whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindStudentCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"find-student\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Finds all students whose names contain any of \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final StudentNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindStudentCommand(StudentNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredStudentList(predicate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getFilteredStudentList().size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof FindStudentCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 predicate.equals(((FindStudentCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandFind/FindTeacherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Finds and lists all teachers in address book whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindTeacherCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"find-teacher\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      COMMAND_WORD + \": Finds all teachers whose names contain any of \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final TeacherNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindTeacherCommand(TeacherNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredTeacherList(predicate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        String.format(Messages.MESSAGE_TEACHERS_LISTED_OVERVIEW,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getFilteredTeacherList().size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof FindTeacherCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 predicate.equals(((FindTeacherCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandList/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Lists all persons in the address book to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandList/ListCourseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_COURSES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Lists all persons in the address book to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ListCourseCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"list-course\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Listed all courses\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredCourseList(PREDICATE_SHOW_ALL_COURSES);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandList/ListFinanceCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FINANCES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Lists all persons in the address book to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ListFinanceCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"list-finance\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Listed all finances\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredFinanceList(PREDICATE_SHOW_ALL_FINANCES);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandList/ListStudentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Lists all persons in the address book to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ListStudentCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"list-student\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/commandList/ListTeacherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.commands.commandList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEACHERS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Lists all persons in the address book to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ListTeacherCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String COMMAND_WORD \u003d \"list-teacher\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_SUCCESS \u003d \"Listed all teachers\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    model.updateFilteredTeacherList(PREDICATE_SHOW_ALL_TEACHERS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * cause}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    super(message, cause);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCourseCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddFinanceCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddStudentCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddTeacherCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearCourseCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearFinanceCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearStudentCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearTeacherCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCourseCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteFinanceCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteStudentCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteTeacherCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCourseCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditFinanceCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditStudentCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditTeacherCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCourseCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindFinanceCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindStudentCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindTeacherCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListCourseCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListFinanceCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListStudentCommand;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListTeacherCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserAdd.AddCommandParser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserAdd.AddCourseCommandParser;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserAdd.AddFinanceCommandParser;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserAdd.AddStudentCommandParser;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserAdd.AddTeacherCommandParser;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserDelete.DeleteCommandParser;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserDelete.DeleteCourseCommandParser;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserDelete.DeleteFinanceCommandParser;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserDelete.DeleteStudentCommandParser;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserDelete.DeleteTeacherCommandParser;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserEdit.EditCommandParser;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserEdit.EditCourseCommandParser;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserEdit.EditFinanceCommandParser;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserEdit.EditStudentCommandParser;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserEdit.EditTeacherCommandParser;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserFind.FindCommandParser;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserFind.FindCourseCommandParser;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserFind.FindFinanceCommandParser;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserFind.FindStudentCommandParser;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserFind.FindTeacherCommandParser;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParser {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "   * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      .compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses user input into command for execution."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param userInput full user input string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return the command based on the user input"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!matcher.matches()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (commandWord) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case AddTeacherCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new AddTeacherCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case AddStudentCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new AddStudentCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case AddFinanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new AddFinanceCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case AddCourseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new AddCourseCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case DeleteTeacherCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new DeleteTeacherCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case DeleteStudentCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new DeleteStudentCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case DeleteFinanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new DeleteFinanceCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case DeleteCourseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new DeleteCourseCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case FindTeacherCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new FindTeacherCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case FindStudentCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new FindStudentCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case FindFinanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new FindFinanceCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case FindCourseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new FindCourseCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ListTeacherCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ListTeacherCommand();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ListStudentCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ListStudentCommand();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ListFinanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ListFinanceCommand();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ListCourseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ListCourseCommand();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ClearTeacherCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ClearTeacherCommand();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ClearStudentCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ClearStudentCommand();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ClearFinanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ClearFinanceCommand();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ClearCourseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ClearCourseCommand();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case EditTeacherCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new EditTeacherCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case EditStudentCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new EditStudentCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case EditFinanceCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new EditFinanceCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case EditCourseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new EditCourseCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ClearCommand();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        return new HelpCommand();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 58,
      "ShengXue97": 135
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArgumentMultimap.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Stores mapping of prefixes to their respective arguments. Each key may be associated with"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * multiple argument values. Values for a given key are stored in a list, and the insertion ordering"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * is maintained. Keys are unique, but the list of argument values may contain duplicate argument"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * values, i.e. the same argument value can be inserted multiple times for the same prefix."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentMultimap {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Prefixes mapped to their respective arguments"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   **/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Associates the specified argument value with {@code prefix} key in this map. If the map"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * previously contained a mapping for the key, the new value is appended to the list of existing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * values."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param prefix   Prefix key with which the specified argument value is to be associated"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param argValue Argument value to be associated with the specified prefix key"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  public void put(Prefix prefix, String argValue) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cString\u003e argValues \u003d getAllValues(prefix);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    argValues.add(argValue);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    argMultimap.put(prefix, argValues);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the last value of {@code prefix}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  public Optional\u003cString\u003e getValue(Prefix prefix) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cString\u003e values \u003d getAllValues(prefix);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns all values of {@code prefix}. If the prefix does not exist or has no values, this will"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * return an empty list. Modifying the returned list will not affect the underlying data structure"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * of the ArgumentMultimap."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  public List\u003cString\u003e getAllValues(Prefix prefix) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!argMultimap.containsKey(prefix)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    return new ArrayList\u003c\u003e(argMultimap.get(prefix));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  public String getPreamble() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    return getValue(new Prefix(\"\")).orElse(\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 49,
      "ShengXue97": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e e.g."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * example.\u003cbr\u003e 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e 3."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentTokenizer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * to their respective argument values. Only the given prefixes will be recognized in the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * arguments string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                   ...}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param prefixes   Prefixes to tokenize the arguments string with"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    return extractArguments(argsString, positions);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * Finds all zero-based prefix positions in the given arguments string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                   ...}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param prefixes   Prefixes to find in the arguments string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return List of zero-based prefix positions in the given arguments string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      Prefix... prefixes) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    return Arrays.stream(prefixes)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   * {@see findAllPrefixPositions}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    while (prefixPosition !\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      positions.add(extendedPrefix);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    return positions;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the index of the first occurrence of {@code prefix} in {@code argsString} starting from"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * index {@code fromIndex}. An occurrence is valid if there is a whitespace before {@code prefix}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns -1 if no such occurrence can be found."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * \u003cp\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and {@code fromIndex} \u003d 0, this"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * method returns -1 as there are no valid occurrences of \"p/\" with whitespace before it. However,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * if {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and {@code fromIndex} \u003d 0, this"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * method returns 5."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    return prefixIndex \u003d\u003d -1 ? -1"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        : prefixIndex + 1; // +1 as offset for whitespace"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * that maps the extracted prefixes to their respective arguments. Prefixes are extracted based on"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * their zero-based positions in {@code argsString}."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                        \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static ArgumentMultimap extractArguments(String argsString,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      List\u003cPrefixPosition\u003e prefixPositions) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    // Sort by start position"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    prefixPositions"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    // Insert a PrefixPosition to represent the preamble"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    prefixPositions.add(0, preambleMarker);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    // Add a dummy PrefixPosition to represent the end of the string"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    prefixPositions.add(endPositionMarker);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    // Map prefixes to their argument values (if any)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d new ArgumentMultimap();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      // Extract and store prefixes and their arguments"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          prefixPositions.get(i + 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      argMultimap.put(argPrefix, argValue);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    return argMultimap;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the trimmed value of the argument in the arguments string specified by {@code"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * currentPrefixPosition}. The end position of the value is determined by {@code"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * nextPrefixPosition}."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  private static String extractArgumentValue(String argsString,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      PrefixPosition currentPrefixPosition,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      PrefixPosition nextPrefixPosition) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    Prefix prefix \u003d currentPrefixPosition.getPrefix();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    return value.trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   * Represents a prefix\u0027s position in an arguments string."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  private static class PrefixPosition {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Prefix prefix;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private int startPosition;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    PrefixPosition(Prefix prefix, int startPosition) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      this.startPosition \u003d startPosition;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    int getStartPosition() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      return startPosition;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    Prefix getPrefix() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      return prefix;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 119,
      "ShengXue97": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final Prefix PREFIX_SALARY \u003d new Prefix(\"s/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final Prefix PREFIX_COURSE \u003d new Prefix(\"co/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final Prefix PREFIX_COURSEID \u003d new Prefix(\"cid/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final Prefix PREFIX_CURRICULUM \u003d new Prefix(\"cu/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final Prefix PREFIX_PAYMENTPLAN \u003d new Prefix(\"pp/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final Prefix PREFIX_AMOUNT \u003d new Prefix(\"a/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "ShengXue97": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Parser\u003cT extends Command\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses {@code userInput} into a command and returns it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * whitespaces will be trimmed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String name} into a {@code Name}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Name parseName(String name) throws ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Name(trimmedName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String course} into a {@code AssignedCourse}. Leading and trailing whitespaces"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * will be trimmed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the given {@code course} is invalid."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static AssignedCourse parseCourse(String course) throws ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(course);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    String trimmedCourse \u003d course.trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!AssignedCourse.isValidCourse(trimmedCourse)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(AssignedCourse.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new AssignedCourse(trimmedCourse);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String courseID} into a {@code ID}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the given {@code courseID} is invalid."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static ID parseCourseID(String courseID) throws ParseException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(courseID);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    String trimmedCourseID \u003d courseID.trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!ID.isValidId(trimmedCourseID)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(ID.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new ID(trimmedCourseID);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String amount} into a {@code Amount}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the given {@code amount} is invalid."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static Amount parseAmount(String amount) throws ParseException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(amount);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    String trimmedAmount \u003d amount.trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Amount.isValidAmount(trimmedAmount)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(Amount.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Amount(trimmedAmount);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String phone} into a {@code Phone}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the given {@code phone} is invalid."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Phone parsePhone(String phone) throws ParseException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(phone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedPhone \u003d phone.trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Phone.isValidPhone(trimmedPhone)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Phone(trimmedPhone);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String address} into an {@code Address}. Leading and trailing whitespaces will"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * be trimmed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the given {@code address} is invalid."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Address parseAddress(String address) throws ParseException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(address);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedAddress \u003d address.trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Address.isValidAddress(trimmedAddress)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Address(trimmedAddress);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String email} into an {@code Email}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the given {@code email} is invalid."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Email parseEmail(String email) throws ParseException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(email);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedEmail \u003d email.trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Email.isValidEmail(trimmedEmail)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Email(trimmedEmail);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String Salary} into an {@code Salary}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the given {@code salary} is invalid."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static Salary parseSalary(String salary) throws ParseException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(salary);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    String trimmedSalary \u003d salary.trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Salary.isValidSalary(trimmedSalary)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(Salary.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Salary(trimmedSalary);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses a {@code String tag} into a {@code Tag}. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * trimmed."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(tag);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedTag \u003d tag.trim();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Tag.isValidTagName(trimmedTag)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Tag(trimmedTag);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(tags);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    for (String tagName : tags) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    return tagSet;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 116,
      "ShengXue97": 72
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Prefix.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A prefix that marks the beginning of an argument in an arguments string. E.g. \u0027t/\u0027 in \u0027add James"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * t/ friend\u0027."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Prefix {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  private final String prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  public Prefix(String prefix) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public String getPrefix() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    return prefix;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    return getPrefix();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    return prefix \u003d\u003d null ? 0 : prefix.hashCode();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(obj instanceof Prefix)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    Prefix otherPrefix \u003d (Prefix) obj;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return otherPrefix.getPrefix().equals(getPrefix());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserAdd/AddCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * ArgumentMultimap}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the AddCommand and returns an"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * AddCommand object for execution."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  public AddCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    Person person \u003d new Person(name, phone, email, address, tagList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    return new AddCommand(person);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "ShengXue97": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserAdd/AddCourseCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSEID;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCourseCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddCourseCommandParser implements Parser\u003cAddCourseCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the AddCommand and returns an"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * AddCommand object for execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddCourseCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COURSEID, PREFIX_TAG);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COURSEID)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCourseCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ID courseID \u003d ParserUtil.parseCourseID(argMultimap.getValue(PREFIX_COURSEID).get());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Course course \u003d new Course(name, courseID, tagList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new AddCourseCommand(course);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserAdd/AddFinanceCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddFinanceCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddFinanceCommandParser implements Parser\u003cAddFinanceCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the AddCommand and returns an"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * AddCommand object for execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddFinanceCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_AMOUNT, PREFIX_TAG);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_AMOUNT)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFinanceCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Amount amount \u003d ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Finance finance \u003d new Finance(name, amount, tagList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new AddFinanceCommand(finance);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserAdd/AddStudentCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddStudentCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the AddCommand and returns an"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * AddCommand object for execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddStudentCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COURSE, PREFIX_TAG);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COURSE)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    AssignedCourse course \u003d ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Student student \u003d new Student(name, course, tagList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new AddStudentCommand(student);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserAdd/AddTeacherCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserAdd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddTeacherCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AddTeacherCommandParser implements Parser\u003cAddTeacherCommand\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * ArgumentMultimap}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the AddCommand and returns an"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * AddCommand object for execution."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddTeacherCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SALARY, PREFIX_ADDRESS,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                PREFIX_TAG);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_SALARY,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        PREFIX_EMAIL)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTeacherCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Salary salary \u003d ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Teacher teacher \u003d new Teacher(name, phone, email, salary, address, tagList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new AddTeacherCommand(teacher);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 73
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserDelete/DeleteCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * DeleteCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  public DeleteCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      return new DeleteCommand(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "ShengXue97": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserDelete/DeleteCourseCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCourseCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteCourseCommandParser implements Parser\u003cDeleteCourseCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * DeleteCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteCourseCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return new DeleteCourseCommand(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCourseCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "ShengXue97": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserDelete/DeleteFinanceCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteFinanceCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteFinanceCommandParser implements Parser\u003cDeleteFinanceCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * DeleteCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteFinanceCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return new DeleteFinanceCommand(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFinanceCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "ShengXue97": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserDelete/DeleteStudentCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteStudentCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteStudentCommandParser implements Parser\u003cDeleteStudentCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * DeleteCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteStudentCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return new DeleteStudentCommand(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "ShengXue97": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserDelete/DeleteTeacherCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserDelete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteTeacherCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new DeleteCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DeleteTeacherCommandParser implements Parser\u003cDeleteTeacherCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * DeleteCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DeleteTeacherCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return new DeleteTeacherCommand(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTeacherCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "ShengXue97": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserEdit/EditCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParser implements Parser\u003cEditCommand\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the EditCommand and returns an"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * EditCommand object for execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  public EditCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editPersonDescriptor"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editPersonDescriptor"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editPersonDescriptor"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!editPersonDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    return new EditCommand(index, editPersonDescriptor);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty. If"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code tags} contain only one element which is an empty string, it will be parsed into a {@code"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Set\u003cTag\u003e} containing zero tags."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    assert tags !\u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Collection\u003cString\u003e tagSet \u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    return Optional.of(ParserUtil.parseTags(tagSet));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 67,
      "ShengXue97": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserEdit/EditCourseCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSEID;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCourseCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCourseCommand.EditCourseDescriptor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditCourseCommandParser implements Parser\u003cEditCourseCommand\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the EditCommand and returns an"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * EditCommand object for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditCourseCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COURSEID, PREFIX_TAG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCourseCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditCourseDescriptor editCourseDescriptor \u003d new EditCourseDescriptor();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editCourseDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (argMultimap.getValue(PREFIX_COURSEID).isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editCourseDescriptor"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setID(ParserUtil.parseCourseID(argMultimap.getValue(PREFIX_COURSEID).get()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCourseDescriptor::setTags);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!editCourseDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(EditCourseCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new EditCourseCommand(index, editCourseDescriptor);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty. If"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code tags} contain only one element which is an empty string, it will be parsed into a {@code"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Set\u003cTag\u003e} containing zero tags."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    assert tags !\u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Collection\u003cString\u003e tagSet \u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    return Optional.of(ParserUtil.parseTags(tagSet));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "ShengXue97": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserEdit/EditFinanceCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditFinanceCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditFinanceCommand.EditFinanceDescriptor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditFinanceCommandParser implements Parser\u003cEditFinanceCommand\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the EditCommand and returns an"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * EditCommand object for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditFinanceCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_AMOUNT, PREFIX_TAG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditFinanceCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditFinanceDescriptor editFinanceDescriptor \u003d new EditFinanceDescriptor();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editFinanceDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (argMultimap.getValue(PREFIX_AMOUNT).isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editFinanceDescriptor"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setAmount(ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .ifPresent(editFinanceDescriptor::setTags);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!editFinanceDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(EditFinanceCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new EditFinanceCommand(index, editFinanceDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty. If"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code tags} contain only one element which is an empty string, it will be parsed into a {@code"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Set\u003cTag\u003e} containing zero tags."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    assert tags !\u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Collection\u003cString\u003e tagSet \u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    return Optional.of(ParserUtil.parseTags(tagSet));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "ShengXue97": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserEdit/EditStudentCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditStudentCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditStudentCommand.EditStudentDescriptor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditStudentCommandParser implements Parser\u003cEditStudentCommand\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the EditCommand and returns an"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * EditCommand object for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditStudentCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COURSE, PREFIX_TAG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditStudentCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (argMultimap.getValue(PREFIX_COURSE).isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editStudentDescriptor"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setCourse(ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .ifPresent(editStudentDescriptor::setTags);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!editStudentDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(EditStudentCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new EditStudentCommand(index, editStudentDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty. If"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code tags} contain only one element which is an empty string, it will be parsed into a {@code"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Set\u003cTag\u003e} containing zero tags."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    assert tags !\u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Collection\u003cString\u003e tagSet \u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    return Optional.of(ParserUtil.parseTags(tagSet));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "ShengXue97": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserEdit/EditTeacherCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserEdit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditTeacherCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditTeacherCommand.EditTeacherDescriptor;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class EditTeacherCommandParser implements Parser\u003cEditTeacherCommand\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the EditCommand and returns an"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * EditCommand object for execution."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public EditTeacherCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ArgumentTokenizer"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SALARY, PREFIX_ADDRESS,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                PREFIX_TAG);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (ParseException pe) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTeacherCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EditTeacherDescriptor editTeacherDescriptor \u003d new EditTeacherDescriptor();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editTeacherDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editTeacherDescriptor"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editTeacherDescriptor"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (argMultimap.getValue(PREFIX_SALARY).isPresent()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editTeacherDescriptor"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setSalary(ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      editTeacherDescriptor"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          .setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .ifPresent(editTeacherDescriptor::setTags);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!editTeacherDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new ParseException(EditTeacherCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new EditTeacherCommand(index, editTeacherDescriptor);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty. If"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code tags} contain only one element which is an empty string, it will be parsed into a {@code"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Set\u003cTag\u003e} containing zero tags."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    assert tags !\u003d null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Collection\u003cString\u003e tagSet \u003d"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    return Optional.of(ParserUtil.parseTags(tagSet));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 59,
      "ShengXue97": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserFind/FindCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandParser implements Parser\u003cFindCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the FindCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * FindCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  public FindCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 28,
      "ShengXue97": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserFind/FindCourseCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCourseCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindCourseCommandParser implements Parser\u003cFindCourseCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the FindCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * FindCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindCourseCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCourseCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new FindCourseCommand("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new CourseNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserFind/FindFinanceCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindFinanceCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindFinanceCommandParser implements Parser\u003cFindFinanceCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the FindCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * FindCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindFinanceCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFinanceCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new FindFinanceCommand("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new FinanceNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserFind/FindStudentCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindStudentCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindStudentCommandParser implements Parser\u003cFindStudentCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the FindCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * FindCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindStudentCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStudentCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new FindStudentCommand("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new StudentNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/parserFind/FindTeacherCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.logic.parser.parserFind;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindTeacherCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FindTeacherCommandParser implements Parser\u003cFindTeacherCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Parses the given {@code String} of arguments in the context of the FindCommand and returns a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * FindCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FindTeacherCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new ParseException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTeacherCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new FindTeacherCommand("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new TeacherNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/AddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.UniquePersonList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * comparison)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBook implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  private final UniquePersonList persons;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   *   among constructors."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */ {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    persons \u003d new UniquePersonList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AddressBook() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public AddressBook(ReadOnlyAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    resetData(toBeCopied);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  //// list overwrite operations"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of the person list with {@code persons}. {@code persons} must not contain"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate persons."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    this.persons.setPersons(persons);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  public void resetData(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(newData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    setPersons(newData.getPersonList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  //// person-level operations"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(person);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    return persons.contains(person);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a person to the address book. The person must not already exist in the address book."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  public void addPerson(Person p) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    persons.add(p);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given person {@code target} in the list with {@code editedPerson}. {@code target}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * must exist in the address book. The person identity of {@code editedPerson} must not be the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * same as another existing person in the address book."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(editedPerson);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    persons.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  public void removePerson(Person key) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    persons.remove(key);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  //// util methods"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    return persons.asUnmodifiableObservableList().size() + \" persons\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: refine later"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    return persons.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof AddressBook // instanceof handles nulls"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 persons.equals(((AddressBook) other).persons));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    return persons.hashCode();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 105,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code Predicate} that always evaluate to true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Predicate\u003cTeacher\u003e PREDICATE_SHOW_ALL_TEACHERS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Predicate\u003cFinance\u003e PREDICATE_SHOW_ALL_FINANCES \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Predicate\u003cCourse\u003e PREDICATE_SHOW_ALL_COURSES \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  void setAddressBookFilePath(Path addressBookFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the AddressBook"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   * Replaces address book data with the data in {@code addressBook}."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  void setAddressBook(ReadOnlyAddressBook addressBook);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  boolean hasPerson(Person person);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Deletes the given person. The person must exist in the address book."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  void deletePerson(Person target);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the given person. {@code person} must not already exist in the address book."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  void addPerson(Person person);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given person {@code target} with {@code editedPerson}. {@code target} must exist"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * in the address book. The person identity of {@code editedPerson} must not be the same as"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing person in the address book."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  void setPerson(Person target, Person editedPerson);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered person list"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the filter of the filtered person list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setTeacherAddressBookFilePath(Path teacherAddressBookFilePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the teacherAddressBook"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyTeacherAddressBook getTeacherAddressBook();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces teacher address book data with the data in {@code teacerAddressBook}."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a teacher with the same identity as {@code teacher} exists in the address"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * book."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  boolean hasTeacher(Teacher teacher);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Deletes the given teacher. The teacher must exist in the address book."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void deleteTeacher(Teacher target);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the given teacher. {@code teacher} must not already exist in the address book."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void addTeacher(Teacher teacher);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given teacher {@code target} with {@code editedTeacher}. {@code target} must exist"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * in the address book. The teacher identity of {@code editedTeacher} must not be the same as"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing teacher in the address book."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setTeacher(Teacher target, Teacher editedTeacher);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered teacher list"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cTeacher\u003e getFilteredTeacherList();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Updates the filter of the filtered teacher list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void updateFilteredTeacherList(Predicate\u003cTeacher\u003e predicate);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setStudentAddressBookFilePath(Path studentAddressBookFilePath);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the studentAddressBook"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyStudentAddressBook getStudentAddressBook();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces student address book data with the data in {@code teacerAddressBook}."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a student with the same identity as {@code student} exists in the address"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * book."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  boolean hasStudent(Student student);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Deletes the given student. The student must exist in the address book."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void deleteStudent(Student target);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the given student. {@code student} must not already exist in the address book."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void addStudent(Student student);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given student {@code target} with {@code editedStudent}. {@code target} must exist"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * in the address book. The student identity of {@code editedStudent} must not be the same as"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing student in the address book."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setStudent(Student target, Student editedStudent);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered student list"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cStudent\u003e getFilteredStudentList();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Updates the filter of the filtered student list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setCourseAddressBookFilePath(Path courseAddressBookFilePath);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the courseAddressBook"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyCourseAddressBook getCourseAddressBook();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces course address book data with the data in {@code teacerAddressBook}."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a course with the same identity as {@code course} exists in the address book."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  boolean hasCourse(Course course);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Deletes the given course. The course must exist in the address book."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void deleteCourse(Course target);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the given course. {@code course} must not already exist in the address book."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void addCourse(Course course);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given course {@code target} with {@code editedCourse}. {@code target} must exist"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * in the address book. The course identity of {@code editedCourse} must not be the same as"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing course in the address book."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setCourse(Course target, Course editedCourse);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered course list"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cCourse\u003e getFilteredCourseList();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Updates the filter of the filtered course list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void updateFilteredCourseList(Predicate\u003cCourse\u003e predicate);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setFinanceAddressBookFilePath(Path financeAddressBookFilePath);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the financeAddressBook"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ReadOnlyFinanceAddressBook getFinanceAddressBook();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces finance address book data with the data in {@code teacerAddressBook}."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a finance with the same identity as {@code finance} exists in the address"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * book."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  boolean hasFinance(Finance finance);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Deletes the given finance. The finance must exist in the address book."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void deleteFinance(Finance target);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds the given finance. {@code finance} must not already exist in the address book."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void addFinance(Finance finance);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given finance {@code target} with {@code editedFinance}. {@code target} must exist"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * in the address book. The finance identity of {@code editedFinance} must not be the same as"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing finance in the address book."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void setFinance(Finance target, Finance editedFinance);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the filtered finance list"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cFinance\u003e getFilteredFinanceList();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Updates the filter of the filtered finance list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void updateFilteredFinanceList(Predicate\u003cFinance\u003e predicate);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 65,
      "ShengXue97": 266
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  private final AddressBook addressBook;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final TeacherAddressBook teacherAddressBook;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final StudentAddressBook studentAddressBook;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final FinanceAddressBook financeAddressBook;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final CourseAddressBook courseAddressBook;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  private final FilteredList\u003cPerson\u003e filteredPersons;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final FilteredList\u003cTeacher\u003e filteredTeachers;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final FilteredList\u003cStudent\u003e filteredStudents;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final FilteredList\u003cFinance\u003e filteredFinances;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final FilteredList\u003cCourse\u003e filteredCourses;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ModelManager(ReadOnlyAddressBook addressBook,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      ReadOnlyTeacherAddressBook teacherAddressBook, ReadOnlyStudentAddressBook studentAddressBook,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      ReadOnlyFinanceAddressBook financeAddressBook, ReadOnlyCourseAddressBook courseAddressBook,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(teacherAddressBook, studentAddressBook, financeAddressBook, courseAddressBook,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        userPrefs);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Initializing with address book: \" + studentAddressBook"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        + \"Initializing with  teacher address book: \" + teacherAddressBook + \" and user prefs \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        + userPrefs);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    this.addressBook \u003d new AddressBook(addressBook);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teacherAddressBook \u003d new TeacherAddressBook(teacherAddressBook);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.studentAddressBook \u003d new StudentAddressBook(studentAddressBook);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.financeAddressBook \u003d new FinanceAddressBook(financeAddressBook);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courseAddressBook \u003d new CourseAddressBook(courseAddressBook);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredTeachers \u003d new FilteredList\u003c\u003e(this.teacherAddressBook.getTeacherList());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredStudents \u003d new FilteredList\u003c\u003e(this.studentAddressBook.getStudentList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredFinances \u003d new FilteredList\u003c\u003e(this.financeAddressBook.getFinanceList());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredCourses \u003d new FilteredList\u003c\u003e(this.courseAddressBook.getCourseList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  public ModelManager() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this(new AddressBook(), new TeacherAddressBook(), new StudentAddressBook(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new FinanceAddressBook(), new CourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return userPrefs;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return userPrefs.getAddressBookFilePath();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    userPrefs.setAddressBookFilePath(addressBookFilePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getTeacherAddressBookFilePath() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return userPrefs.getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeacherAddressBookFilePath(Path teacherAddressBookFilePath) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(teacherAddressBookFilePath);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    userPrefs.setTeacherAddressBookFilePath(teacherAddressBookFilePath);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getStudentAddressBookFilePath() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return userPrefs.getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudentAddressBookFilePath(Path studentAddressBookFilePath) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(studentAddressBookFilePath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    userPrefs.setStudentAddressBookFilePath(studentAddressBookFilePath);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getFinanceAddressBookFilePath() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return userPrefs.getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinanceAddressBookFilePath(Path financeAddressBookFilePath) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(financeAddressBookFilePath);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    userPrefs.setFinanceAddressBookFilePath(financeAddressBookFilePath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getCourseAddressBookFilePath() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return userPrefs.getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourseAddressBookFilePath(Path courseAddressBookFilePath) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(courseAddressBookFilePath);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    userPrefs.setCourseAddressBookFilePath(courseAddressBookFilePath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return addressBook;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setAddressBook(ReadOnlyAddressBook addressBook) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    this.addressBook.resetData(addressBook);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(person);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    return addressBook.hasPerson(person);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "  public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    addressBook.removePerson(target);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  public void addPerson(Person person) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    addressBook.addPerson(person);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    addressBook.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyTeacherAddressBook getTeacherAddressBook() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBook;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teacherAddressBook.resetData(teacherAddressBook);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasTeacher(Teacher teacher) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(teacher);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBook.hasTeachers(teacher);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void deleteTeacher(Teacher target) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherAddressBook.removeTeacher(target);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addTeacher(Teacher teacher) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherAddressBook.addTeacher(teacher);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    updateFilteredTeacherList(PREDICATE_SHOW_ALL_TEACHERS);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeacher(Teacher target, Teacher editedTeacher) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedTeacher);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherAddressBook.setTeacher(target, editedTeacher);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyStudentAddressBook getStudentAddressBook() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return studentAddressBook;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.studentAddressBook.resetData(studentAddressBook);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasStudent(Student student) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(student);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return studentAddressBook.hasStudents(student);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void deleteStudent(Student target) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentAddressBook.removeStudent(target);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addStudent(Student student) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentAddressBook.addStudent(student);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudent(Student target, Student editedStudent) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedStudent);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentAddressBook.setStudent(target, editedStudent);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyFinanceAddressBook getFinanceAddressBook() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return financeAddressBook;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.financeAddressBook.resetData(financeAddressBook);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasFinance(Finance finance) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(finance);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return financeAddressBook.hasFinances(finance);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void deleteFinance(Finance target) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeAddressBook.removeFinance(target);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addFinance(Finance finance) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeAddressBook.addFinance(finance);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    updateFilteredFinanceList(PREDICATE_SHOW_ALL_FINANCES);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinance(Finance target, Finance editedFinance) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedFinance);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeAddressBook.setFinance(target, editedFinance);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ReadOnlyCourseAddressBook getCourseAddressBook() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courseAddressBook;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courseAddressBook.resetData(courseAddressBook);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasCourse(Course course) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(course);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courseAddressBook.hasCourses(course);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void deleteCourse(Course target) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseAddressBook.removeCourse(target);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addCourse(Course course) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseAddressBook.addCourse(course);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    updateFilteredCourseList(PREDICATE_SHOW_ALL_COURSES);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourse(Course target, Course editedCourse) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedCourse);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseAddressBook.setCourse(target, editedCourse);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "   * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "  public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    return filteredPersons;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "  public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(predicate);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    filteredPersons.setPredicate(predicate);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the list of {@code Teacher} backed by the internal list of"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code versionedTeacherAddressBook}"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cTeacher\u003e getFilteredTeacherList() {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filteredTeachers;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void updateFilteredTeacherList(Predicate\u003cTeacher\u003e predicate) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(predicate);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredTeachers.setPredicate(predicate);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code versionedStudentAddressBook}"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cStudent\u003e getFilteredStudentList() {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filteredStudents;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(predicate);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredStudents.setPredicate(predicate);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the list of {@code Finance} backed by the internal list of"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code versionedFinanceAddressBook}"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cFinance\u003e getFilteredFinanceList() {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filteredFinances;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void updateFilteredFinanceList(Predicate\u003cFinance\u003e predicate) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(predicate);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredFinances.setPredicate(predicate);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the list of {@code Course} backed by the internal list of"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * {@code versionedCourseAddressBook}"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cCourse\u003e getFilteredCourseList() {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filteredCourses;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void updateFilteredCourseList(Predicate\u003cCourse\u003e predicate) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(predicate);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    filteredCourses.setPredicate(predicate);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBook.equals(other.teacherAddressBook)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 filteredTeachers.equals(other.filteredTeachers);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 141,
      "ShengXue97": 294
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the persons list. This list will not contain any duplicate"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * persons."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  ObservableList\u003cPerson\u003e getPersonList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UserPrefs.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path teacherAddressBookFilePath \u003d Paths.get(\"data\", \"teacherAddressbook.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path studentAddressBookFilePath \u003d Paths.get(\"data\", \"studentAddressbook.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path courseAddressBookFilePath \u003d Paths.get(\"data\", \"courseAddressbook.json\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path financeAddressBookFilePath \u003d Paths.get(\"data\", \"financeAddressbook.json\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public UserPrefs() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    resetData(userPrefs);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    return guiSettings;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    return addressBookFilePath;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    this.addressBookFilePath \u003d addressBookFilePath;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getTeacherAddressBookFilePath() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBookFilePath;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeacherAddressBookFilePath(Path teacherAddressBookFilePath) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(teacherAddressBookFilePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teacherAddressBookFilePath \u003d teacherAddressBookFilePath;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getStudentAddressBookFilePath() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return studentAddressBookFilePath;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudentAddressBookFilePath(Path studentAddressBookFilePath) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(studentAddressBookFilePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.studentAddressBookFilePath \u003d studentAddressBookFilePath;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getCourseAddressBookFilePath() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courseAddressBookFilePath;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourseAddressBookFilePath(Path courseAddressBookFilePath) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(courseAddressBookFilePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courseAddressBookFilePath \u003d courseAddressBookFilePath;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getFinanceAddressBookFilePath() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return financeAddressBookFilePath;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinanceAddressBookFilePath(Path financeAddressBookFilePath) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(financeAddressBookFilePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.financeAddressBookFilePath \u003d financeAddressBookFilePath;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    return Objects.hash(guiSettings, addressBookFilePath);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    sb.append(\"\\nLocal data file location : \" + addressBookFilePath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    return sb.toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 85,
      "ShengXue97": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelCourse/Course.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Course in the address book. Guarantees: details are present and not null, field"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * values are validated, immutable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Course {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // Identity fields"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Name name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ID id;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Every field must be present and not null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Course(Name name, ID id, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(name, id, tags);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.id \u003d id;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tags.addAll(tags);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Name getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ID getId() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return id;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * modification is attempted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both courses of the same name have at least one other identity field that is"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * the same. This defines a weaker notion of equality between two courses."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean isSameCourse(Course otherCourse) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (otherCourse \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherCourse !\u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherCourse.getName().equals(getName())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherCourse.getId().equals(getId());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both courses have the same identity and data fields. This defines a stronger"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * notion of equality between two courses."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof Course)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Course otherCourse \u003d (Course) other;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherCourse.getName().equals(getName())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherCourse.getId().equals(getId())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherCourse.getTags().equals(getTags());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Objects.hash(name, id, tags);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    builder.append(getName())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\"Amount: \")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getId())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Tags: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return builder.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelCourse/CourseAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * comparison)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseAddressBook implements ReadOnlyCourseAddressBook {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final UniqueCourseList courses;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *   among constructors."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */ {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courses \u003d new UniqueCourseList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CourseAddressBook() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CourseAddressBook(ReadOnlyCourseAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    resetData(toBeCopied);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// list overwrite operations"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of the course list with {@code courses}. {@code courses} must not contain"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate courses."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourses(List\u003cCourse\u003e courses) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courses.setCourses(courses);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void resetData(ReadOnlyCourseAddressBook newData) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(newData);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    setCourses(newData.getCourseList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// course-level operations"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a course with the same identity as {@code course} exists in the address book."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasCourses(Course course) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(course);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courses.contains(course);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a course to the address book. The course must not already exist in the address book."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addCourse(Course p) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courses.add(p);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given course {@code target} in the list with {@code editedCourse}. {@code target}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * must exist in the address book. The course identity of {@code editedCourse} must not be the"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * same as another existing course in the address book."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourse(Course target, Course editedCourse) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editedCourse);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courses.setCourse(target, editedCourse);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void removeCourse(Course key) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courses.remove(key);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// util methods"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courses.asUnmodifiableObservableList().size() + \" courses\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // TODO: refine later"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cCourse\u003e getCourseList() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courses.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof CourseAddressBook"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 courses.equals(((CourseAddressBook) other).courses));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courses.hashCode();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 116
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelCourse/CourseNameContainsKeywordsPredicate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseNameContainsKeywordsPredicate implements Predicate\u003cCourse\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CourseNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean test(Course course) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(course.getName().fullName, keyword));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof CourseNameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 keywords.equals(((CourseNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelCourse/ReadOnlyCourseAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface ReadOnlyCourseAddressBook {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the teachers list. This list will not contain any duplicate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * teachers."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cCourse\u003e getCourseList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelCourse/UniqueCourseList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.CourseNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicateCourseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A list of courses that enforces uniqueness between its elements and does not allow nulls. A"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * course is considered unique by comparing using {@code Course#isSameCourse(Course)}. As such,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * adding and updating of courses uses Course#isSameCourse(Course) for equality so as to ensure that"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * the course being added or updated is unique in terms of identity in the UniqueCourseList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * However, the removal of a course uses course#equals(Object) so as to ensure that the course with"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * @see Course#isSameCourse(Course)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class UniqueCourseList implements Iterable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cCourse\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cCourse\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if the list contains an equivalent course as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean contains(Course toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.stream().anyMatch(toCheck::isSameCourse);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a course to the list. The course must not already exist in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void add(Course toAdd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (contains(toAdd)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateCourseException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the course {@code target} in the list with {@code editedCourse}. {@code target} must"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * exist in the list. The Course identity of {@code editedCourse} must not be the same as another"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * existing course in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourse(Course target, Course editedCourse) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedCourse);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CourseNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!target.isSameCourse(editedCourse) \u0026\u0026 contains(editedCourse)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateCourseException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.set(index, editedCourse);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes the equivalent course from the list. The course must exist in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void remove(Course toRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new CourseNotFoundException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourses(UniqueCourseList replacement) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(replacement);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of this list with {@code courses}. {@code courses} must not contain"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate courses."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setCourses(List\u003cCourse\u003e courses) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(courses);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!coursesAreUnique(courses)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateCourseException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(courses);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cCourse\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalUnmodifiableList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Iterator\u003cCourse\u003e iterator() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.iterator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof UniqueCourseList"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 internalList.equals(((UniqueCourseList) other).internalList));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.hashCode();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if {@code courses} contains only unique courses."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private boolean coursesAreUnique(List\u003cCourse\u003e courses) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (int i \u003d 0; i \u003c courses.size() - 1; i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      for (int j \u003d i + 1; j \u003c courses.size(); j++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        if (courses.get(i).isSameCourse(courses.get(j))) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 136
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelFinance/Finance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Finance in the address book. Guarantees: details are present and not null, field"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * values are validated, immutable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Finance {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // Identity fields"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Name name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Amount amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Every field must be present and not null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Finance(Name name, Amount amount, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(name, amount, tags);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.amount \u003d amount;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tags.addAll(tags);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Name getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Amount getAmount() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return amount;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * modification is attempted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both finances of the same name have at least one other identity field that is"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * the same. This defines a weaker notion of equality between two finances."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean isSameFinance(Finance otherFinance) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (otherFinance \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherFinance !\u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherFinance.getName().equals(getName())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherFinance.getAmount().equals(getAmount());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both finances have the same identity and data fields. This defines a stronger"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * notion of equality between two finances."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof Finance)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Finance otherFinance \u003d (Finance) other;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherFinance.getName().equals(getName())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherFinance.getAmount().equals(getAmount())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherFinance.getTags().equals(getTags());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Objects.hash(name, amount, tags);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    builder.append(getName())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\"Amount: \")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getAmount())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Tags: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return builder.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelFinance/FinanceAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * comparison)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceAddressBook implements ReadOnlyFinanceAddressBook {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final UniqueFinanceList finances;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *   among constructors."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */ {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    finances \u003d new UniqueFinanceList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FinanceAddressBook() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FinanceAddressBook(ReadOnlyFinanceAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    resetData(toBeCopied);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// list overwrite operations"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of the finance list with {@code finances}. {@code finances} must not"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * contain duplicate finances."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinances(List\u003cFinance\u003e finances) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.finances.setFinances(finances);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void resetData(ReadOnlyFinanceAddressBook newData) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(newData);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    setFinances(newData.getFinanceList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// finance-level operations"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a finance with the same identity as {@code finance} exists in the address"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * book."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasFinances(Finance finance) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(finance);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return finances.contains(finance);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a finance to the address book. The finance must not already exist in the address book."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addFinance(Finance p) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    finances.add(p);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given finance {@code target} in the list with {@code editedFinance}. {@code"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * target} must exist in the address book. The finance identity of {@code editedFinance} must not"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * be the same as another existing finance in the address book."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinance(Finance target, Finance editedFinance) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editedFinance);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    finances.setFinance(target, editedFinance);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void removeFinance(Finance key) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    finances.remove(key);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// util methods"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return finances.asUnmodifiableObservableList().size() + \" finances\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // TODO: refine later"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cFinance\u003e getFinanceList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return finances.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof FinanceAddressBook"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 finances.equals(((FinanceAddressBook) other).finances));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return finances.hashCode();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 117
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelFinance/FinanceNameContainsKeywordsPredicate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceNameContainsKeywordsPredicate implements Predicate\u003cFinance\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FinanceNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean test(Finance finance) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .anyMatch("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            keyword -\u003e StringUtil.containsWordIgnoreCase(finance.getName().fullName, keyword));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof FinanceNameContainsKeywordsPredicate"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 keywords.equals(((FinanceNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelFinance/ReadOnlyFinanceAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface ReadOnlyFinanceAddressBook {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the teachers list. This list will not contain any duplicate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * teachers."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cFinance\u003e getFinanceList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelFinance/UniqueFinanceList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicateFinanceException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.FinanceNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A list of finances that enforces uniqueness between its elements and does not allow nulls. A"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * finance is considered unique by comparing using {@code Finance#isSameFinance(Finance)}. As such,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * adding and updating of finances uses Finance#isSameFinance(Finance) for equality so as to ensure"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * that the finance being added or updated is unique in terms of identity in the UniqueFinanceList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * However, the removal of a finance uses finance#equals(Object) so as to ensure that the finance"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * with exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * @see Finance#isSameFinance(Finance)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class UniqueFinanceList implements Iterable\u003cFinance\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cFinance\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cFinance\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if the list contains an equivalent finance as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean contains(Finance toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.stream().anyMatch(toCheck::isSameFinance);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a finance to the list. The finance must not already exist in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void add(Finance toAdd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (contains(toAdd)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateFinanceException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the finance {@code target} in the list with {@code editedFinance}. {@code target} must"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * exist in the list. The Finance identity of {@code editedFinance} must not be the same as"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing finance in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinance(Finance target, Finance editedFinance) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedFinance);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new FinanceNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!target.isSameFinance(editedFinance) \u0026\u0026 contains(editedFinance)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateFinanceException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.set(index, editedFinance);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes the equivalent finance from the list. The finance must exist in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void remove(Finance toRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new FinanceNotFoundException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinances(UniqueFinanceList replacement) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(replacement);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of this list with {@code finances}. {@code finances} must not contain"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate finances."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setFinances(List\u003cFinance\u003e finances) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(finances);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!financesAreUnique(finances)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateFinanceException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(finances);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cFinance\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalUnmodifiableList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Iterator\u003cFinance\u003e iterator() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.iterator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof UniqueFinanceList"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 internalList.equals(((UniqueFinanceList) other).internalList));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.hashCode();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if {@code finances} contains only unique finances."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private boolean financesAreUnique(List\u003cFinance\u003e finances) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (int i \u003d 0; i \u003c finances.size() - 1; i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      for (int j \u003d i + 1; j \u003c finances.size(); j++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        if (finances.get(i).isSameFinance(finances.get(j))) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 136
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelStudent/ReadOnlyStudentAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface ReadOnlyStudentAddressBook {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the teachers list. This list will not contain any duplicate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * teachers."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cStudent\u003e getStudentList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelStudent/Student.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Teacher in the address book. Guarantees: details are present and not null, field"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * values are validated, immutable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Student {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // Identity fields"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Name name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final AssignedCourse course;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Every field must be present and not null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Student(Name name, AssignedCourse course, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(name, course, tags);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.course \u003d course;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tags.addAll(tags);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Name getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AssignedCourse getCourse() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return course;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * modification is attempted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both students of the same name have at least one other identity field that is"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * the same. This defines a weaker notion of equality between two students."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean isSameStudent(Student otherStudent) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (otherStudent \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherStudent !\u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherStudent.getName().equals(getName())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherStudent.getCourse().equals(getCourse());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both students have the same identity and data fields. This defines a stronger"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * notion of equality between two students."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof Student)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Student otherStudent \u003d (Student) other;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherStudent.getName().equals(getName())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherStudent.getCourse().equals(getCourse())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherStudent.getTags().equals(getTags());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Objects.hash(name, course, tags);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    builder.append(getName())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Course: \")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getCourse())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Tags: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return builder.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelStudent/StudentAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * comparison)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentAddressBook implements ReadOnlyStudentAddressBook {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final UniqueStudentList students;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *   among constructors."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */ {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    students \u003d new UniqueStudentList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StudentAddressBook() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StudentAddressBook(ReadOnlyStudentAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    resetData(toBeCopied);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// list overwrite operations"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of the student list with {@code students}. {@code student} must not"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * contain duplicate students."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudents(List\u003cStudent\u003e students) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.students.setStudents(students);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void resetData(ReadOnlyStudentAddressBook newData) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(newData);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    setStudents(newData.getStudentList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// student-level operations"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a student with the same identity as {@code student} exists in the address"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * book."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasStudents(Student student) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(student);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return students.contains(student);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a student to the address book. The student must not already exist in the address book."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addStudent(Student p) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    students.add(p);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given student {@code target} in the list with {@code editedStudent}. {@code"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * target} must exist in the address book. The student identity of {@code editedStudent} must not"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * be the same as another existing student in the address book."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudent(Student target, Student editedStudent) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editedStudent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    students.setStudent(target, editedStudent);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void removeStudent(Student key) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    students.remove(key);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// util methods"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return students.asUnmodifiableObservableList().size() + \" teachers\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // TODO: refine later"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cStudent\u003e getStudentList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return students.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof StudentAddressBook"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 students.equals(((StudentAddressBook) other).students));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return students.hashCode();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 117
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelStudent/StudentNameContainsKeywordsPredicate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentNameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StudentNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean test(Student student) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .anyMatch("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof StudentNameContainsKeywordsPredicate"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 keywords.equals(((StudentNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelStudent/UniqueStudentList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicateStudentException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.StudentNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A list of students that enforces uniqueness between its elements and does not allow nulls. A"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * student is considered unique by comparing using {@code Student#isSameFinance(Student)}. As such,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * adding and updating of students uses Student#isSameStudent(Student) for equality so as to ensure"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * that the student being added or updated is unique in terms of identity in the UniqueStudentList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * However, the removal of a student uses student#equals(Object) so as to ensure that the student"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * with exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * @see Student#isSameStudent(Student)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class UniqueStudentList implements Iterable\u003cStudent\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if the list contains an equivalent student as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean contains(Student toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.stream().anyMatch(toCheck::isSameStudent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a student to the list. The student must not already exist in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void add(Student toAdd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (contains(toAdd)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateStudentException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the student {@code target} in the list with {@code editedStudent}. {@code target} must"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * exist in the list. The Student identity of {@code editedStudent} must not be the same as"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing student in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudent(Student target, Student editedStudent) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedStudent);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new StudentNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateStudentException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.set(index, editedStudent);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes the equivalent student from the list. The student must exist in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void remove(Student toRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new StudentNotFoundException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudents(UniqueStudentList replacement) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(replacement);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of this list with {@code students}. {@code students} must not contain"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate students."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setStudents(List\u003cStudent\u003e students) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(students);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!studentsAreUnique(students)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateStudentException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(students);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalUnmodifiableList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Iterator\u003cStudent\u003e iterator() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.iterator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof UniqueStudentList"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.hashCode();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if {@code students} contains only unique students."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private boolean studentsAreUnique(List\u003cStudent\u003e students) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (int i \u003d 0; i \u003c students.size() - 1; i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      for (int j \u003d i + 1; j \u003c students.size(); j++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        if (students.get(i).isSameStudent(students.get(j))) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 136
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelTeacher/ReadOnlyTeacherAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Unmodifiable view of an address book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface ReadOnlyTeacherAddressBook {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an unmodifiable view of the teachers list. This list will not contain any duplicate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * teachers."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ObservableList\u003cTeacher\u003e getTeacherList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelTeacher/Teacher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Teacher in the address book. Guarantees: details are present and not null, field"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * values are validated, immutable."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Teacher {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // Identity fields"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Name name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Phone phone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Email email;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Salary salary;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // Data fields"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Address address;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Every field must be present and not null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Teacher(Name name, Phone phone, Email email, Salary salary, Address address,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.phone \u003d phone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.email \u003d email;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.salary \u003d salary;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.address \u003d address;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tags.addAll(tags);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Name getName() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Phone getPhone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return phone;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Email getEmail() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return email;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Salary getSalary() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return salary;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Address getAddress() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return address;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * modification is attempted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both teachers of the same name have at least one other identity field that is"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * the same. This defines a weaker notion of equality between two teachers."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean isSameTeacher(Teacher otherTeacher) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (otherTeacher \u003d\u003d this) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherTeacher !\u003d null"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherTeacher.getName().equals(getName())"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 (otherTeacher.getPhone().equals(getPhone()) || ("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        otherTeacher.getSalary().equals(getSalary()) || otherTeacher.getEmail()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .equals(getEmail())));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both teachers have the same identity and data fields. This defines a stronger"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * notion of equality between two teachers."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof Teacher)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Teacher otherTeacher \u003d (Teacher) other;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return otherTeacher.getName().equals(getName())"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherTeacher.getPhone().equals(getPhone())"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherTeacher.getEmail().equals(getEmail())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherTeacher.getSalary().equals(getSalary())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherTeacher.getAddress().equals(getAddress())"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 otherTeacher.getTags().equals(getTags());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return Objects.hash(name, phone, email, salary, address, tags);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    builder.append(getName())"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Phone: \")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getPhone())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Email: \")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getEmail())"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Address: \")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getSalary())"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Salary: \")"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(getAddress())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .append(\" Tags: \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return builder.toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 135
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelTeacher/TeacherAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * comparison)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherAddressBook implements ReadOnlyTeacherAddressBook {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final UniqueTeacherList teachers;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *   among constructors."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */ {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teachers \u003d new UniqueTeacherList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public TeacherAddressBook() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public TeacherAddressBook(ReadOnlyTeacherAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    resetData(toBeCopied);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// list overwrite operations"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of the teacher list with {@code teachers}. {@code teachers} must not"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * contain duplicate teachers."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeachers(List\u003cTeacher\u003e teachers) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teachers.setTeachers(teachers);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void resetData(ReadOnlyTeacherAddressBook newData) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(newData);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    setTeachers(newData.getTeacherList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// teacher-level operations"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a teacher with the same identity as {@code teacher} exists in the address"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * book."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean hasTeachers(Teacher teacher) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(teacher);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teachers.contains(teacher);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a teacher to the address book. The teacher must not already exist in the address book."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void addTeacher(Teacher p) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teachers.add(p);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the given teacher {@code target} in the list with {@code editedTeacher}. {@code"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * target} must exist in the address book. The teacher identity of {@code editedTeacher} must not"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * be the same as another existing teacher in the address book."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeacher(Teacher target, Teacher editedTeacher) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(editedTeacher);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teachers.setTeacher(target, editedTeacher);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void removeTeacher(Teacher key) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teachers.remove(key);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  //// util methods"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teachers.asUnmodifiableObservableList().size() + \" teachers\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // TODO: refine later"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cTeacher\u003e getTeacherList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teachers.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof TeacherAddressBook // instanceof handles nulls"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 teachers.equals(((TeacherAddressBook) other).teachers));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teachers.hashCode();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 116
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelTeacher/TeacherNameContainsKeywordsPredicate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherNameContainsKeywordsPredicate implements Predicate\u003cTeacher\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public TeacherNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean test(Teacher teacher) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .anyMatch("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            keyword -\u003e StringUtil.containsWordIgnoreCase(teacher.getName().fullName, keyword));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof TeacherNameContainsKeywordsPredicate"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 keywords.equals(((TeacherNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/modelTeacher/UniqueTeacherList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.modelTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicateTeacherException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.exceptions.TeacherNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A list of teachers that enforces uniqueness between its elements and does not allow nulls. A"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * teacher is considered unique by comparing using {@code Teacher#isSameTeacher(Teacher)}. As such,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * adding and updating of teachers uses Teacher#isSameTeacher(Teacher) for equality so as to ensure"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * that the teacher being added or updated is unique in terms of identity in the UniqueTeacherList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * However, the removal of a teacher uses Teacher#equals(Object) so as to ensure that the teacher"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * with exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * @see Teacher#isSameTeacher(Teacher)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class UniqueTeacherList implements Iterable\u003cTeacher\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cTeacher\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final ObservableList\u003cTeacher\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if the list contains an equivalent teacher as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean contains(Teacher toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.stream().anyMatch(toCheck::isSameTeacher);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a teacher to the list. The teacher must not already exist in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void add(Teacher toAdd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (contains(toAdd)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateTeacherException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the teacher {@code target} in the list with {@code editedTeacher}. {@code target} must"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * exist in the list. The teacher identity of {@code editedTeacher} must not be the same as"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * another existing teacher in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeacher(Teacher target, Teacher editedTeacher) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(target, editedTeacher);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new TeacherNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!target.isSameTeacher(editedTeacher) \u0026\u0026 contains(editedTeacher)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateTeacherException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.set(index, editedTeacher);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes the equivalent teacher from the list. The teacher must exist in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void remove(Teacher toRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(toRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new TeacherNotFoundException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeachers(UniqueTeacherList replacement) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(replacement);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of this list with {@code teachers}. {@code teachers} must not contain"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate teachers."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void setTeachers(List\u003cTeacher\u003e teachers) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireAllNonNull(teachers);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!teachersAreUnique(teachers)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DuplicateTeacherException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    internalList.setAll(teachers);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ObservableList\u003cTeacher\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalUnmodifiableList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Iterator\u003cTeacher\u003e iterator() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.iterator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof UniqueTeacherList // instanceof handles nulls"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 internalList.equals(((UniqueTeacherList) other).internalList));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return internalList.hashCode();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if {@code teachers} contains only unique teachers."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private boolean teachersAreUnique(List\u003cTeacher\u003e teachers) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (int i \u003d 0; i \u003c teachers.size() - 1; i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      for (int j \u003d i + 1; j \u003c teachers.size(); j++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        if (teachers.get(i).isSameTeacher(teachers.get(j))) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 135
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Address.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s address in the address book. Guarantees: immutable; is valid as declared in"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@link #isValidAddress(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Address {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs an {@code Address}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param address A valid address."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  public Address(String address) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(address);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    value \u003d address;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if a given string is a valid email."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isValidAddress(String test) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof Address // instanceof handles nulls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 value.equals(((Address) other).value)); // state check"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 55,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Amount.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s salary number in the address book. Guarantees: immutable; is valid as"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * declared in {@link #isValidAmount(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Amount {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \"Amount numbers should only contain numbers, and it should be at least 1 digits long\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code Amount}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param amount A valid amount number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Amount(String amount) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(amount);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    checkArgument(isValidAmount(amount), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    value \u003d amount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a given string is a valid salary number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static boolean isValidAmount(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof Amount // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 value.equals(((Amount) other).value)); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/AssignedCourse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s Course in the address book. Guarantees: immutable; is valid as declared in"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@link #isValidCourse(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class AssignedCourse {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \"Courses should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code Course}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param course A valid course."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public AssignedCourse(String course) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(course);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    value \u003d course;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a given string is a valid course."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static boolean isValidCourse(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof AssignedCourse // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 value.equals(((AssignedCourse) other).value)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Email.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s email in the address book. Guarantees: immutable; is valid as declared in"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@link #isValidEmail(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Email {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \"Emails should be of the format local-part@domain \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"and adhere to the following constraints:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"2. This is followed by a \u0027@\u0027 and then a domain name. \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"The domain name must:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"    - be at least 2 characters long\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"    - start and end with alphanumeric characters\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "          + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  // alphanumeric and special characters"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs an {@code Email}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param email A valid email address."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public Email(String email) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(email);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    value \u003d email;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns if a given string is a valid email."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isValidEmail(String test) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof Email // instanceof handles nulls"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 value.equals(((Email) other).value)); // state check"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 64,
      "ShengXue97": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/ID.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s id number in the address book. Guarantees: immutable; is valid as declared"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * in {@link #isValidId(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class ID {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \"ID numbers should only contain numbers, and it should be at least 1 digits long\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code ID}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param id A valid Id number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public ID(String id) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(id);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    value \u003d id;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a given string is a valid id number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static boolean isValidId(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof ID // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 value.equals(((ID) other).value)); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Name.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s name in the address book. Guarantees: immutable; is valid as declared in"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@link #isValidName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  public final String fullName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a {@code Name}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param name A valid name."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  public Name(String name) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    fullName \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isValidName(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return fullName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    return fullName.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 57,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Person.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person in the address book. Guarantees: details are present and not null, field"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * values are validated, immutable."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  // Identity fields"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Name name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Phone phone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Email email;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  // Data fields"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Address address;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   * Every field must be present and not null."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    requireAllNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.phone \u003d phone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    this.email \u003d email;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    this.address \u003d address;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tags.addAll(tags);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public Name getName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    return name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  public Phone getPhone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    return phone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  public Email getEmail() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    return email;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  public Address getAddress() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    return address;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * modification is attempted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both persons of the same name have at least one other identity field that is"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * the same. This defines a weaker notion of equality between two persons."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean isSamePerson(Person otherPerson) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    if (otherPerson \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return otherPerson !\u003d null"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if both persons have the same identity and data fields. This defines a stronger"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * notion of equality between two persons."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof Person)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    Person otherPerson \u003d (Person) other;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    return otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 otherPerson.getPhone().equals(getPhone())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 otherPerson.getEmail().equals(getEmail())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 otherPerson.getAddress().equals(getAddress())"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 otherPerson.getTags().equals(getTags());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    return Objects.hash(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    builder.append(getName())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(\" Phone: \")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(getPhone())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(\" Email: \")"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(getEmail())"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(\" Address: \")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(getAddress())"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        .append(\" Tags: \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    return builder.toString();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 111,
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Phone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s phone number in the address book. Guarantees: immutable; is valid as"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * declared in {@link #isValidPhone(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Phone {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a {@code Phone}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param phone A valid phone number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  public Phone(String phone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(phone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    value \u003d phone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if a given string is a valid phone number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isValidPhone(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof Phone // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 value.equals(((Phone) other).value)); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Salary.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s salary number in the address book. Guarantees: immutable; is valid as"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * declared in {@link #isValidSalary(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Salary {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \"Salary numbers should only contain numbers, and it should be at least 1 digits long\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code Salary}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param salary A valid salary number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Salary(String salary) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(salary);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    checkArgument(isValidSalary(salary), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    value \u003d salary;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a given string is a valid salary number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static boolean isValidSalary(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof Salary // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 value.equals(((Salary) other).value)); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return value.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Person\u0027s type in the address book. Guarantees: immutable; is valid as declared in"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * {@link #isValidType(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class Type {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \"Types should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final String fullType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code Type}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param type A valid type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Type(String type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(type);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    checkArgument(isValidType(type), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    fullType \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static boolean isValidType(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return fullType;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        || (other instanceof Type // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 fullType.equals(((Type) other).fullType)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return fullType.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/UniquePersonList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicatePersonException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.PersonNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A list of persons that enforces uniqueness between its elements and does not allow nulls. A"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * adding and updating of persons uses Person#isSamePerson(Person) for equality so as to ensure that"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * the person being added or updated is unique in terms of identity in the UniquePersonList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * However, the removal of a person uses Person#equals(Object) so as to ensure that the person with"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * @see Person#isSamePerson(Person)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class UniquePersonList implements Iterable\u003cPerson\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if the list contains an equivalent person as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean contains(Person toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    return internalList.stream().anyMatch(toCheck::isSamePerson);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Adds a person to the list. The person must not already exist in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  public void add(Person toAdd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    if (contains(toAdd)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    internalList.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the person {@code target} in the list with {@code editedPerson}. {@code target} must"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * exist in the list. The person identity of {@code editedPerson} must not be the same as another"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * existing person in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    internalList.set(index, editedPerson);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Removes the equivalent person from the list. The person must exist in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  public void remove(Person toRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(toRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setPersons(UniquePersonList replacement) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(replacement);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Replaces the contents of this list with {@code persons}. {@code persons} must not contain"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * duplicate persons."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    requireAllNonNull(persons);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!personsAreUnique(persons)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    internalList.setAll(persons);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    return internalUnmodifiableList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  public Iterator\u003cPerson\u003e iterator() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    return internalList.iterator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof UniquePersonList // instanceof handles nulls"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    return internalList.hashCode();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if {@code persons} contains only unique persons."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  private boolean personsAreUnique(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    for (int i \u003d 0; i \u003c persons.size() - 1; i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      for (int j \u003d i + 1; j \u003c persons.size(); j++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        if (persons.get(i).isSamePerson(persons.get(j))) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 121,
      "ShengXue97": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/CourseNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation is unable to find the specified teacher."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/DuplicateCourseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation will result in duplicate Courses (Courses are considered duplicates if"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * they have the same identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DuplicateCourseException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DuplicateCourseException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(\"Operation would result in duplicate courses\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/DuplicateFinanceException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation will result in duplicate Finances (Finances are considered duplicates"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * if they have the same identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DuplicateFinanceException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DuplicateFinanceException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(\"Operation would result in duplicate finances\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * they have the same identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class DuplicatePersonException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  public DuplicatePersonException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    super(\"Operation would result in duplicate persons\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/DuplicateStudentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation will result in duplicate Students (Students are considered duplicates"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * if they have the same identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DuplicateStudentException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DuplicateStudentException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(\"Operation would result in duplicate students\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/DuplicateTeacherException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation will result in duplicate Teachers (Teachers are considered duplicates"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * if they have the same identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class DuplicateTeacherException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public DuplicateTeacherException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(\"Operation would result in duplicate teachers\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/FinanceNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation is unable to find the specified teacher."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals that the operation is unable to find the specified person."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class PersonNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/StudentNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation is unable to find the specified teacher."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/exceptions/TeacherNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.model.person.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Signals that the operation is unable to find the specified teacher."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tag/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a Tag in the address book. Guarantees: immutable; name is valid as declared in {@link"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * #isValidTagName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public final String tagName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a {@code Tag}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param tagName A valid tag name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  public Tag(String tagName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(tagName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if a given string is a valid tag name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  public static boolean isValidTagName(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        || (other instanceof Tag // instanceof handles nulls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  public int hashCode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return tagName.hashCode();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   * Format state as text for viewing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    return \u0027[\u0027 + tagName + \u0027]\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 52,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods for populating {@code AddressBook} with sample data."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Person[] getSamplePersons() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Person[]{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            new Address(\"Blk 30 Geylang Street 29, #06-40\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            getTagSet(\"friends\")),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new Email(\"berniceyu@example.com\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            getTagSet(\"colleagues\", \"friends\")),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static ReadOnlyAddressBook getSampleAddressBook() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    AddressBook sampleAb \u003d new AddressBook();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (Person samplePerson : getSamplePersons()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      sampleAb.addPerson(samplePerson);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return sampleAb;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static Teacher[] getSampleTeachers() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Teacher[]{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Teacher(new Name(\"Bob Ross\"), new Phone(\"88283902\"), new Email(\"bob.ross@gmail.com\"),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new Salary(\"9000\"),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new Address(\"Serangoon\"),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"Friendly\", \"LovesArt\")),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Teacher(new Name(\"Martin Henz\"), new Phone(\"98765432\"), new Email(\"henz@gmail.com\"),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new Salary(\"100\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new Address(\"311, Clementi Ave 2, #02-25\"),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"WishfulThinking\", \"Experienced\")),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static ReadOnlyTeacherAddressBook getSampleTeacherAddressBook() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    TeacherAddressBook sampleAb \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (Teacher sampleTeacher : getSampleTeachers()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      sampleAb.addTeacher(sampleTeacher);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return sampleAb;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static Student[] getSampleStudents() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Student[]{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Student(new Name(\"Sim Sheng Xue\"), new AssignedCourse(\"Cozmo Programming\"),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"Loyal\", \"10Year\")),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Student(new Name(\"John AppleSeed\"), new AssignedCourse(\"Advanced Java\"),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"Lazy\", \"Old\"))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static ReadOnlyStudentAddressBook getSampleStudentAddressBook() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    StudentAddressBook sampleAb \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (Student sampleStudent : getSampleStudents()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      sampleAb.addStudent(sampleStudent);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return sampleAb;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static Finance[] getSampleFinances() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Finance[]{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Finance(new Name(\"Renovated Staff Lounge\"), new Amount(\"2000\"),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"BLK71\", \"AirCon\")),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Finance(new Name(\"Received Payment From NUS\"), new Amount(\"1000\"),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"Contract\"))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static ReadOnlyFinanceAddressBook getSampleFinanceAddressBook() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FinanceAddressBook sampleAb \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (Finance sampleFinance : getSampleFinances()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      sampleAb.addFinance(sampleFinance);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return sampleAb;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static Course[] getSampleCourses() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Course[]{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Course(new Name(\"Cozmo Programming\"), new ID(\"829\"),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"Robot\", \"Fun\")),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        new Course(new Name(\"Advanced Java\"), new ID(\"182\"),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTagSet(\"OOP\", \"Difficult\"))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static ReadOnlyCourseAddressBook getSampleCourseAddressBook() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    CourseAddressBook sampleAb \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (Course sampleCourse : getSampleCourses()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      sampleAb.addCourse(sampleCourse);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return sampleAb;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a tag set containing the list of strings given."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  public static Set\u003cTag\u003e getTagSet(String... strings) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    return Arrays.stream(strings)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        .map(Tag::new)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        .collect(Collectors.toSet());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "ShengXue97": 94
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/AddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a storage for {@link seedu.address.model.AddressBook}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public interface AddressBookStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the file path of the data file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns AddressBook data as a {@link ReadOnlyAddressBook}. Returns {@code Optional.empty()} if"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * storage file is not found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see #getAddressBookFilePath()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the given {@link ReadOnlyAddressBook} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param addressBook cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see #saveAddressBook(ReadOnlyAddressBook)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 41,
      "ShengXue97": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonAdaptedPerson {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  private final String name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  private final String phone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  private final String email;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  private final String address;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.phone \u003d phone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    this.email \u003d email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.address \u003d address;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts a given {@code Person} into this class for Jackson use."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  public JsonAdaptedPerson(Person source) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    phone \u003d source.getPhone().value;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    email \u003d source.getEmail().value;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    address \u003d source.getAddress().value;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                               person."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  public Person toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    for (JsonAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      personTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Phone.isValidPhone(phone)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    final Phone modelPhone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    if (email \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Email.isValidEmail(email)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    final Email modelEmail \u003d new Email(email);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    if (address \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!Address.isValidAddress(address)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    final Address modelAddress \u003d new Address(address);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 100,
      "ShengXue97": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access AddressBook data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonAddressBookStorage implements AddressBookStorage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  private Path filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  public JsonAddressBookStorage(Path filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    return filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    return readAddressBook(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * Similar to {@link #readAddressBook()}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        filePath, JsonSerializableAddressBook.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!jsonAddressBook.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      return Optional.of(jsonAddressBook.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    saveAddressBook(addressBook, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(addressBook);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 78,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonSerializableAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * An Immutable AddressBook that is serializable to JSON format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@JsonRootName(value \u003d \"addressbook\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonSerializableAddressBook {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a {@code JsonSerializableAddressBook} with the given persons."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    this.persons.addAll(persons);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param source future changes to this will not affect the created {@code"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *               JsonSerializableAddressBook}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public JsonSerializableAddressBook(ReadOnlyAddressBook source) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    persons.addAll("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts this address book into the model\u0027s {@code AddressBook} object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  public AddressBook toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    for (JsonAdaptedPerson jsonAdaptedPerson : persons) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      Person person \u003d jsonAdaptedPerson.toModelType();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      if (addressBook.hasPerson(person)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      addressBook.addPerson(person);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    return addressBook;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 53,
      "ShengXue97": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonUserPrefsStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  private Path filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    return filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageCourse.CourseAddressBookStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageFinance.FinanceAddressBookStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageStudent.StudentAddressBookStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageTeacher.TeacherAddressBookStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface Storage extends AddressBookStorage, TeacherAddressBookStorage,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    StudentAddressBookStorage,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FinanceAddressBookStorage, CourseAddressBookStorage, UserPrefsStorage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook) throws IOException;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook) throws IOException;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook) throws IOException;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  ///"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook) throws IOException;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "ShengXue97": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/StorageManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageCourse.CourseAddressBookStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageFinance.FinanceAddressBookStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageStudent.StudentAddressBookStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageTeacher.TeacherAddressBookStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Manages storage of AddressBook data in local storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  private AddressBookStorage addressBookStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private TeacherAddressBookStorage teacherAddressBookStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StudentAddressBookStorage studentAddressBookStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FinanceAddressBookStorage financeAddressBookStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private CourseAddressBookStorage courseAddressBookStorage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StorageManager(AddressBookStorage addressBookStorage,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      TeacherAddressBookStorage teacherAddressBookStorage,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      StudentAddressBookStorage studentAddressBookStorage,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      FinanceAddressBookStorage financeAddressBookStorage,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      CourseAddressBookStorage courseAddressBookStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.addressBookStorage \u003d addressBookStorage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teacherAddressBookStorage \u003d teacherAddressBookStorage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.studentAddressBookStorage \u003d studentAddressBookStorage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.financeAddressBookStorage \u003d financeAddressBookStorage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courseAddressBookStorage \u003d courseAddressBookStorage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return addressBookStorage.getAddressBookFilePath();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyAddressBook\u003e readAddressBook()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    return readAddressBook(addressBookStorage.getAddressBookFilePath());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    return addressBookStorage.readAddressBook(filePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    addressBookStorage.saveAddressBook(addressBook, filePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TeacherAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getTeacherAddressBookFilePath() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBookStorage.getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readTeacherAddressBook(teacherAddressBookStorage.getTeacherAddressBookFilePath());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook(Path filePath)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBookStorage.readTeacherAddressBook(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveTeacherAddressBook(teacherAddressBook,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        teacherAddressBookStorage.getTeacherAddressBookFilePath());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook, Path filePath)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherAddressBookStorage.saveTeacherAddressBook(teacherAddressBook, filePath);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudentAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getStudentAddressBookFilePath() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return studentAddressBookStorage.getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readStudentAddressBook(studentAddressBookStorage.getStudentAddressBookFilePath());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook(Path filePath)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return studentAddressBookStorage.readStudentAddressBook(filePath);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveStudentAddressBook(studentAddressBook,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        studentAddressBookStorage.getStudentAddressBookFilePath());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook, Path filePath)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentAddressBookStorage.saveStudentAddressBook(studentAddressBook, filePath);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FinanceAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getFinanceAddressBookFilePath() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return financeAddressBookStorage.getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook()"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readFinanceAddressBook(financeAddressBookStorage.getFinanceAddressBookFilePath());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook(Path filePath)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return financeAddressBookStorage.readFinanceAddressBook(filePath);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveFinanceAddressBook(financeAddressBook,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        financeAddressBookStorage.getFinanceAddressBookFilePath());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook, Path filePath)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeAddressBookStorage.saveFinanceAddressBook(financeAddressBook, filePath);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CourseAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getCourseAddressBookFilePath() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courseAddressBookStorage.getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook()"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readCourseAddressBook(courseAddressBookStorage.getCourseAddressBookFilePath());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook(Path filePath)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courseAddressBookStorage.readCourseAddressBook(filePath);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveCourseAddressBook(courseAddressBook,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        courseAddressBookStorage.getCourseAddressBookFilePath());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook, Path filePath)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseAddressBookStorage.saveCourseAddressBook(courseAddressBook, filePath);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 72,
      "ShengXue97": 161
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/UserPrefsStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a storage for {@link seedu.address.model.UserPrefs}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns UserPrefs data from storage. Returns {@code Optional.empty()} if storage file is not"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * found."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 33,
      "ShengXue97": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageCourse/CourseAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a storage for {@link seedu.address.model.AddressBook}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface CourseAddressBookStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the file path of the data file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getCourseAddressBookFilePath();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns CourseAddressBook data as a {@link ReadOnlyCourseAddressBook}. Returns {@code"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #getCourseAddressBookFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook(Path filePath)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Saves the given {@link ReadOnlyCourseAddressBook} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param courseAddressBook cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #saveCourseAddressBook(ReadOnlyCourseAddressBook)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook, Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageCourse/JsonAdaptedCourse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonAdaptedCourse {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Course\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String courseID;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonCourseAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedCourse(@JsonProperty(\"name\") String name,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"courseID\") String courseID,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"tagged\") List\u003cJsonCourseAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courseID \u003d courseID;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Course} into this class for Jackson use."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedCourse(Course source) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseID \u003d source.getId().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .map(JsonCourseAdaptedTag::new)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted Course object into the model\u0027s {@code Course} object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                               Course."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Course toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final List\u003cTag\u003e CourseTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonCourseAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      CourseTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (courseID \u003d\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, ID.class.getSimpleName()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!ID.isValidId(courseID)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final ID modelId \u003d new ID(courseID);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(CourseTags);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Course(modelName, modelId, modelTags);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 88
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageCourse/JsonCourseAdaptedTag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Tag}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonCourseAdaptedTag {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String tagName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonCourseAdaptedTag(String tagName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Tag} into this class for Jackson use."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonCourseAdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagName \u003d source.tagName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String getTagName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return tagName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Tag.isValidTagName(tagName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Tag(tagName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageCourse/JsonCourseAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A class to access CourseAddressBook data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class JsonCourseAddressBookStorage implements CourseAddressBookStorage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      JsonCourseAddressBookStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonCourseAddressBookStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getCourseAddressBookFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readCourseAddressBook(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #readCourseAddressBook()}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyCourseAddressBook\u003e readCourseAddressBook(Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cJsonCourseSerializableAddressBook\u003e jsonCourseAddressBook \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        filePath, JsonCourseSerializableAddressBook.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!jsonCourseAddressBook.isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.of(jsonCourseAddressBook.get().toModelType());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveCourseAddressBook(ReadOnlyCourseAddressBook coursesAddressBook)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveCourseAddressBook(coursesAddressBook, filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #saveCourseAddressBook(ReadOnlyCourseAddressBook)}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveCourseAddressBook(ReadOnlyCourseAddressBook coursesAddressBook, Path filePath)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    System.out.println(\"h\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(coursesAddressBook);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    JsonUtil.saveJsonFile(new JsonCourseSerializableAddressBook(coursesAddressBook), filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageCourse/JsonCourseSerializableAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An Immutable AddressBook that is serializable to JSON format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "@JsonRootName(value \u003d \"courseaddressbook\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonCourseSerializableAddressBook {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_COURSE \u003d \"Courses list contains duplicate course(s).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonAdaptedCourse\u003e courses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonSerializableAddressBook} with the given courses."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonCourseSerializableAddressBook("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"courses\") List\u003cJsonAdaptedCourse\u003e courses) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.courses.addAll(courses);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code ReadOnlyCourseAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param source future changes to this will not affect the created {@code"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *               JsonCourseSerializableAddressBook}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonCourseSerializableAddressBook(ReadOnlyCourseAddressBook source) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courses.addAll(source.getCourseList().stream().map("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonAdaptedCourse::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this address book into the model\u0027s {@code AddressBook} object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CourseAddressBook toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    CourseAddressBook courseAddressBook \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonAdaptedCourse jsonAdaptedCourse : courses) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      Course course \u003d jsonAdaptedCourse.toModelType();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (courseAddressBook.hasCourses(course)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new IllegalValueException(MESSAGE_DUPLICATE_COURSE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      courseAddressBook.addCourse(course);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return courseAddressBook;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageFinance/FinanceAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a storage for {@link seedu.address.model.AddressBook}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface FinanceAddressBookStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the file path of the data file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getFinanceAddressBookFilePath();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns FinanceAddressBook data as a {@link ReadOnlyFinanceAddressBook}. Returns {@code"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #getFinanceAddressBookFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook(Path filePath)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Saves the given {@link ReadOnlyFinanceAddressBook} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param financeAddressBook cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #saveFinanceAddressBook(ReadOnlyFinanceAddressBook)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook, Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageFinance/JsonAdaptedFinance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonAdaptedFinance {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Finance\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String amount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonFinanceAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedFinance(@JsonProperty(\"name\") String name,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"amount\") String amount,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"tagged\") List\u003cJsonFinanceAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.amount \u003d amount;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Finance} into this class for Jackson use."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedFinance(Finance source) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    amount \u003d source.getAmount().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .map(JsonFinanceAdaptedTag::new)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted finance object into the model\u0027s {@code Finance} object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                               finance."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Finance toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final List\u003cTag\u003e financeTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonFinanceAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      financeTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (amount \u003d\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Finance.class.getSimpleName()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Amount.isValidAmount(amount)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Amount modelAmount \u003d new Amount(amount);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(financeTags);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Finance(modelName, modelAmount, modelTags);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 88
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageFinance/JsonFinanceAdaptedTag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Tag}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonFinanceAdaptedTag {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String tagName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonFinanceAdaptedTag(String tagName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Tag} into this class for Jackson use."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonFinanceAdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagName \u003d source.tagName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String getTagName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return tagName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Tag.isValidTagName(tagName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Tag(tagName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageFinance/JsonFinanceAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A class to access FinanceAddressBook data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class JsonFinanceAddressBookStorage implements FinanceAddressBookStorage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      JsonFinanceAddressBookStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonFinanceAddressBookStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getFinanceAddressBookFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readFinanceAddressBook(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #readFinanceAddressBook()}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyFinanceAddressBook\u003e readFinanceAddressBook(Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cJsonFinanceSerializableAddressBook\u003e jsonFinanceAddressBook \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        filePath, JsonFinanceSerializableAddressBook.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!jsonFinanceAddressBook.isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.of(jsonFinanceAddressBook.get().toModelType());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveFinanceAddressBook(financeAddressBook, filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #saveFinanceAddressBook(ReadOnlyFinanceAddressBook)}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook, Path filePath)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    System.out.println(\"h\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(financeAddressBook);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    JsonUtil.saveJsonFile(new JsonFinanceSerializableAddressBook(financeAddressBook), filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageFinance/JsonFinanceSerializableAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An Immutable AddressBook that is serializable to JSON format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "@JsonRootName(value \u003d \"financeaddressbook\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonFinanceSerializableAddressBook {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_FINANCE \u003d \"Finances list contains duplicate finance(s).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonAdaptedFinance\u003e finances \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonSerializableAddressBook} with the given finances."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonFinanceSerializableAddressBook("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"finances\") List\u003cJsonAdaptedFinance\u003e finances) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.finances.addAll(finances);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code ReadOnlyFinanceAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param source future changes to this will not affect the created {@code"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *               JsonFinanceSerializableAddressBook}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonFinanceSerializableAddressBook(ReadOnlyFinanceAddressBook source) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    finances.addAll(source.getFinanceList().stream().map("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonAdaptedFinance::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this address book into the model\u0027s {@code AddressBook} object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FinanceAddressBook toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FinanceAddressBook financeAddressBook \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonAdaptedFinance jsonAdaptedFinance : finances) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      Finance finance \u003d jsonAdaptedFinance.toModelType();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (financeAddressBook.hasFinances(finance)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new IllegalValueException(MESSAGE_DUPLICATE_FINANCE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      financeAddressBook.addFinance(finance);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return financeAddressBook;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageStudent/JsonAdaptedStudent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Student}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonAdaptedStudent {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String course;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonStudentAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedStudent(@JsonProperty(\"name\") String name,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"course\") String course,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"tagged\") List\u003cJsonStudentAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.course \u003d course;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Student} into this class for Jackson use."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedStudent(Student source) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    course \u003d source.getCourse().value;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .map(JsonStudentAdaptedTag::new)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted course object into the model\u0027s {@code Student} object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                               course."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Student toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final List\u003cTag\u003e courseTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonStudentAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      courseTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (course \u003d\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, AssignedCourse.class.getSimpleName()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!AssignedCourse.isValidCourse(course)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(AssignedCourse.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final AssignedCourse modelCourse \u003d new AssignedCourse(course);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(courseTags);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Student(modelName, modelCourse, modelTags);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 86
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageStudent/JsonStudentAdaptedTag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Tag}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonStudentAdaptedTag {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String tagName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonStudentAdaptedTag(String tagName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Tag} into this class for Jackson use."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonStudentAdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagName \u003d source.tagName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String getTagName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return tagName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Tag.isValidTagName(tagName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Tag(tagName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageStudent/JsonStudentAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A class to access StudentAddressBook data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class JsonStudentAddressBookStorage implements StudentAddressBookStorage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      JsonStudentAddressBookStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonStudentAddressBookStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getStudentAddressBookFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readStudentAddressBook(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #readStudentAddressBook()}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook(Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cJsonStudentSerializableAddressBook\u003e jsonStudentAddressBook \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        filePath, JsonStudentSerializableAddressBook.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!jsonStudentAddressBook.isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.of(jsonStudentAddressBook.get().toModelType());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveStudentAddressBook(studentAddressBook, filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #saveStudentAddressBook(ReadOnlyStudentAddressBook)}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook, Path filePath)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(studentAddressBook);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    JsonUtil.saveJsonFile(new JsonStudentSerializableAddressBook(studentAddressBook), filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageStudent/JsonStudentSerializableAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An Immutable AddressBook that is serializable to JSON format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "@JsonRootName(value \u003d \"studentaddressbook\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonStudentSerializableAddressBook {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonSerializableAddressBook} with the given students."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonStudentSerializableAddressBook("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.students.addAll(students);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code ReadOnlyStudentAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param source future changes to this will not affect the created {@code"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *               JsonStudentSerializableAddressBook}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonStudentSerializableAddressBook(ReadOnlyStudentAddressBook source) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    students.addAll(source.getStudentList().stream().map("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonAdaptedStudent::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this address book into the model\u0027s {@code AddressBook} object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StudentAddressBook toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    StudentAddressBook studentAddressBook \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonAdaptedStudent jsonAdaptedStudent : students) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      Student student \u003d jsonAdaptedStudent.toModelType();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (studentAddressBook.hasStudents(student)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      studentAddressBook.addStudent(student);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return studentAddressBook;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageStudent/StudentAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a storage for {@link seedu.address.model.AddressBook}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface StudentAddressBookStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the file path of the data file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getStudentAddressBookFilePath();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns StudentAddressBook data as a {@link ReadOnlyStudentAddressBook}. Returns {@code"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #getStudentAddressBookFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyStudentAddressBook\u003e readStudentAddressBook(Path filePath)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Saves the given {@link ReadOnlyStudentAddressBook} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param studentAddressBook cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #saveStudentAddressBook(ReadOnlyStudentAddressBook)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook, Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageTeacher/JsonAdaptedTeacher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonAdaptedTeacher {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Teacher\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String phone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String email;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String salary;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String address;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonTeacherAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedTeacher(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"email\") String email, @JsonProperty(\"salary\") String salary,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"address\") String address,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"tagged\") List\u003cJsonTeacherAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.name \u003d name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.phone \u003d phone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.email \u003d email;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.salary \u003d salary;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.address \u003d address;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Teacher} into this class for Jackson use."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonAdaptedTeacher(Teacher source) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    phone \u003d source.getPhone().value;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    email \u003d source.getEmail().value;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    salary \u003d source.getSalary().value;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    address \u003d source.getAddress().value;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .map(JsonTeacherAdaptedTag::new)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted teacher object into the model\u0027s {@code Teacher} object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *                               teacher."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Teacher toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final List\u003cTag\u003e teacherTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonTeacherAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      teacherTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Phone.isValidPhone(phone)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Phone modelPhone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (email \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Email.isValidEmail(email)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Email modelEmail \u003d new Email(email);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Salary.isValidSalary(salary)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Salary.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Salary modelSalary \u003d new Salary(salary);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (address \u003d\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Address.isValidAddress(address)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Address modelAddress \u003d new Address(address);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(teacherTags);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Teacher(modelName, modelPhone, modelEmail, modelSalary, modelAddress, modelTags);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 123
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageTeacher/JsonTeacherAdaptedTag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Jackson-friendly version of {@link Tag}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonTeacherAdaptedTag {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final String tagName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonTeacherAdaptedTag(String tagName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code Tag} into this class for Jackson use."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonTeacherAdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    tagName \u003d source.tagName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public String getTagName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return tagName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!Tag.isValidTagName(tagName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return new Tag(tagName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageTeacher/JsonTeacherAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A class to access TeacherAddressBook data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class JsonTeacherAddressBookStorage implements TeacherAddressBookStorage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(JsonTeacherAddressBookStorage.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Path filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonTeacherAddressBookStorage(Path filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Path getTeacherAddressBookFilePath() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return readTeacherAddressBook(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #readTeacherAddressBook()}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook(Path filePath)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    Optional\u003cJsonTeacherSerializableAddressBook\u003e jsonTeacherAddressBook \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        filePath, JsonTeacherSerializableAddressBook.class);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!jsonTeacherAddressBook.isPresent()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return Optional.of(jsonTeacherAddressBook.get().toModelType());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    saveTeacherAddressBook(teacherAddressBook, filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Similar to {@link #saveTeacherAddressBook(ReadOnlyTeacherAddressBook)}."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook, Path filePath)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    System.out.println(\"h\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(teacherAddressBook);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    JsonUtil.saveJsonFile(new JsonTeacherSerializableAddressBook(teacherAddressBook), filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageTeacher/JsonTeacherSerializableAddressBook.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An Immutable AddressBook that is serializable to JSON format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "@JsonRootName(value \u003d \"teacheraddressbook\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "class JsonTeacherSerializableAddressBook {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public static final String MESSAGE_DUPLICATE_TEACHER \u003d \"Teachers list contains duplicate teacher(s).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final List\u003cJsonAdaptedTeacher\u003e teachers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a {@code JsonSerializableAddressBook} with the given teachers."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @JsonCreator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonTeacherSerializableAddressBook("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      @JsonProperty(\"teachers\") List\u003cJsonAdaptedTeacher\u003e teachers) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teachers.addAll(teachers);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts a given {@code ReadOnlyTeacherAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param source future changes to this will not affect the created {@code"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *               JsonTeacherSerializableAddressBook}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public JsonTeacherSerializableAddressBook(ReadOnlyTeacherAddressBook source) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teachers.addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        source.getTeacherList().stream().map(JsonAdaptedTeacher::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Converts this address book into the model\u0027s {@code AddressBook} object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public TeacherAddressBook toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    TeacherAddressBook teacherAddressBook \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    for (JsonAdaptedTeacher jsonAdaptedTeacher : teachers) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      Teacher teacher \u003d jsonAdaptedTeacher.toModelType();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (teacherAddressBook.hasTeachers(teacher)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        throw new IllegalValueException(MESSAGE_DUPLICATE_TEACHER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      teacherAddressBook.addTeacher(teacher);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return teacherAddressBook;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/storageTeacher/TeacherAddressBookStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.storage.storageTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a storage for {@link seedu.address.model.AddressBook}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public interface TeacherAddressBookStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the file path of the data file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Path getTeacherAddressBookFilePath();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns TeacherAddressBook data as a {@link ReadOnlyTeacherAddressBook}. Returns {@code"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #getTeacherAddressBookFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  Optional\u003cReadOnlyTeacherAddressBook\u003e readTeacherAddressBook(Path filePath)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Saves the given {@link ReadOnlyTeacherAddressBook} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param teacherAddressBook cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see #saveTeacherAddressBook(ReadOnlyTeacherAddressBook)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook, Path filePath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      throws IOException;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private TextField commandTextField;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  public CommandBox(CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  private void handleCommandEntered() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      commandExecutor.execute(commandTextField.getText());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  private void setStyleToDefault() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   * Represents a function that can execute commands."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  @FunctionalInterface"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  public interface CommandExecutor {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 77,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  private Button copyButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  private Label helpMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new HelpWindow."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    super(FXML, root);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new HelpWindow."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  public HelpWindow() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    this(new Stage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows the help window."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @throws IllegalStateException \u003cul\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003cli\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                       if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003c/li\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003cli\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                       if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003c/li\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003cli\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                       if this method is called on the primary stage."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003c/li\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003cli\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                       if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   *                                   \u003c/li\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   *                               \u003c/ul\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  public void show() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    getRoot().show();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean isShowing() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    return getRoot().isShowing();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * Hides the help window."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  public void hide() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    getRoot().hide();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   * Focuses on the help window."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  public void focus() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    getRoot().requestFocus();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  private void copyUrl() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    clipboard.setContent(url);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 99,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.animation.FadeTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.uiCourse.CourseListPanel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.uiFinance.FinanceListPanel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.uiStudent.StudentListPanel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.uiTeacher.TeacherListPanel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * The Main Window. Provides the basic application layout containing a menu bar and space where"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * other JavaFX elements can be placed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  private Stage primaryStage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  private Logic logic;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StudentListPanel studentListPanel;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private TeacherListPanel teacherListPanel;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private CourseListPanel courseListPanel;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FinanceListPanel financeListPanel;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FadeTransition ftListPanel;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StackPane dataListPanelPlaceholder;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StackPane studentListPanelPlaceholder;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StackPane teacherListPanelPlaceholder;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StackPane courseListPanelPlaceholder;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private StackPane financeListPanelPlaceholder;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    super(FXML, primaryStage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    // Set dependencies"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    this.logic \u003d logic;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    // Configure the UI"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    setAccelerators();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    return primaryStage;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  private void setAccelerators() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * is fixed in later version of SDK."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * the TextInputControl(s)."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        event.consume();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  void fillInnerParts() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherListPanel \u003d new TeacherListPanel(logic.getFilteredTeacherList());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseListPanel \u003d new CourseListPanel(logic.getFilteredCourseList());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeListPanel \u003d new FinanceListPanel(logic.getFilteredFinanceList());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    dataListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ftListPanel \u003d getFadeTransition(Duration.millis(150), dataListPanelPlaceholder);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  public void handleHelp() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      helpWindow.show();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      helpWindow.focus();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Switch to the Person view."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private void handleSwitchToStudent() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    switchList(studentListPanel.getRoot());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Switch to the Teacher view."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private void handleSwitchToTeacher() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    switchList(teacherListPanel.getRoot());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Switch to the Course view."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private void handleSwitchToCourse() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    switchList(courseListPanel.getRoot());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Switch to the Finance view."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private void handleSwitchToFinance() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    switchList(financeListPanel.getRoot());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "  void show() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    primaryStage.show();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "   * Closes the application."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  private void handleExit() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    helpWindow.hide();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    primaryStage.hide();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Create the fade transition for the StackPane and set value from 0 to 1."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FadeTransition getFadeTransition(Duration duration, StackPane placeholder) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FadeTransition ft \u003d new FadeTransition(duration, placeholder);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ft.setFromValue(0);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ft.setToValue(1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return ft;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Switch the list panel to the given region"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private void switchList(Region region) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    dataListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    dataListPanelPlaceholder.getChildren().add(region);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    ftListPanel.play();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "   * Executes the command and returns the result."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        handleHelp();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "      if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        handleExit();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      return commandResult;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      throw e;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 186,
      "ShengXue97": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String FXML \u003d \"PersonListCard.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception will be"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  public final Person person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  private HBox cardPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  private Label name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  private Label id;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  private Label phone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  private Label address;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  private Label email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  private FlowPane tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  public PersonCard(Person person, int displayedIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    this.person \u003d person;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    name.setText(person.getName().fullName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    phone.setText(person.getPhone().value);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    address.setText(person.getAddress().value);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    email.setText(person.getEmail().value);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    person.getTags().stream()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!(other instanceof PersonCard)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    PersonCard card \u003d (PersonCard) other;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 person.equals(card.person);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 69,
      "ShengXue97": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String FXML \u003d \"PersonListPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  private ListView\u003cPerson\u003e personListView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  public PersonListPanel(ObservableList\u003cPerson\u003e personList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    personListView.setItems(personList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    personListView.setCellFactory(listView -\u003e new PersonListViewCell());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * PersonCard}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  class PersonListViewCell extends ListCell\u003cPerson\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void updateItem(Person person, boolean empty) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      super.updateItem(person, empty);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      if (empty || person \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        setGraphic(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        setText(null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        setGraphic(new PersonCard(person, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * API of UI component"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Starts the UI (and the App)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  void start(Stage primaryStage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  private Logic logic;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  private MainWindow mainWindow;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    this.logic \u003d logic;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Shows an alert dialog on {@code owner} with the given parameters. This method only returns"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * after the user has closed the alert dialog."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static void showAlertDialogAndWait(Stage owner, AlertType type, String title,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      String headerText,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      String contentText) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.initOwner(owner);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.setTitle(title);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.setContentText(contentText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    alert.showAndWait();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    //Set the application icon."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (Throwable e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      String contentText) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Shows an error alert dialog with {@code title} and error message, {@code e}, and exits the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    Platform.exit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    System.exit(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 66,
      "ShengXue97": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiPart.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.EventsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc. It"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Resource folder where FXML files are stored."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  public static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a UiPart with the specified FXML file URL. The FXML file must not specify the {@code"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * fx:controller} attribute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  public UiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    loadFxmlFile(fxmlFileUrl, null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see #UiPart(URL)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  public UiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this(getFxmlFileUrl(fxmlFileName));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a UiPart with the specified FXML file URL and root object. The FXML file must not"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  public UiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    loadFxmlFile(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see #UiPart(URL, T)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  public UiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    this(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the root object of the scene graph of this UiPart."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  public T getRoot() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Registers the object as an event handler at the {@link EventsCenter}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @param handler usually {@code this}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  protected void registerAsAnEventHandler(Object handler) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    EventsCenter.getInstance().registerHandler(handler);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the object hierarchy from a FXML document."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param location Location of the FXML document."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param root     Specifies the root of the object hierarchy."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  private void loadFxmlFile(URL location, T root) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(location);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      fxmlLoader.load();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new AssertionError(e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 71,
      "ShengXue97": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiCourse/CourseCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An UI component that displays information of a {@code Course}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"CourseListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception will be"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final Course course;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private HBox cardPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label id;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label courseID;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FlowPane tags;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CourseCard(Course course, int displayedIndex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.course \u003d course;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name.setText(course.getName().fullName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseID.setText(course.getId().value);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    course.getTags().stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof CourseCard)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    CourseCard card \u003d (CourseCard) other;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 course.equals(card.course);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiCourse/CourseListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiCourse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Panel containing the list of courses."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"CourseListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(CourseListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private ListView\u003cCourse\u003e courseListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public CourseListPanel(ObservableList\u003cCourse\u003e courseList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseListView.setItems(courseList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseListView.setCellFactory(listView -\u003e new CourseListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Custom {@code ListCell} that displays the graphics of a {@code Course} using a {@code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * CourseCard}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  class CourseListViewCell extends ListCell\u003cCourse\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    protected void updateItem(Course course, boolean empty) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      super.updateItem(course, empty);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (empty || course \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setText(null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(new CourseCard(course, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiFinance/FinanceCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An UI component that displays information of a {@code Finance}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"FinanceListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception will be"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final Finance finance;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private HBox cardPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label id;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label amount;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FlowPane tags;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FinanceCard(Finance finance, int displayedIndex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.finance \u003d finance;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name.setText(finance.getName().fullName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    amount.setText(finance.getAmount().value);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    finance.getTags().stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof FinanceCard)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    FinanceCard card \u003d (FinanceCard) other;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 finance.equals(card.finance);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiFinance/FinanceListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiFinance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Panel containing the list of finances."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"FinanceListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(FinanceListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private ListView\u003cFinance\u003e financeListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public FinanceListPanel(ObservableList\u003cFinance\u003e financeList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeListView.setItems(financeList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    financeListView.setCellFactory(listView -\u003e new FinanceListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Custom {@code ListCell} that displays the graphics of a {@code Finance} using a {@code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * FinanceCard}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  class FinanceListViewCell extends ListCell\u003cFinance\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    protected void updateItem(Finance finance, boolean empty) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      super.updateItem(finance, empty);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (empty || finance \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setText(null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(new FinanceCard(finance, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiStudent/StudentCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An UI component that displays information of a {@code Student}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"StudentListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception will be"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final Student student;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private HBox cardPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label id;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label courseID;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FlowPane tags;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StudentCard(Student student, int displayedIndex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.student \u003d student;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name.setText(student.getName().fullName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    courseID.setText(student.getCourse().value);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    student.getTags().stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof StudentCard)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    StudentCard card \u003d (StudentCard) other;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 student.equals(card.student);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiStudent/StudentListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiStudent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Panel containing the list of students."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"StudentListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private ListView\u003cStudent\u003e studentListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentListView.setItems(studentList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    studentListView.setCellFactory(listView -\u003e new StudentListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * StudentCard}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  class StudentListViewCell extends ListCell\u003cStudent\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    protected void updateItem(Student student, boolean empty) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      super.updateItem(student, empty);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (empty || student \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setText(null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(new StudentCard(student, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiTeacher/TeacherCard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * An UI component that displays information of a {@code Teacher}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"TeacherListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception will be"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public final Teacher teacher;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private HBox cardPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label id;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label phone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label address;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label email;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private Label salary;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private FlowPane tags;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public TeacherCard(Teacher teacher, int displayedIndex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    this.teacher \u003d teacher;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    name.setText(teacher.getName().fullName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    phone.setText(teacher.getPhone().value);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    address.setText(teacher.getAddress().value);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    email.setText(teacher.getEmail().value);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    salary.setText(teacher.getSalary().value);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacher.getTags().stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public boolean equals(Object other) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // short circuit if same object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // instanceof handles nulls"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    if (!(other instanceof TeacherCard)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // state check"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    TeacherCard card \u003d (TeacherCard) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u0026\u0026 teacher.equals(card.teacher);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/uiTeacher/TeacherListPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.ui.uiTeacher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Panel containing the list of teachers."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private static final String FXML \u003d \"TeacherListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private final Logger logger \u003d LogsCenter.getLogger(TeacherListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  private ListView\u003cTeacher\u003e teacherListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  public TeacherListPanel(ObservableList\u003cTeacher\u003e teacherList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherListView.setItems(teacherList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    teacherListView.setCellFactory(listView -\u003e new TeacherListViewCell());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * Custom {@code ListCell} that displays the graphics of a {@code Teacher} using a {@code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   * TeacherCard}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  class TeacherListViewCell extends ListCell\u003cTeacher\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    protected void updateItem(Teacher teacher, boolean empty) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      super.updateItem(teacher, empty);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      if (empty || teacher \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setText(null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        setGraphic(new TeacherCard(teacher, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cTextField onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    fx:id\u003d\"commandTextField\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "ShengXue97": 4
    }
  },
  {
    "path": "src/main/resources/view/CourseListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  fx:id\u003d\"cardPane\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" fx:id\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" fx:id\u003d\"name\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Course ID: \"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$courseID\" fx:id\u003d\"courseID\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 37
    }
  },
  {
    "path": "src/main/resources/view/CourseListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cLabel text\u003d\" Courses\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"courseListView\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 9
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "css",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #383838; /* Used in the default.html file */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #555555;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ".label-bright {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ".label-header {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 32pt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane .tab-header-area {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-min-height: 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-max-height: 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-base: #1d1d1d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-control-inner-background: #1d1d1d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-cell-border-color: transparent;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-header-border-color: transparent;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header-background {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header, .table-view .filler {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-size: 35;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0 0 1 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        derive(-fx-base, 80%)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0 10 1 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header .label {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 20pt;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-alignment: center-left;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view:focused .table-row-cell:filled:focused:selected {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane:horizontal .split-pane-divider {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: transparent transparent transparent #4d4d4d;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-label-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-graphic-text-gap : 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:even {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3c3e3f;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:odd {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #515658;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #424d5f;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected #cardPane {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #3e7b91;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell .label {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_big_label {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 16px;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_small_label {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13px;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ".stack-pane {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ".pane-with-border {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-border-color: derive(#1d1d1d, 10%);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-border-top-width: 1px;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display .label {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: black !important;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar .label {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 4px;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-pref-height: 30px;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: derive(#1d1d1d, 25%);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border .label {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane .stack-pane {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu .label {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar .label {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ".menu .left-container {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: black;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    -fx-background-color:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            linear-gradient(#f2f2f2, #d6d6d6),"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            linear-gradient(#fcfcfc 0%, #d9d9d9 20%, #d6d6d6 100%),"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            linear-gradient(#dddddd 0%, #f6f6f6 50%);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     -fx-background-radius: 8,7,6;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     -fx-background-insets: 0,1,2;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     -fx-text-fill: black;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     -fx-effect: dropshadow( three-pass-box , rgba(0,0,0,0.6) , 5, 0.0 , 0 , 1 );"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-text-fill: #1d1d1d;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white, white;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    -fx-background-color: grey;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.button-bar \u003e *.container {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.label.content {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14px;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-weight: bold;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 25%);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel *.label {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-fill: white;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 8 1 8;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent #383838 transparent #383838;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #383838 #383838 #ffffff #383838;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "#filterField, #personListPanel, #personWebpage {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "#resultDisplay .content {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent, #383838, transparent, #383838;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "#tags {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-hgap: 7;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-vgap: 3;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "#tags .label {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3e7b91;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 3 1 3;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 2;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 2;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "#buttonBar {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 342,
      "ShengXue97": 15
    }
  },
  {
    "path": "src/main/resources/view/FinanceListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  fx:id\u003d\"cardPane\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" fx:id\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" fx:id\u003d\"name\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$amount\" fx:id\u003d\"amount\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 37
    }
  },
  {
    "path": "src/main/resources/view/FinanceListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cLabel text\u003d\" Finances\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"financeListView\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 9
    }
  },
  {
    "path": "src/main/resources/view/HelpWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" fx:id\u003d\"copyButton\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cInsets left\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cLabel text\u003d\"Label\" fx:id\u003d\"helpMessage\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              \u003cInsets right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 30,
      "ShengXue97": 9
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"600\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  minWidth\u003d\"450\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cHBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"500.0\" prefWidth\u003d\"100.0\" spacing\u003d\"5\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/8.0.171\" fx:id\u003d\"buttonBar\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleSwitchToStudent\" prefHeight\u003d\"80.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                prefWidth\u003d\"80.0\" text\u003d\"Students\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleSwitchToTeacher\" prefHeight\u003d\"80.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                prefWidth\u003d\"80.0\" text\u003d\"Teachers\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleSwitchToCourse\" prefHeight\u003d\"80.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                prefWidth\u003d\"80.0\" text\u003d\"Courses\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleSwitchToFinance\" prefHeight\u003d\"80.0\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                prefWidth\u003d\"80.0\" text\u003d\"Finances\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cVBox\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cStackPane VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              fx:id\u003d\"commandBoxPlaceholder\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cpadding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/padding\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cStackPane VBox.vgrow\u003d\"NEVER\" maxHeight\u003d\"100\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              minHeight\u003d\"100\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" fx:id\u003d\"resultDisplayPlaceholder\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cpadding\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/padding\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"statusbarPlaceholder\"/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cVBox SplitPane.resizableWithParent\u003d\"false\" minWidth\u003d\"340\" prefWidth\u003d\"340\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              fx:id\u003d\"dataList\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"dataListPanelPlaceholder\"/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cpadding\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/padding\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cMenuBar VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"menuBar\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "              fx:id\u003d\"helpMenuItem\"/\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\"/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/resources/view/PersonListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  fx:id\u003d\"cardPane\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" fx:id\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" fx:id\u003d\"name\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" fx:id\u003d\"phone\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" fx:id\u003d\"address\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" fx:id\u003d\"email\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "ShengXue97": 16
    }
  },
  {
    "path": "src/main/resources/view/PersonListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cLabel text\u003d\" Students\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"personListView\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "ShengXue97": 4
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  fx:id\u003d\"placeHolder\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cTextArea editable\u003d\"false\" styleClass\u003d\"result-display\" fx:id\u003d\"resultDisplay\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/resources/view/StatusBarFooter.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/main/resources/view/StudentListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  fx:id\u003d\"cardPane\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" fx:id\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" fx:id\u003d\"name\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Course Name: \"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$course\" fx:id\u003d\"courseID\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 37
    }
  },
  {
    "path": "src/main/resources/view/StudentListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cLabel text\u003d\" Students\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"studentListView\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 9
    }
  },
  {
    "path": "src/main/resources/view/TeacherListCard.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  fx:id\u003d\"cardPane\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" fx:id\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" fx:id\u003d\"name\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Phone Number: \"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" fx:id\u003d\"phone\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Address: \"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" fx:id\u003d\"address\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Email Address: \"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" fx:id\u003d\"email\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cHBox\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Salary: $\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"\\$salary\" fx:id\u003d\"salary\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 49
    }
  },
  {
    "path": "src/main/resources/view/TeacherListPanel.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cLabel text\u003d\" Teachers\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"teacherListView\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/LogicManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageCourse.JsonCourseAddressBookStorage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageFinance.JsonFinanceAddressBookStorage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageStudent.JsonStudentAddressBookStorage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageTeacher.JsonTeacherAddressBookStorage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManagerTest {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path temporaryFolder;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonTeacherAddressBookStorage teacherAddressBookStorage \u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonTeacherAddressBookStorage(temporaryFolder.resolve(\"teacherAddressBook.json\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonStudentAddressBookStorage studentAddressBookStorage \u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonStudentAddressBookStorage(temporaryFolder.resolve(\"studentAddressBook.json\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonFinanceAddressBookStorage financeAddressBookStorage \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonFinanceAddressBookStorage(temporaryFolder.resolve(\"FinanceAddressBook.json\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonCourseAddressBookStorage courseAddressBookStorage \u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonCourseAddressBookStorage(temporaryFolder.resolve(\"courseAddressBook.json\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, teacherAddressBookStorage,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            studentAddressBookStorage, financeAddressBookStorage, courseAddressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidCommandFormat_throwsParseException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_commandExecutionError_throwsCommandException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String deleteCommand \u003d \"delete 9\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_storageThrowsIoException_throwsCommandException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonAddressBookIoExceptionThrowingStub addressBookStorage \u003d"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonTeacherAddressBookIoExceptionThrowingStub teacherAddressBookStorage \u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonTeacherAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTeacherAddressBook.json\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonStudentAddressBookIoExceptionThrowingStub studentAddressBookStorage \u003d"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonStudentAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionStudentAddressBook.json\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonFinanceAddressBookIoExceptionThrowingStub financeAddressBookStorage \u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonFinanceAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFinanceAddressBook.json\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonCourseAddressBookIoExceptionThrowingStub courseAddressBookStorage \u003d"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonCourseAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionCourseAddressBook.json\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, teacherAddressBookStorage,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            studentAddressBookStorage, financeAddressBookStorage, courseAddressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // Execute add command"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addPerson(expectedPerson);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        //assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and confirms that"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * - no exceptions are thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(String inputCommand, String expectedMessage,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult result \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertParseException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that the exception is thrown and that the result message is correct."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeacherAddressBook(),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getStudentAddressBook(), model.getFinanceAddressBook(), model.getCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and confirms that"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code expectedException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandSuccess(String, String, Model)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private static class JsonTeacherAddressBookIoExceptionThrowingStub extends JsonTeacherAddressBookStorage {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        private JsonTeacherAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void saveTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private static class JsonStudentAddressBookIoExceptionThrowingStub extends JsonStudentAddressBookStorage {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        private JsonStudentAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void saveStudentAddressBook(ReadOnlyStudentAddressBook teacherAddressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private static class JsonFinanceAddressBookIoExceptionThrowingStub extends JsonFinanceAddressBookStorage {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        private JsonFinanceAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void saveFinanceAddressBook(ReadOnlyFinanceAddressBook teacherAddressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private static class JsonCourseAddressBookIoExceptionThrowingStub extends JsonCourseAddressBookStorage {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        private JsonCourseAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void saveCourseAddressBook(ReadOnlyCourseAddressBook teacherAddressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 149,
      "ShengXue97": 93
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.getTypicalTeacherAddressBook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.getTypicalStudentAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.getTypicalFinanceAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.getTypicalCourseAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code AddCommand}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandIntegrationTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_newPerson_success() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeacherAddressBook(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getStudentAddressBook(), model.getFinanceAddressBook(), model.getCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.addPerson(validPerson);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new AddCommand(validPerson), model,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInList \u003d model.getAddressBook().getPersonList().get(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "ShengXue97": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.ReadOnlyCourseAddressBook;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.ReadOnlyFinanceAddressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.ReadOnlyStudentAddressBook;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.ReadOnlyTeacherAddressBook;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validPerson);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public Path getTeacherAddressBookFilePath() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setTeacherAddressBookFilePath(Path teacherAddressBookFilePath) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ReadOnlyTeacherAddressBook getTeacherAddressBook() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setTeacherAddressBook(ReadOnlyTeacherAddressBook teacherAddressBook) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public boolean hasTeacher(Teacher teacher) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void deleteTeacher(Teacher target) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void addTeacher(Teacher teacher) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setTeacher(Teacher target, Teacher editedTeacher) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ObservableList\u003cTeacher\u003e getFilteredTeacherList() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void updateFilteredTeacherList(Predicate\u003cTeacher\u003e predicate) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public Path getStudentAddressBookFilePath() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setStudentAddressBookFilePath(Path studentAddressBookFilePath) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ReadOnlyStudentAddressBook getStudentAddressBook() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setStudentAddressBook(ReadOnlyStudentAddressBook studentAddressBook) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public boolean hasStudent(Student student) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void deleteStudent(Student target) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void addStudent(Student student) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setStudent(Student target, Student editedStudent) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ObservableList\u003cStudent\u003e getFilteredStudentList() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public Path getCourseAddressBookFilePath() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setCourseAddressBookFilePath(Path courseAddressBookFilePath) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ReadOnlyCourseAddressBook getCourseAddressBook() {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setCourseAddressBook(ReadOnlyCourseAddressBook courseAddressBook) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public boolean hasCourse(Course course) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void deleteCourse(Course target) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void addCourse(Course course) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setCourse(Course target, Course editedCourse) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ObservableList\u003cCourse\u003e getFilteredCourseList() {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void updateFilteredCourseList(Predicate\u003cCourse\u003e predicate) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public Path getFinanceAddressBookFilePath() {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setFinanceAddressBookFilePath(Path financeAddressBookFilePath) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ReadOnlyFinanceAddressBook getFinanceAddressBook() {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setFinanceAddressBook(ReadOnlyFinanceAddressBook financeAddressBook) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public boolean hasFinance(Finance finance) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void deleteFinance(Finance target) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void addFinance(Finance finance) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void setFinance(Finance target, Finance editedFinance) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public ObservableList\u003cFinance\u003e getFilteredFinanceList() {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        public void updateFilteredFinanceList(Predicate\u003cFinance\u003e predicate) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that contains a single person."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubWithPerson extends ModelStub {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Person person;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubWithPerson(Person person) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            this.person \u003d person;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.person.isSamePerson(person);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that always accept the person being added."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends ModelStub {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            return personsAdded.stream().anyMatch(person::isSamePerson);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "            personsAdded.add(person);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddressBook();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 194,
      "ShengXue97": 209
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ClearCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.getTypicalCourseAddressBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.getTypicalFinanceAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.getTypicalStudentAddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.getTypicalTeacherAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_emptyAddressBook_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_nonEmptyAddressBook_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setAddressBook(new AddressBook());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 30,
      "ShengXue97": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_AMOUNT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSEID;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_AMY \u003d \"11111111\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_BOB \u003d \"22222222\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_HUSBAND \u003d \"husband\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_FRIEND \u003d \"friend\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_SALARY_AMY \u003d \"1000\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_SALARY_BOB \u003d \"2000\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_COURSE_AMY \u003d \"Java\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_COURSE_BOB \u003d \"Python\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_ID_AMY \u003d \"1000\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_ID_BOB \u003d \"2000\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_AMOUNT_AMY \u003d \"1000\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String VALID_AMOUNT_BOB \u003d \"2000\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String SALARY_DESC_AMY \u003d \" \" + PREFIX_SALARY + VALID_SALARY_AMY;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String SALARY_DESC_BOB \u003d \" \" + PREFIX_SALARY + VALID_SALARY_BOB;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String COURSE_DESC_AMY \u003d \" \" + PREFIX_COURSE + VALID_COURSE_AMY;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String COURSE_DESC_BOB \u003d \" \" + PREFIX_COURSE + VALID_COURSE_BOB;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_COURSEID + VALID_ID_AMY;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_COURSEID + VALID_ID_BOB;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String AMOUNT_DESC_AMY \u003d \" \" + PREFIX_AMOUNT+ VALID_AMOUNT_AMY;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String AMOUNT_DESC_BOB \u003d \" \" + PREFIX_AMOUNT + VALID_AMOUNT_BOB;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String INVALID_SALARY_DESC \u003d \" \" + PREFIX_SALARY + \"911a*\"; // \u0027a\u0027 not allowed in salary"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String INVALID_COURSE_DESC \u003d \" \" + PREFIX_COURSE + \"Python\u0026\"; // \u0027\u0026\u0027 not allowed in course"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String INVALID_AMOUNT_DESC \u003d \" \" + PREFIX_AMOUNT + \"911a\"; // \u0027a\u0027 not allowed in amount"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_COURSEID + \"911a\"; // \u0027a\u0027 not allowed in ID"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_AMY;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_BOB;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException ce) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedAddressBook, actualModel.getAddressBook());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code model}\u0027s address book."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showPersonAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 128,
      "ShengXue97": 25
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.getTypicalCourseAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.getTypicalFinanceAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.getTypicalStudentAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.getTypicalTeacherAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code DeleteCommand}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeacherAddressBook(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getStudentAddressBook(), model.getFinanceAddressBook(), model.getCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.deletePerson(personToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeacherAddressBook(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getStudentAddressBook(), model.getFinanceAddressBook(), model.getCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.deletePerson(personToDelete);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        showNoPerson(expectedModel);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidIndexFilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show no one."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showNoPerson(Model model) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(p -\u003e false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(model.getFilteredPersonList().isEmpty());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 106,
      "ShengXue97": 11
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.getTypicalCourseAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.getTypicalFinanceAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.getTypicalStudentAddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.getTypicalTeacherAddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for EditCommand."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_allFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new TeacherAddressBook(model.getTeacherAddressBook())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        , new StudentAddressBook(model.getStudentAddressBook()), new FinanceAddressBook(model.getFinanceAddressBook()),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new CourseAddressBook(model.getCourseAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_someFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new TeacherAddressBook(model.getTeacherAddressBook())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ,new StudentAddressBook(model.getStudentAddressBook()) ,new FinanceAddressBook(model.getFinanceAddressBook()),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new CourseAddressBook(model.getCourseAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(lastPerson, editedPerson);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_noFieldSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new TeacherAddressBook(model.getTeacherAddressBook())"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            , new StudentAddressBook(model.getStudentAddressBook()), new FinanceAddressBook(model.getFinanceAddressBook()),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new CourseAddressBook(model.getCourseAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_filteredList_success() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        Model expectedModel \u003dnew ModelManager(new AddressBook(model.getAddressBook()), new TeacherAddressBook(model.getTeacherAddressBook())"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            , new StudentAddressBook(model.getStudentAddressBook()), new FinanceAddressBook(model.getFinanceAddressBook()),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new CourseAddressBook(model.getCourseAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonUnfilteredList_failure() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonFilteredList_failure() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        // edit person in filtered list into a duplicate in address book"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                new EditPersonDescriptorBuilder(personInList).build());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(commandWithSameValues));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(standardCommand));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(null));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new ClearCommand()));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        // different descriptor -\u003e returns false"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 166,
      "ShengXue97": 25
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditPersonDescriptorTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(DESC_AMY.equals(descriptorWithSameValues));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(DESC_AMY.equals(DESC_AMY));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // different values -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(DESC_BOB));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // different phone -\u003e returns false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        // different email -\u003e returns false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // different address -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // different tags -\u003e returns false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(DESC_AMY.equals(editedAmy));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 57,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.getTypicalCourseAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.getTypicalFinanceAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.CARL;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ELLE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.FIONA;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.getTypicalStudentAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.getTypicalTeacherAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code FindCommand}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate firstPredicate \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate secondPredicate \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(null));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_zeroKeywords_noPersonFound() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d new FindCommand(predicate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Collections.emptyList(), model.getFilteredPersonList());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_multipleKeywords_multiplePersonsFound() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d new FindCommand(predicate);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private NameContainsKeywordsPredicate preparePredicate(String userInput) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 81,
      "ShengXue97": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.getTypicalCourseAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.getTypicalFinanceAddressBook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.getTypicalStudentAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.getTypicalTeacherAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for ListCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeacherAddressBook(), getTypicalStudentAddressBook(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            getTypicalFinanceAddressBook(), getTypicalCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeacherAddressBook(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            model.getStudentAddressBook(), model.getFinanceAddressBook(), model.getCourseAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_listIsFiltered_showsEverything() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "ShengXue97": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BOB;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserAdd.AddCommandParser;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParserTest {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allFieldsPresent_success() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // whitespace only preamble"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple names - last name accepted"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple phones - last phone accepted"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple emails - last email accepted"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple addresses - last address accepted"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple tags - all accepted"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_optionalFieldsMissing_success() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        // zero tags"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                new AddCommand(expectedPerson));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_compulsoryFieldMissing_failure() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing name prefix"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing phone prefix"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing email prefix"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // missing address prefix"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // all prefixes missing"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid name"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid phone"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid email"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid address"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid tag"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        // two invalid values, only first invalid value reported"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        // non-empty preamble"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 140,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddressBookParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandClear.ClearCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandList.ListCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonUtil;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParserTest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser parser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(person), command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_help() throws Exception {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e parser.parseCommand(\"\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 94,
      "ShengXue97": 7
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandDelete.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserDelete.DeleteCommandParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * As we are only doing white-box testing, our test cases do not cover path variations"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * same path through the DeleteCommand, and therefore we test only one of them."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * The path variation for those two cases occur inside the ParserUtil, and"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * therefore should be covered by the ParserUtilTest."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private DeleteCommandParser parser \u003d new DeleteCommandParser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validArgs_returnsDeleteCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidArgs_throwsParseException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/EditCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserEdit.EditCommandParser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParserTest {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_INVALID_FORMAT \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_missingParts_failure() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        // no index specified"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // no field specified"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // no index and no field specified"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidPreamble_failure() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // negative index"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // zero index"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid arguments being parsed as preamble"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid prefix being parsed as preamble"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid phone followed by valid email"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        // parsing it together with a valid tag results in error"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple invalid values, but only the first invalid value is captured"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allFieldsSpecified_success() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_someFieldsSpecified_success() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(VALID_EMAIL_AMY).build();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_oneFieldSpecified_success() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        // name"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_THIRD_PERSON;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        // phone"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // email"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        // address"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        // tags"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_multipleRepeatedFields_acceptsLast() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValueFollowedByValidValue_success() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        // no other valid values specified"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        // other valid values specified"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                + PHONE_DESC_BOB;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                .withAddress(VALID_ADDRESS_BOB).build();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_resetTags_success() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        Index targetIndex \u003d INDEX_THIRD_PERSON;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 209,
      "ShengXue97": 3
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/FindCommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandFind.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.parser.parserFind.FindCommandParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private FindCommandParser parser \u003d new FindCommandParser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_emptyArg_throwsParseException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validArgs_returnsFindCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // no leading and trailing whitespaces"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand expectedFindCommand \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple whitespaces between keywords"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 33,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BENSON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.TEACHER_ALICE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalTeacher.TEACHER_BENSON;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.STUDENT_ALICE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalStudent.STUDENT_BENSON;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.FINANCE_ALICE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalFinance.FINANCE_BENSON;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.COURSE_ALICE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.testutil.TypicalCourse.COURSE_BENSON;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.AddressBookBuilder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.testutil.CourseAddressBookBuilder;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.testutil.FinanceAddressBookBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.testutil.StudentAddressBookBuilder;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.testutil.TeacherAddressBookBuilder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(userPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // Modifying userPrefs should not modify modelManager\u0027s userPrefs"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(oldUserPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_validGuiSettings_setsGuiSettings() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Path path \u003d Paths.get(\"address/book/file/path\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setAddressBookFilePath(path);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(path, modelManager.getAddressBookFilePath());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personNotInAddressBook_returnsFalse() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.hasPerson(ALICE));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.addPerson(ALICE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.hasPerson(ALICE));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        TeacherAddressBook teacherAddressBook \u003d new TeacherAddressBookBuilder().withTeacher(TEACHER_ALICE).withTeacher(TEACHER_BENSON).build();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        StudentAddressBook studentAddressBook \u003d new StudentAddressBookBuilder().withStudent(STUDENT_ALICE).withStudent(STUDENT_BENSON).build();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        FinanceAddressBook financeAddressBook \u003d new FinanceAddressBookBuilder().withFinance(FINANCE_ALICE).withFinance(FINANCE_BENSON).build();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        CourseAddressBook courseAddressBook \u003d new CourseAddressBookBuilder().withCourse(COURSE_ALICE).withCourse(COURSE_BENSON).build();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook differentAddressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        TeacherAddressBook differentTeacherAddressBook \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        StudentAddressBook differentStudentAddressBook \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        FinanceAddressBook differentFinanceAddressBook \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        CourseAddressBook differentCourseAddressBook \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        modelManager \u003d new ModelManager(addressBook, teacherAddressBook, studentAddressBook, financeAddressBook, courseAddressBook, userPrefs);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, teacherAddressBook, studentAddressBook, financeAddressBook, courseAddressBook,  userPrefs);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManagerCopy));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(null));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(5));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        // different addressBook -\u003e returns false"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentTeacherAddressBook, differentStudentAddressBook,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            differentFinanceAddressBook, differentCourseAddressBook, userPrefs)));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        // different filteredList -\u003e returns false"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentTeacherAddressBook, differentStudentAddressBook,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            differentFinanceAddressBook, differentCourseAddressBook, userPrefs)));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        // different userPrefs -\u003e returns false"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(addressBook, teacherAddressBook, studentAddressBook, financeAddressBook, courseAddressBook, differentUserPrefs)));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 127,
      "ShengXue97": 33
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/StorageManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageCourse.JsonCourseAddressBookStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageFinance.JsonFinanceAddressBookStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageStudent.JsonStudentAddressBookStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.storage.storageTeacher.JsonTeacherAddressBookStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonTeacherAddressBookStorage teacherAddressBookStorage \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonTeacherAddressBookStorage(getTempFilePath(\"tab\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonStudentAddressBookStorage studentAddressBookStorage \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonStudentAddressBookStorage(getTempFilePath(\"sab\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonFinanceAddressBookStorage financeAddressBookStorage \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonFinanceAddressBookStorage(getTempFilePath(\"fab\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        JsonCourseAddressBookStorage courseAddressBookStorage \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            new JsonCourseAddressBookStorage(getTempFilePath(\"cab\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        storageManager \u003d new StorageManager(addressBookStorage, teacherAddressBookStorage,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            studentAddressBookStorage, financeAddressBookStorage, courseAddressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addressBookReadSave() throws Exception {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonAddressBookStorage} class."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook original \u003d getTypicalAddressBook();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveAddressBook(original);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, new AddressBook(retrieved));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getAddressBookFilePath() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(storageManager.getAddressBookFilePath());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 67,
      "ShengXue97": 15
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/CourseAddressBookBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Addressbook objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseAddressBookBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private CourseAddressBook courseAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseAddressBookBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        courseAddressBook \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseAddressBookBuilder(CourseAddressBook courseAddressBook) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.courseAddressBook \u003d courseAddressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Adds a new {@code Person} to the {@code AddressBook} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseAddressBookBuilder withCourse(Course course) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        courseAddressBook.addCourse(course);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseAddressBook build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return courseAddressBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/CourseBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Course objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class CourseBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Java Programming\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_ID \u003d \"102\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private ID id;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseBuilder() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        id \u003d new ID(DEFAULT_ID);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Initializes the CourseBuilder with the data of {@code courseToCopy}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseBuilder(Course courseToCopy) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d courseToCopy.getName();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        id \u003d courseToCopy.getId();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(courseToCopy.getTags());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Name} of the {@code Course} that we are building."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseBuilder withName(String name) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Course} that we are building."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code ID} of the {@code Course} that we are building."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public CourseBuilder withID(String id) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.id \u003d new ID(id);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Course build() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new Course(name, id, tags);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 67
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class to help with building EditPersonDescriptor objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditPersonDescriptorBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private EditPersonDescriptor descriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptor();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.descriptor \u003d new EditPersonDescriptor(descriptor);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder(Person person) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor \u003d new EditPersonDescriptor();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setName(person.getName());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setPhone(person.getPhone());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setEmail(person.getEmail());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setAddress(person.getAddress());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setTags(person.getTags());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withName(String name) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setName(new Name(name));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setPhone(new Phone(phone));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withEmail(String email) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setEmail(new Email(email));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withAddress(String address) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setAddress(new Address(address));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * that we are building."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptorBuilder withTags(String... tags) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.setTags(tagSet);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditPersonDescriptor build() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 86,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/FinanceAddressBookBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Addressbook objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceAddressBookBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private FinanceAddressBook financeAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceAddressBookBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        financeAddressBook \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceAddressBookBuilder(FinanceAddressBook financeAddressBook) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.financeAddressBook \u003d financeAddressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Adds a new {@code Person} to the {@code AddressBook} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceAddressBookBuilder withFinance(Finance finance) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        financeAddressBook.addFinance(finance);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceAddressBook build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return financeAddressBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/FinanceBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Amount;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Finance objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class FinanceBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"AdHoc\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_AMOUNT \u003d \"102\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Amount amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceBuilder() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        amount \u003d new Amount(DEFAULT_AMOUNT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Initializes the FinanceBuilder with the data of {@code financeToCopy}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceBuilder(Finance financeToCopy) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d financeToCopy.getName();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        amount \u003d financeToCopy.getAmount();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(financeToCopy.getTags());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Name} of the {@code Finance} that we are building."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceBuilder withName(String name) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Finance} that we are building."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code ID} of the {@code Finance} that we are building."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public FinanceBuilder withAmount(String amount) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.amount \u003d new Amount(amount);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Finance build() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new Finance(name, amount, tags);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 67
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/PersonUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandAdd.AddCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.logic.commands.commandEdit.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class for Person."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonUtil {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an add command string for adding the {@code person}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getAddCommand(Person person) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the part of command string for the given {@code person}\u0027s details."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getPersonDetails(Person person) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_NAME + person.getName().fullName + \" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        person.getTags().stream().forEach("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (descriptor.getTags().isPresent()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            if (tags.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                sb.append(PREFIX_TAG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 60,
      "ShengXue97": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/StudentAddressBookBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Addressbook objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentAddressBookBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private StudentAddressBook studentAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentAddressBookBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        studentAddressBook \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentAddressBookBuilder(StudentAddressBook studentAddressBook) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.studentAddressBook \u003d studentAddressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Adds a new {@code Person} to the {@code AddressBook} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentAddressBookBuilder withStudent(Student student) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        studentAddressBook.addStudent(student);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentAddressBook build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return studentAddressBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/StudentBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.AssignedCourse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Student objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class StudentBuilder {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_COURSE \u003d \"Java Programming\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private AssignedCourse course;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentBuilder() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        course \u003d new AssignedCourse(DEFAULT_COURSE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Initializes the StudentBuilder with the data of {@code studentToCopy}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentBuilder(Student studentToCopy) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d studentToCopy.getName();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        course \u003d studentToCopy.getCourse();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Name} of the {@code Student} that we are building."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentBuilder withName(String name) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code AssignedCourse} of the {@code Student} that we are building."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public StudentBuilder withCourse(String course) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.course \u003d new AssignedCourse(course);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Student build() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new Student(name, course, tags);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 71
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TeacherAddressBookBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Addressbook objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherAddressBookBuilder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private TeacherAddressBook teacherAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherAddressBookBuilder() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        teacherAddressBook \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherAddressBookBuilder(TeacherAddressBook teacherAddressBook) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.teacherAddressBook \u003d teacherAddressBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Adds a new {@code Person} to the {@code AddressBook} that we are building."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherAddressBookBuilder withTeacher(Teacher teacher) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        teacherAddressBook.addTeacher(teacher);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherAddressBook build() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return teacherAddressBook;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 36
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TeacherBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.person.Salary;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class to help with building Teacher objects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TeacherBuilder {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_PHONE \u003d \"85355255\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_SALARY \u003d \"1000\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Email email;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Salary salary;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Address address;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        phone \u003d new Phone(DEFAULT_PHONE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        email \u003d new Email(DEFAULT_EMAIL);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        salary \u003d new Salary(DEFAULT_SALARY);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        address \u003d new Address(DEFAULT_ADDRESS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Initializes the TeacherBuilder with the data of {@code teacherToCopy}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder(Teacher teacherToCopy) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        name \u003d teacherToCopy.getName();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        phone \u003d teacherToCopy.getPhone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        email \u003d teacherToCopy.getEmail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        salary \u003d teacherToCopy.getSalary();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        address \u003d teacherToCopy.getAddress();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(teacherToCopy.getTags());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Name} of the {@code Teacher} that we are building."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder withName(String name) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Teacher} that we are building."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Address} of the {@code Teacher} that we are building."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder withAddress(String address) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.address \u003d new Address(address);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Phone} of the {@code Teacher} that we are building."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.phone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Email} of the {@code Teacher} that we are building."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder withEmail(String email) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.email \u003d new Email(email);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Sets the {@code Salary} of the {@code Teacher} that we are building."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public TeacherBuilder withSalary(String salary) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        this.salary \u003d new Salary(salary);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public Teacher build() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new Teacher(name, phone, email, salary, address, tags);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 105
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalCourse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_AMOUNT_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_AMOUNT_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.Course;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelCourse.CourseAddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class containing a list of {@code Course} objects to be used in tests."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TypicalCourse {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course COURSE_ALICE \u003d new CourseBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course COURSE_BENSON \u003d new CourseBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course CARL \u003d new CourseBuilder().withName(\"Carl Kurz\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\").build();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course DANIEL \u003d new CourseBuilder().withName(\"Daniel Meier\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course ELLE \u003d new CourseBuilder().withName(\"Elle Meyer\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\").build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course FIONA \u003d new CourseBuilder().withName(\"Fiona Kunz\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\").build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course GEORGE \u003d new CourseBuilder().withName(\"George Best\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withID(\"1000\").build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course HOON \u003d new CourseBuilder().withName(\"Hoon Meier\").withID(\"1000\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course IDA \u003d new CourseBuilder().withName(\"Ida Mueller\").withID(\"1000\").build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added - Course\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course AMY \u003d new CourseBuilder().withName(VALID_NAME_AMY).withID(VALID_ID_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Course BOB \u003d new CourseBuilder().withName(VALID_NAME_BOB).withID(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private TypicalCourse() {} // prevents instantiation"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical courses."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static CourseAddressBook getTypicalCourseAddressBook() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        CourseAddressBook ab \u003d new CourseAddressBook();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        for (Course course : getTypicalCourses()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            ab.addCourse(course);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static List\u003cCourse\u003e getTypicalCourses() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(COURSE_ALICE, COURSE_BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 68
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalFinance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_AMOUNT_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_AMOUNT_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.Finance;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelFinance.FinanceAddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class containing a list of {@code Finance} objects to be used in tests."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TypicalFinance {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance FINANCE_ALICE \u003d new FinanceBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withAmount(\"999\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance FINANCE_BENSON \u003d new FinanceBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withAmount(\"999\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance CARL \u003d new FinanceBuilder().withName(\"Carl Kurz\").withAmount(\"999\").build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance DANIEL \u003d new FinanceBuilder().withName(\"Daniel Meier\").withAmount(\"999\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance ELLE \u003d new FinanceBuilder().withName(\"Elle Meyer\").withAmount(\"999\").build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance FIONA \u003d new FinanceBuilder().withName(\"Fiona Kunz\").withAmount(\"999\").build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance GEORGE \u003d new FinanceBuilder().withName(\"George Best\").withAmount(\"999\").build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance HOON \u003d new FinanceBuilder().withName(\"Hoon Meier\").withAmount(\"999\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance IDA \u003d new FinanceBuilder().withName(\"Ida Mueller\").withAmount(\"999\").build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added - Finance\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance AMY \u003d new FinanceBuilder().withName(VALID_NAME_AMY).withAmount(VALID_AMOUNT_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Finance BOB \u003d new FinanceBuilder().withName(VALID_NAME_BOB).withAmount(VALID_AMOUNT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private TypicalFinance() {} // prevents instantiation"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical finances."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static FinanceAddressBook getTypicalFinanceAddressBook() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        FinanceAddressBook ab \u003d new FinanceAddressBook();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        for (Finance finance : getTypicalFinances()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            ab.addFinance(finance);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static List\u003cFinance\u003e getTypicalFinances() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(FINANCE_ALICE, FINANCE_BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 64
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalPersons.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Person} objects to be used in tests."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalPersons {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            .withPhone(\"94351253\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"311, Clementi Ave 2, #02-25\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added - Person\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private TypicalPersons() {} // prevents instantiation"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical persons."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AddressBook getTypicalAddressBook() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook ab \u003d new AddressBook();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            ab.addPerson(person);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cPerson\u003e getTypicalPersons() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 76,
      "ShengXue97": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalStudent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.Student;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelStudent.StudentAddressBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class containing a list of {@code Student} objects to be used in tests."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TypicalStudent {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student STUDENT_ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withCourse(\"Java Programming\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student STUDENT_BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withCourse(\"Java Programming\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withCourse(\"Java Programming\").build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withCourse(\"Java Programming\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withCourse(\"Java Programming\").build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withCourse(\"Java Programming\").build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withCourse(\"Java Programming\").build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withCourse(\"Java Programming\").build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withCourse(\"Java Programming\").build();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added - Student\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withCourse(VALID_COURSE_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private TypicalStudent() {} // prevents instantiation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical students."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static StudentAddressBook getTypicalStudentAddressBook() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        StudentAddressBook ab \u003d new StudentAddressBook();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        for (Student student : getTypicalStudents()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            ab.addStudent(student);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static List\u003cStudent\u003e getTypicalStudents() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(STUDENT_ALICE, STUDENT_BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 70
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalTeacher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.Teacher;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "import seedu.address.model.modelTeacher.TeacherAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " * A utility class containing a list of {@code Teacher} objects to be used in tests."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "public class TypicalTeacher {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher TEACHER_ALICE \u003d new TeacherBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withSalary(\"1000\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withPhone(\"94351253\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher TEACHER_BENSON \u003d new TeacherBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withAddress(\"311, Clementi Ave 2, #02-25\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withSalary(\"1000\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher CARL \u003d new TeacherBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"heinz@example.com\").withSalary(\"1000\").withAddress(\"wall street\").build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher DANIEL \u003d new TeacherBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"cornelia@example.com\").withSalary(\"1000\").withAddress(\"10th street\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher ELLE \u003d new TeacherBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"werner@example.com\").withSalary(\"1000\").withAddress(\"michegan ave\").build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher FIONA \u003d new TeacherBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"lydia@example.com\").withSalary(\"1000\").withAddress(\"little tokyo\").build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher GEORGE \u003d new TeacherBuilder().withName(\"George Best\").withPhone(\"9482442\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"anna@example.com\").withSalary(\"1000\").withAddress(\"4th street\").build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher HOON \u003d new TeacherBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"stefan@example.com\").withSalary(\"1000\").withAddress(\"little india\").build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher IDA \u003d new TeacherBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(\"hans@example.com\").withSalary(\"1000\").withAddress(\"chicago ave\").build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    // Manually added - Teacher\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher AMY \u003d new TeacherBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(VALID_EMAIL_AMY).withSalary(VALID_SALARY_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final Teacher BOB \u003d new TeacherBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .withEmail(VALID_EMAIL_BOB).withSalary(VALID_SALARY_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    private TypicalTeacher() {} // prevents instantiation"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical teachers."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static TeacherAddressBook getTypicalTeacherAddressBook() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        TeacherAddressBook ab \u003d new TeacherAddressBook();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        for (Teacher teacher : getTypicalTeachers()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "            ab.addTeacher(teacher);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    public static List\u003cTeacher\u003e getTypicalTeachers() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(TEACHER_ALICE, TEACHER_BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShengXue97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShengXue97": 81
    }
  }
]
